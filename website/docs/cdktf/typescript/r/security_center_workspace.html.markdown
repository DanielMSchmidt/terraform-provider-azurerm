---
subcategory: "Security Center"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_security_center_workspace"
description: |-
    Manages the subscription's Security Center Workspace.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_security_center_workspace

Manages the subscription's Security Center Workspace.

~> **NOTE:** Owner access permission is required.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "tfex-security-workspace",
      }
    );
    const azurermLogAnalyticsWorkspaceExample =
      new azurerm.logAnalyticsWorkspace.LogAnalyticsWorkspace(
        this,
        "example_1",
        {
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "tfex-security-workspace",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          sku: "PerGB2018",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermLogAnalyticsWorkspaceExample.overrideLogicalId("example");
    const azurermSecurityCenterWorkspaceExample =
      new azurerm.securityCenterWorkspace.SecurityCenterWorkspace(
        this,
        "example_2",
        {
          scope: "/subscriptions/00000000-0000-0000-0000-000000000000",
          workspaceId: cdktf.Token.asString(
            azurermLogAnalyticsWorkspaceExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSecurityCenterWorkspaceExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `scope` - (Required) The scope of VMs to send their security data to the desired workspace, unless overridden by a setting with more specific scope.

* `workspaceId` - (Required) The ID of the Log Analytics Workspace to save the data in.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The Security Center Workspace ID.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 60 minutes) Used when creating the Security Center Workspace.
* `update` - (Defaults to 60 minutes) Used when updating the Security Center Workspace.
* `read` - (Defaults to 5 minutes) Used when retrieving the Security Center Workspace.
* `delete` - (Defaults to 60 minutes) Used when deleting the Security Center Workspace.

## Import

The contact can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_security_center_workspace.example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Security/workspaceSettings/default
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-4387cf75adc34ef64303e1bee61f62e4afb989715af9cb5d961cea39acee99b6 -->