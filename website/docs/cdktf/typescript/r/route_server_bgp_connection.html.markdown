---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_route_server_bgp_connection"
description: |-
  Manages a BGP Connection for a Route Server.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_route_server_bgp_connection

Manages a Bgp Connection for a Route Server

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermVirtualNetworkExample =
      new azurerm.virtualNetwork.VirtualNetwork(this, "example_1", {
        addressSpace: ["10.0.0.0/16"],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-vn",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        tags: {
          environment: "Production",
        },
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualNetworkExample.overrideLogicalId("example");
    const azurermPublicIpExample = new azurerm.publicIp.PublicIp(
      this,
      "example_2",
      {
        allocationMethod: "Static",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-pip",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        sku: "Standard",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermPublicIpExample.overrideLogicalId("example");
    const azurermSubnetExample = new azurerm.subnet.Subnet(this, "example_3", {
      addressPrefixes: ["10.0.1.0/24"],
      name: "RouteServerSubnet",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      virtualNetworkName: cdktf.Token.asString(
        azurermVirtualNetworkExample.name
      ),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSubnetExample.overrideLogicalId("example");
    const azurermRouteServerExample = new azurerm.routeServer.RouteServer(
      this,
      "example_4",
      {
        branchToBranchTrafficEnabled: true,
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-routerserver",
        publicIpAddressId: cdktf.Token.asString(azurermPublicIpExample.id),
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        sku: "Standard",
        subnetId: cdktf.Token.asString(azurermSubnetExample.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermRouteServerExample.overrideLogicalId("example");
    const azurermRouteServerBgpConnectionExample =
      new azurerm.routeServerBgpConnection.RouteServerBgpConnection(
        this,
        "example_5",
        {
          name: "example-rs-bgpconnection",
          peerAsn: 65501,
          peerIp: "169.254.21.5",
          routeServerId: cdktf.Token.asString(azurermRouteServerExample.id),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermRouteServerBgpConnectionExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Route Server Bgp Connection. Changing this forces a new resource to be created.

* `routeServerId` - (Required) The ID of the Route Server within which this Bgp connection should be created. Changing this forces a new resource to be created.

* `peerAsn` - (Required) The peer autonomous system number for the Route Server Bgp Connection. Changing this forces a new resource to be created.

* `peerIp` - (Required) The peer ip address for the Route Server Bgp Connection. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Route Server Bgp Connection.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Route Server Bgp Connection.
* `read` - (Defaults to 5 minutes) Used when retrieving the Route Server Bgp Connection.
* `delete` - (Defaults to 30 minutes) Used when deleting the Route Server Bgp Connection.

## Import

Route Server Bgp Connections can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_route_server_bgp_connection.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/virtualHubs/routeServer1/bgpConnections/connection1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-b5170386b0a68b1ba58b95d3c4a1b61c5b2a71114ed6140a4230c604fea392c3 -->