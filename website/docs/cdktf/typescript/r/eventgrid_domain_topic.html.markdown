---
subcategory: "Messaging"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_eventgrid_domain_topic"
description: |-
  Manages an EventGrid Domain Topic
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_eventgrid_domain_topic

Manages an EventGrid Domain Topic

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermEventgridDomainExample =
      new azurerm.eventgridDomain.EventgridDomain(this, "example_1", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "my-eventgrid-domain",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        tags: {
          environment: "Production",
        },
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermEventgridDomainExample.overrideLogicalId("example");
    const azurermEventgridDomainTopicExample =
      new azurerm.eventgridDomainTopic.EventgridDomainTopic(this, "example_2", {
        domainName: cdktf.Token.asString(azurermEventgridDomainExample.name),
        name: "my-eventgrid-domain-topic",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermEventgridDomainTopicExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the EventGrid Domain Topic resource. Changing this forces a new resource to be created.

* `domainName` - (Required) Specifies the name of the EventGrid Domain. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the resource group in which the EventGrid Domain exists. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the EventGrid Domain Topic.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the EventGrid Domain Topic.
* `update` - (Defaults to 30 minutes) Used when updating the EventGrid Domain Topic.
* `read` - (Defaults to 5 minutes) Used when retrieving the EventGrid Domain Topic.
* `delete` - (Defaults to 30 minutes) Used when deleting the EventGrid Domain Topic.

## Import

EventGrid Domain Topics can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_eventgrid_domain_topic.topic1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.EventGrid/domains/domain1/topics/topic1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-43d8d8eeb987f4616d282438454422d206fc7bcb7c810c11daf91f67ff01904c -->