---
subcategory: "Desktop Virtualization"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_virtual_desktop_workspace_application_group_association"
description: |-
  Manages a Virtual Desktop Workspace Application Group Association.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_virtual_desktop_workspace_application_group_association

Manages a Virtual Desktop Workspace Application Group Association.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new azurerm.provider.AzurermProvider(this, "azurerm", {
      features: {},
    });
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "rg-example-virtualdesktop",
      }
    );
    const azurermVirtualDesktopHostPoolPooledbreadthfirst =
      new azurerm.virtualDesktopHostPool.VirtualDesktopHostPool(
        this,
        "pooledbreadthfirst",
        {
          loadBalancerType: "BreadthFirst",
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "pooledbreadthfirst",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          type: "Pooled",
        }
      );
    const azurermVirtualDesktopWorkspaceWorkspace =
      new azurerm.virtualDesktopWorkspace.VirtualDesktopWorkspace(
        this,
        "workspace",
        {
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "workspace",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    const azurermVirtualDesktopApplicationGroupRemoteapp =
      new azurerm.virtualDesktopApplicationGroup.VirtualDesktopApplicationGroup(
        this,
        "remoteapp",
        {
          hostPoolId: cdktf.Token.asString(
            azurermVirtualDesktopHostPoolPooledbreadthfirst.id
          ),
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "remoteapp",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          type: "RemoteApp",
        }
      );
    new azurerm.virtualDesktopWorkspaceApplicationGroupAssociation.VirtualDesktopWorkspaceApplicationGroupAssociation(
      this,
      "workspaceremoteapp",
      {
        applicationGroupId: cdktf.Token.asString(
          azurermVirtualDesktopApplicationGroupRemoteapp.id
        ),
        workspaceId: cdktf.Token.asString(
          azurermVirtualDesktopWorkspaceWorkspace.id
        ),
      }
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `workspaceId` - (Required) The resource ID for the Virtual Desktop Workspace. Changing this forces a new resource to be created.

* `applicationGroupId` - (Required) The resource ID for the Virtual Desktop Application Group. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Virtual Desktop Workspace Application Group association.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 60 minutes) Used when creating the Virtual Desktop Workspace.
* `update` - (Defaults to 60 minutes) Used when updating the Virtual Desktop Workspace.
* `read` - (Defaults to 5 minutes) Used when retrieving the Virtual Desktop Workspace.
* `delete` - (Defaults to 60 minutes) Used when deleting the Virtual Desktop Workspace.

## Import

Associations between Virtual Desktop Workspaces and Virtual Desktop Application Groups can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_virtual_desktop_workspace_application_group_association.association1 "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup1/providers/Microsoft.DesktopVirtualization/workspaces/myworkspace|/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup1/providers/Microsoft.DesktopVirtualization/applicationGroups/myapplicationgroup"
```

-> **NOTE:** This ID is specific to Terraform - and is of the format `{virtualDesktopWorkspaceId}|{virtualDesktopApplicationGroupId}`.

<!-- cache-key: cdktf-0.17.0-pre.15 input-542c475178697ae2692f96eb0130cb5e17ee31f7f0de1fda9fa5c1257fdfa46f -->