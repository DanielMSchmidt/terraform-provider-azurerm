---
subcategory: "Data Factory"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_data_factory_trigger_tumbling_window"
description: |-
  Manages a Tumbling Window Trigger inside an Azure Data Factory.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_data_factory_trigger_tumbling_window

Manages a Tumbling Window Trigger inside an Azure Data Factory.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermDataFactoryExample = new azurerm.dataFactory.DataFactory(
      this,
      "example_1",
      {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataFactoryExample.overrideLogicalId("example");
    const azurermDataFactoryPipelineExample =
      new azurerm.dataFactoryPipeline.DataFactoryPipeline(this, "example_2", {
        dataFactoryId: cdktf.Token.asString(azurermDataFactoryExample.id),
        name: "example",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataFactoryPipelineExample.overrideLogicalId("example");
    const azurermDataFactoryTriggerTumblingWindowExample =
      new azurerm.dataFactoryTriggerTumblingWindow.DataFactoryTriggerTumblingWindow(
        this,
        "example_3",
        {
          additionalProperties: {
            bar: "value2",
            foo: "value1",
          },
          annotations: ["example1", "example2", "example3"],
          dataFactoryId: cdktf.Token.asString(azurermDataFactoryExample.id),
          delay: "16:00:00",
          description: "example description",
          endTime: "2022-09-21T08:00:00Z",
          frequency: "Minute",
          interval: 15,
          name: "example",
          pipeline: {
            name: cdktf.Token.asString(azurermDataFactoryPipelineExample.name),
            parameters: {
              Env: "Prod",
            },
          },
          retry: {
            count: 1,
            interval: 30,
          },
          startTime: "2022-09-21T00:00:00Z",
          triggerDependency: [
            {
              offset: "-24:00:00",
              size: "24:00:00",
            },
          ],
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataFactoryTriggerTumblingWindowExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Data Factory Tumbling Window Trigger. Changing this forces a new resource to be created.

* `dataFactoryId` - (Required) The ID of Data Factory in which to associate the Trigger with. Changing this forces a new resource.

* `frequency` - (Required) Specifies the frequency of Tumbling Window. Possible values are `hour`, `minute` and `month`. Changing this forces a new resource.

* `interval` - (Required) Specifies the interval of Tumbling Window. Changing this forces a new resource.

* `pipeline` - (Required) A `pipeline` block as defined below.

* `startTime` - (Required) Specifies the start time of Tumbling Window, formatted as an RFC3339 string. Changing this forces a new resource.

* `activated` - (Optional) Specifies if the Data Factory Tumbling Window Trigger is activated. Defaults to `true`.

* `additionalProperties` - (Optional) A map of additional properties to associate with the Data Factory Tumbling Window Trigger.

* `annotations` - (Optional) List of tags that can be used for describing the Data Factory Tumbling Window Trigger.

* `delay` - (Optional) Specifies how long the trigger waits before triggering new run. formatted as an `dHh:mm:ss`.

* `description` - (Optional) The description for the Data Factory Tumbling Window Trigger.

* `endTime` - (Optional) Specifies the end time of Tumbling Window, formatted as an RFC3339 string.

* `maxConcurrency` - (Optional) The max number for simultaneous trigger run fired by Tumbling Window. Possible values are between `1` and `50`. Defaults to `50`.

* `retry` - (Optional) A `retry` block as defined below.

* `triggerDependency` - (Optional) One or more `triggerDependency` block as defined below.

---

A `pipeline` block supports the following:

* `name` - (Required) The Data Factory Pipeline name that the trigger will act on.

* `parameters` - (Optional) The Data Factory Pipeline parameters that the trigger will act on.

---

A `retry` block supports the following:

* `count` - (Required) The maximum retry attempts if the pipeline run failed.

* `interval` - (Optional) The Interval in seconds between each retry if the pipeline run failed. Defaults to `30`.

---

A `triggerDependency` block supports the following:

* `offset` - (Optional) The offset of the dependency trigger. Must be in Timespan format (Â±hh:mm:ss) and must be a negative offset for a self dependency.
  
* `size` - (Optional) The size of the dependency tumbling window. Must be in Timespan format (hh:mm:ss).

* `triggerName` - (Optional) The dependency trigger name. If not specified, it will use self dependency.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Data Factory Tumbling Window Trigger.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Data Factory Tumbling Window Trigger.
* `update` - (Defaults to 30 minutes) Used when updating the Data Factory Tumbling Window Trigger.
* `read` - (Defaults to 5 minutes) Used when retrieving the Data Factory Tumbling Window Trigger.
* `delete` - (Defaults to 30 minutes) Used when deleting the Data Factory Tumbling Window Trigger.

## Import

Data Factory Tumbling Window Trigger can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_data_factory_trigger_tumbling_window.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.DataFactory/factories/example/triggers/example
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-7e74dd9c31edc9bd5c82d294b3f5e85dcd9312ca6c3063b9695ef984d362cf65 -->