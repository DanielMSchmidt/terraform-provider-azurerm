---
subcategory: "Template"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_subscription_template_deployment"
description: |-
  Manages a Subscription Template Deployment.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_subscription_template_deployment

Manages a Subscription Template Deployment.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new azurerm.subscriptionTemplateDeployment.SubscriptionTemplateDeployment(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-deployment",
        templateContent:
          ' {\n   "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",\n   "contentVersion": "1.0.0.0",\n   "parameters": {},\n   "variables": {},\n   "resources": [\n     {\n       "type": "Microsoft.Resources/resourceGroups",\n       "apiVersion": "2018-05-01",\n       "location": "West Europe",\n       "name": "some-resource-group",\n       "properties": {}\n     }\n   ]\n }\n',
      }
    );
  }
}

```

## Arguments Reference

The following arguments are supported:

* `location` - (Required) The Azure Region where the Subscription Template Deployment should exist. Changing this forces a new Subscription Template Deployment to be created.

* `name` - (Required) The name which should be used for this Subscription Template Deployment. Changing this forces a new Subscription Template Deployment to be created.

---

* `debugLevel` - (Optional) The Debug Level which should be used for this Subscription Template Deployment. Possible values are `none`, `requestContent`, `responseContent` and `requestContent, responseContent`.

* `templateContent` - (Optional) The contents of the ARM Template which should be deployed into this Subscription.

* `templateSpecVersionId` - (Optional) The ID of the Template Spec Version to deploy into the Subscription. Cannot be specified with `templateContent`.

* `parametersContent` - (Optional) The contents of the ARM Template parameters file - containing a JSON list of parameters.

* `tags` - (Optional) A mapping of tags which should be assigned to the Subscription Template Deployment.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Subscription Template Deployment.

* `outputContent` - The JSON Content of the Outputs of the ARM Template Deployment.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 3 hours) Used when creating the Subscription Template Deployment.
* `read` - (Defaults to 5 minutes) Used when retrieving the Subscription Template Deployment.
* `update` - (Defaults to 3 hours) Used when updating the Subscription Template Deployment.
* `delete` - (Defaults to 3 hours) Used when deleting the Subscription Template Deployment.

## Import

Subscription Template Deployments can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_subscription_template_deployment.example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Resources/deployments/template1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-ec68c44e5bd5d7538d5086b2d74af012914f7da55063bdf849195e63ac512e8f -->