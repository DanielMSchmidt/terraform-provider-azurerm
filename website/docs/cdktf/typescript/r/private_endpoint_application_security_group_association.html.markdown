---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_private_endpoint_application_security_group_association"
description: |-
  Manages an association between Private Endpoint and Application Security Group.

---


<!-- Please do not edit this file, it is generated. -->
# azurerm_private_endpoint_application_security_group_association

Manages an association between Private Endpoint and Application Security Group.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new azurerm.provider.AzurermProvider(this, "azurerm", {
      features: {},
    });
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-PEASGAsso",
      }
    );
    const azurermVirtualNetworkExample =
      new azurerm.virtualNetwork.VirtualNetwork(this, "example_2", {
        addressSpace: ["10.5.0.0/16"],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "examplevnet",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualNetworkExample.overrideLogicalId("example");
    const dataAzurermSubscriptionCurrent =
      new azurerm.dataAzurermSubscription.DataAzurermSubscription(
        this,
        "current",
        {}
      );
    const azurermApplicationSecurityGroupExample =
      new azurerm.applicationSecurityGroup.ApplicationSecurityGroup(
        this,
        "example_4",
        {
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "example",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermApplicationSecurityGroupExample.overrideLogicalId("example");
    const azurermPublicIpExample = new azurerm.publicIp.PublicIp(
      this,
      "example_5",
      {
        allocationMethod: "Static",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "examplepip",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        sku: "Standard",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermPublicIpExample.overrideLogicalId("example");
    const azurermSubnetEndpoint = new azurerm.subnet.Subnet(this, "endpoint", {
      addressPrefixes: ["10.5.2.0/24"],
      enforcePrivateLinkEndpointNetworkPolicies: true,
      name: "examplenetendpoint",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      virtualNetworkName: cdktf.Token.asString(
        azurermVirtualNetworkExample.name
      ),
    });
    const azurermSubnetService = new azurerm.subnet.Subnet(this, "service", {
      addressPrefixes: ["10.5.1.0/24"],
      enforcePrivateLinkServiceNetworkPolicies: true,
      name: "examplenetservice",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      virtualNetworkName: cdktf.Token.asString(
        azurermVirtualNetworkExample.name
      ),
    });
    const azurermLbExample = new azurerm.lb.Lb(this, "example_8", {
      frontendIpConfiguration: [
        {
          name: cdktf.Token.asString(azurermPublicIpExample.name),
          publicIpAddressId: cdktf.Token.asString(azurermPublicIpExample.id),
        },
      ],
      location: cdktf.Token.asString(azurermResourceGroupExample.location),
      name: "examplelb",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      sku: "Standard",
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermLbExample.overrideLogicalId("example");
    const azurermPrivateLinkServiceExample =
      new azurerm.privateLinkService.PrivateLinkService(this, "example_9", {
        autoApprovalSubscriptionIds: [
          cdktf.Token.asString(dataAzurermSubscriptionCurrent.subscriptionId),
        ],
        loadBalancerFrontendIpConfigurationIds: [
          cdktf.Token.asString(
            cdktf.propertyAccess(azurermLbExample.frontendIpConfiguration, [
              "0",
              "id",
            ])
          ),
        ],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "examplePLS",
        natIpConfiguration: [
          {
            name: "primaryIpConfiguration",
            primary: true,
            subnetId: cdktf.Token.asString(azurermSubnetService.id),
          },
        ],
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        visibilitySubscriptionIds: [
          cdktf.Token.asString(dataAzurermSubscriptionCurrent.subscriptionId),
        ],
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermPrivateLinkServiceExample.overrideLogicalId("example");
    const azurermPrivateEndpointExample =
      new azurerm.privateEndpoint.PrivateEndpoint(this, "example_10", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-privatelink",
        privateServiceConnection: {
          isManualConnection: false,
          name: cdktf.Token.asString(azurermPrivateLinkServiceExample.name),
          privateConnectionResourceId: cdktf.Token.asString(
            azurermPrivateLinkServiceExample.id
          ),
        },
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        subnetId: cdktf.Token.asString(azurermSubnetEndpoint.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermPrivateEndpointExample.overrideLogicalId("example");
    const azurermPrivateEndpointApplicationSecurityGroupAssociationExample =
      new azurerm.privateEndpointApplicationSecurityGroupAssociation.PrivateEndpointApplicationSecurityGroupAssociation(
        this,
        "example_11",
        {
          applicationSecurityGroupId: cdktf.Token.asString(
            azurermApplicationSecurityGroupExample.id
          ),
          privateEndpointId: cdktf.Token.asString(
            azurermPrivateEndpointExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermPrivateEndpointApplicationSecurityGroupAssociationExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `applicationSecurityGroupId` - (Required) The id of application security group to associate. Changing this forces a new resource to be created.

* `privateEndpointId` - (Required) The id of private endpoint to associate. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The (Terraform specific) ID of the association between Private Endpoint and Application Security Group.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the association between Private Endpoint and Application Security Group.
* `read` - (Defaults to 5 minutes) Used when retrieving the association between Private Endpoint and Application Security Group.
* `delete` - (Defaults to 30 minutes) Used when deleting the association between Private Endpoint and Application Security Group.

## Import

Associations between Private Endpoint and Application Security Group can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_private_endpoint_application_security_group_association.association1 "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/privateEndpoints/endpoints1|/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/applicationSecurityGroups/securityGroup1",
```

-> **NOTE:** This ID is specific to Terraform - and is of the format `{privateEndpointId}|{applicationSecurityGroupId}`.

<!-- cache-key: cdktf-0.17.0-pre.15 input-d9389af3e3597a9eec6f199bcb80f89ff1f458f9862ef163edd91cb9353907d8 -->