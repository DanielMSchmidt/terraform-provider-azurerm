---
subcategory: "Log Analytics"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_log_analytics_cluster_customer_managed_key"
description: |-
  Manages a Log Analytics Cluster Customer Managed Key.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_log_analytics_cluster_customer_managed_key

Manages a Log Analytics Cluster Customer Managed Key.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new azurerm.provider.AzurermProvider(this, "azurerm", {
      features: {},
    });
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const dataAzurermClientConfigCurrent =
      new azurerm.dataAzurermClientConfig.DataAzurermClientConfig(
        this,
        "current",
        {}
      );
    const azurermLogAnalyticsClusterExample =
      new azurerm.logAnalyticsCluster.LogAnalyticsCluster(this, "example_3", {
        identity: {
          type: "SystemAssigned",
        },
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-cluster",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermLogAnalyticsClusterExample.overrideLogicalId("example");
    const azurermKeyVaultExample = new azurerm.keyVault.KeyVault(
      this,
      "example_4",
      {
        accessPolicy: [
          {
            keyPermissions: ["Create", "Get", "GetRotationPolicy"],
            objectId: cdktf.Token.asString(
              dataAzurermClientConfigCurrent.objectId
            ),
            secretPermissions: ["Set"],
            tenantId: cdktf.Token.asString(
              dataAzurermClientConfigCurrent.tenantId
            ),
          },
          {
            keyPermissions: ["Get", "Unwrapkey", "Wrapkey"],
            objectId: cdktf.Token.asString(
              cdktf.propertyAccess(azurermLogAnalyticsClusterExample.identity, [
                "0",
                "principal_id",
              ])
            ),
            tenantId: cdktf.Token.asString(
              cdktf.propertyAccess(azurermLogAnalyticsClusterExample.identity, [
                "0",
                "tenant_id",
              ])
            ),
          },
        ],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "keyvaultkeyexample",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        skuName: "premium",
        tags: {
          environment: "Production",
        },
        tenantId: cdktf.Token.asString(dataAzurermClientConfigCurrent.tenantId),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermKeyVaultExample.overrideLogicalId("example");
    const azurermKeyVaultKeyExample = new azurerm.keyVaultKey.KeyVaultKey(
      this,
      "example_5",
      {
        keyOpts: [
          "decrypt",
          "encrypt",
          "sign",
          "unwrapKey",
          "verify",
          "wrapKey",
        ],
        keySize: 2048,
        keyType: "RSA",
        keyVaultId: cdktf.Token.asString(azurermKeyVaultExample.id),
        name: "generated-certificate",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermKeyVaultKeyExample.overrideLogicalId("example");
    const azurermLogAnalyticsClusterCustomerManagedKeyExample =
      new azurerm.logAnalyticsClusterCustomerManagedKey.LogAnalyticsClusterCustomerManagedKey(
        this,
        "example_6",
        {
          keyVaultKeyId: cdktf.Token.asString(azurermKeyVaultKeyExample.id),
          logAnalyticsClusterId: cdktf.Token.asString(
            azurermLogAnalyticsClusterExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermLogAnalyticsClusterCustomerManagedKeyExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Arguments Reference

The following arguments are supported:

* `keyVaultKeyId` - (Required) The ID of the Key Vault Key to use for encryption.

* `logAnalyticsClusterId` - (Required) The ID of the Log Analytics Cluster. Changing this forces a new Log Analytics Cluster Customer Managed Key to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Log Analytics Cluster Customer Managed Key.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 6 hours) Used when creating the Log Analytics Cluster Customer Managed Key.
* `read` - (Defaults to 5 minutes) Used when retrieving the Log Analytics Cluster Customer Managed Key.
* `update` - (Defaults to 6 hours) Used when updating the Log Analytics Cluster Customer Managed Key.
* `delete` - (Defaults to 30 minutes) Used when deleting the Log Analytics Cluster Customer Managed Key.

## Import

Log Analytics Cluster Customer Managed Keys can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_log_analytics_cluster_customer_managed_key.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.OperationalInsights/clusters/cluster1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-43750c0c0f3a5ace8a7c5abb559f9499cb76d7e9826b2d1471fd3be71565065f -->