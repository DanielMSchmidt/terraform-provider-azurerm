---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_nat_gateway"
description: |-
  Manages a Azure NAT Gateway.
---

<!-- Please do not edit this file, it is generated. -->
# azurerm_nat_gateway

Manages a Azure NAT Gateway.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "nat-gateway-example-rg",
      }
    );
    const azurermNatGatewayExample = new azurerm.natGateway.NatGateway(
      this,
      "example_1",
      {
        idleTimeoutInMinutes: 10,
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "nat-Gateway",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        skuName: "Standard",
        zones: ["1"],
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNatGatewayExample.overrideLogicalId("example");
    const azurermPublicIpExample = new azurerm.publicIp.PublicIp(
      this,
      "example_2",
      {
        allocationMethod: "Static",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "nat-gateway-publicIP",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        sku: "Standard",
        zones: ["1"],
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermPublicIpExample.overrideLogicalId("example");
    const azurermPublicIpPrefixExample =
      new azurerm.publicIpPrefix.PublicIpPrefix(this, "example_3", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "nat-gateway-publicIPPrefix",
        prefixLength: 30,
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        zones: ["1"],
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermPublicIpPrefixExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the NAT Gateway. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) Specifies the name of the Resource Group in which the NAT Gateway should exist. Changing this forces a new resource to be created.

* `location` - (Required) Specifies the supported Azure location where the NAT Gateway should exist. Changing this forces a new resource to be created.

* `idleTimeoutInMinutes` - (Optional) The idle timeout which should be used in minutes. Defaults to `4`.

* `skuName` - (Optional) The SKU which should be used. At this time the only supported value is `standard`. Defaults to `standard`.

* `tags` - (Optional) A mapping of tags to assign to the resource. 

* `zones` - (Optional) A list of Availability Zones in which this NAT Gateway should be located. Changing this forces a new NAT Gateway to be created.

-> **NOTE:** Only one Availability Zone can be defined. For more information, please check out the [Azure documentation](https://learn.microsoft.com/en-us/azure/nat-gateway/nat-overview#availability-zones)

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the NAT Gateway.

* `resourceGuid` - The resource GUID property of the NAT Gateway.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 60 minutes) Used when creating the NAT Gateway.
* `update` - (Defaults to 60 minutes) Used when updating the NAT Gateway.
* `read` - (Defaults to 5 minutes) Used when retrieving the NAT Gateway.
* `delete` - (Defaults to 60 minutes) Used when deleting the NAT Gateway.

## Import

NAT Gateway can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_nat_gateway.test /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/natGateways/gateway1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-570defab07abd4f6bcb78c25bd49e9c87102eead5af2b2eadc2d7146c9cfcf34 -->