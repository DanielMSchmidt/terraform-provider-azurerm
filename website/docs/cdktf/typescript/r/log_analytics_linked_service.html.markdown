---
subcategory: "Log Analytics"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_log_analytics_linked_service"
description: |-
  Manages a Log Analytics Linked Service.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_log_analytics_linked_service

Manages a Log Analytics Linked Service.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "resourcegroup-01",
      }
    );
    const azurermAutomationAccountExample =
      new azurerm.automationAccount.AutomationAccount(this, "example_1", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "automation-01",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        skuName: "Basic",
        tags: {
          environment: "development",
        },
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermAutomationAccountExample.overrideLogicalId("example");
    const azurermLogAnalyticsWorkspaceExample =
      new azurerm.logAnalyticsWorkspace.LogAnalyticsWorkspace(
        this,
        "example_2",
        {
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "workspace-01",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          retentionInDays: 30,
          sku: "PerGB2018",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermLogAnalyticsWorkspaceExample.overrideLogicalId("example");
    const azurermLogAnalyticsLinkedServiceExample =
      new azurerm.logAnalyticsLinkedService.LogAnalyticsLinkedService(
        this,
        "example_3",
        {
          readAccessId: cdktf.Token.asString(
            azurermAutomationAccountExample.id
          ),
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          workspaceId: cdktf.Token.asString(
            azurermLogAnalyticsWorkspaceExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermLogAnalyticsLinkedServiceExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `resourceGroupName` - (Required) The name of the resource group in which the Log Analytics Linked Service is created. Changing this forces a new resource to be created.

* `workspaceId` - (Required) The ID of the Log Analytics Workspace that will contain the Log Analytics Linked Service resource. 

* `readAccessId` - (Optional) The ID of the readable Resource that will be linked to the workspace. This should be used for linking to an Automation Account resource.

* `writeAccessId` - (Optional) The ID of the writable Resource that will be linked to the workspace. This should be used for linking to a Log Analytics Cluster resource.

~> **NOTE:** You must define at least one of the above access resource id attributes (e.g. `readAccessId` or `writeAccessId`).

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The Log Analytics Linked Service ID.

* `name` - The generated name of the Linked Service. The format for this attribute is always `<workspace name>/<linked service type>`(e.g. `workspace1/automation` or `workspace1/cluster`)

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Log Analytics Workspace.
* `update` - (Defaults to 30 minutes) Used when updating the Log Analytics Workspace.
* `read` - (Defaults to 5 minutes) Used when retrieving the Log Analytics Workspace.
* `delete` - (Defaults to 30 minutes) Used when deleting the Log Analytics Workspace.

## Import

Log Analytics Workspaces can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_log_analytics_linked_service.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.OperationalInsights/workspaces/workspace1/linkedServices/Automation
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-a5622dfe89037392df614db35447aaf8a76c5be968956538098d53b51acfb4b1 -->