---
subcategory: "Container Apps"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_container_app_environment_storage"
description: |-
  Manages a Container App Environment Storage.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_container_app_environment_storage

Manages a Container App Environment Storage.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermStorageAccountExample =
      new azurerm.storageAccount.StorageAccount(this, "example_1", {
        accountReplicationType: "LRS",
        accountTier: "Standard",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "azureteststorage",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageAccountExample.overrideLogicalId("example");
    const azurermStorageShareExample = new azurerm.storageShare.StorageShare(
      this,
      "example_2",
      {
        name: "sharename",
        quota: 5,
        storageAccountName: cdktf.Token.asString(
          azurermStorageAccountExample.name
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageShareExample.overrideLogicalId("example");
    const azurermLogAnalyticsWorkspaceExample =
      new azurerm.logAnalyticsWorkspace.LogAnalyticsWorkspace(
        this,
        "example_3",
        {
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "acctest-01",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          retentionInDays: 30,
          sku: "PerGB2018",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermLogAnalyticsWorkspaceExample.overrideLogicalId("example");
    const azurermContainerAppEnvironmentExample =
      new azurerm.containerAppEnvironment.ContainerAppEnvironment(
        this,
        "example_4",
        {
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          logAnalyticsWorkspaceId: cdktf.Token.asString(
            azurermLogAnalyticsWorkspaceExample.id
          ),
          name: "myEnvironment",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermContainerAppEnvironmentExample.overrideLogicalId("example");
    const azurermContainerAppEnvironmentStorageExample =
      new azurerm.containerAppEnvironmentStorage.ContainerAppEnvironmentStorage(
        this,
        "example_5",
        {
          accessKey: cdktf.Token.asString(
            azurermStorageAccountExample.primaryAccessKey
          ),
          accessMode: "ReadOnly",
          accountName: cdktf.Token.asString(azurermStorageAccountExample.name),
          containerAppEnvironmentId: cdktf.Token.asString(
            azurermContainerAppEnvironmentExample.id
          ),
          name: "mycontainerappstorage",
          shareName: cdktf.Token.asString(azurermStorageShareExample.name),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermContainerAppEnvironmentStorageExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name for this Container App Environment Storage. Changing this forces a new resource to be created.

* `containerAppEnvironmentId` - (Required) The ID of the Container App Environment to which this storage belongs. Changing this forces a new resource to be created.

* `accountName` - (Required) The Azure Storage Account in which the Share to be used is located. Changing this forces a new resource to be created.

* `accessKey` - (Required) The Storage Account Access Key.

* `shareName` - (Required) The name of the Azure Storage Share to use. Changing this forces a new resource to be created.

* `accessMode` - (Required) The access mode to connect this storage to the Container App. Possible values include `readOnly` and `readWrite`. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Container App Environment Storage


## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Container App Environment Storage.
* `update` - (Defaults to 30 minutes) Used when updating the Container App Environment Storage.
* `read` - (Defaults to 5 minutes) Used when retrieving the Container App Environment Storage.
* `delete` - (Defaults to 30 minutes) Used when deleting the Container App Environment Storage.

## Import

A Container App Environment Storage can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_container_app_environment_storage.example "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.App/managedEnvironments/myEnvironment/storages/mystorage"
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-139d644873c989f1a92067898f03191a52a9b0915718872fed32db75c0d1386a -->