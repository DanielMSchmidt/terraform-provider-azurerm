---
subcategory: "DataProtection"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_data_protection_backup_policy_postgresql"
description: |-
  Manages a Backup Policy to back up PostgreSQL.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_data_protection_backup_policy_postgresql

Manages a Backup Policy to back up PostgreSQL.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermDataProtectionBackupVaultExample =
      new azurerm.dataProtectionBackupVault.DataProtectionBackupVault(
        this,
        "example_1",
        {
          datastoreType: "VaultStore",
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "example-backup-vault",
          redundancy: "LocallyRedundant",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataProtectionBackupVaultExample.overrideLogicalId("example");
    const azurermDataProtectionBackupPolicyPostgresqlExample =
      new azurerm.dataProtectionBackupPolicyPostgresql.DataProtectionBackupPolicyPostgresql(
        this,
        "example_2",
        {
          backupRepeatingTimeIntervals: ["R/2021-05-23T02:30:00+00:00/P1W"],
          defaultRetentionDuration: "P4M",
          name: "example-backup-policy",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          retentionRule: [
            {
              criteria: {
                absoluteCriteria: "FirstOfWeek",
              },
              duration: "P6M",
              name: "weekly",
              priority: 20,
            },
            {
              criteria: {
                daysOfWeek: ["Thursday"],
                scheduledBackupTimes: ["2021-05-23T02:30:00Z"],
              },
              duration: "P1W",
              name: "thursday",
              priority: 25,
            },
            {
              criteria: {
                daysOfWeek: ["Tuesday"],
                scheduledBackupTimes: ["2021-05-23T02:30:00Z"],
                weeksOfMonth: ["First", "Last"],
              },
              duration: "P1D",
              name: "monthly",
              priority: 15,
            },
          ],
          vaultName: cdktf.Token.asString(
            azurermDataProtectionBackupVaultExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataProtectionBackupPolicyPostgresqlExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Backup Policy PostgreSQL. Changing this forces a new Backup Policy PostgreSQL to be created.

* `resourceGroupName` - (Required) The name of the Resource Group where the Backup Policy PostgreSQL should exist. Changing this forces a new Backup Policy PostgreSQL to be created.

* `vaultName` - (Required) The name of the Backup Vault where the Backup Policy PostgreSQL should exist. Changing this forces a new Backup Policy PostgreSQL to be created.

* `backupRepeatingTimeIntervals` - (Required) Specifies a list of repeating time interval. It supports weekly back. It should follow `ISO 8601` repeating time interval. Changing this forces a new Backup Policy PostgreSQL to be created.
  
* `defaultRetentionDuration` - (Required) The duration of default retention rule. It should follow `ISO 8601` duration format. Changing this forces a new Backup Policy PostgreSQL to be created.

---

* `retentionRule` - (Optional) One or more `retentionRule` blocks as defined below. Changing this forces a new Backup Policy PostgreSQL to be created.

---

A `retentionRule` block supports the following:

* `name` - (Required) The name which should be used for this retention rule. Changing this forces a new Backup Policy PostgreSQL to be created.

* `duration` - (Required) Duration after which the backup is deleted. It should follow `ISO 8601` duration format. Changing this forces a new Backup Policy PostgreSQL to be created.

* `criteria` - (Required) A `criteria` block as defined below. Changing this forces a new Backup Policy PostgreSQL to be created.

* `priority` - (Required) Specifies the priority of the rule. The priority number must be unique for each rule. The lower the priority number, the higher the priority of the rule. Changing this forces a new Backup Policy PostgreSQL to be created.

---

A `criteria` block supports the following:

* `absoluteCriteria` - (Optional) Possible values are `allBackup`, `firstOfDay`, `firstOfWeek`, `firstOfMonth` and `firstOfYear`. These values mean the first successful backup of the day/week/month/year. Changing this forces a new Backup Policy PostgreSQL to be created.

* `daysOfWeek` - (Optional) Possible values are `monday`, `tuesday`, `thursday`, `friday`, `saturday` and `sunday`. Changing this forces a new Backup Policy PostgreSQL to be created.

* `monthsOfYear` - (Optional) Possible values are `january`, `february`, `march`, `april`, `may`, `june`, `july`, `august`, `september`, `october`, `november` and `december`. Changing this forces a new Backup Policy PostgreSQL to be created.

* `scheduledBackupTimes` - (Optional) Specifies a list of backup times for backup in the `rfc3339` format. Changing this forces a new Backup Policy PostgreSQL to be created.

* `weeksOfMonth` - (Optional) Possible values are `first`, `second`, `third`, `fourth` and `last`. Changing this forces a new Backup Policy PostgreSQL to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Backup Policy PostgreSQL.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Backup Policy PostgreSQL.
* `read` - (Defaults to 5 minutes) Used when retrieving the Backup Policy PostgreSQL.
* `update` - (Defaults to 30 minutes) Used when updating the Backup Policy PostgreSQL.
* `delete` - (Defaults to 30 minutes) Used when deleting the Backup Policy PostgreSQL.

## Import

Backup Policy PostgreSQL's can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_data_protection_backup_policy_postgresql.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1/backupPolicies/backupPolicy1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-5d28e63a7854dfddd2fb734ef915ed203358d82971da7be37b678554ca2194d0 -->