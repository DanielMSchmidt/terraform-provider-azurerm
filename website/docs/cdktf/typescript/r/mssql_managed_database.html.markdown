---
subcategory: "Database"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_mssql_managed_database"
description: |-
  Manages an Azure SQL Azure Managed Database.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_mssql_managed_database

Manages an Azure SQL Azure Managed Database for a SQL Managed Instance.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example",
      }
    );
    const azurermVirtualNetworkExample =
      new azurerm.virtualNetwork.VirtualNetwork(this, "example_1", {
        addressSpace: ["10.0.0.0/16"],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualNetworkExample.overrideLogicalId("example");
    const azurermSubnetExample = new azurerm.subnet.Subnet(this, "example_2", {
      addressPrefixes: ["10.0.2.0/24"],
      name: "example",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      virtualNetworkName: cdktf.Token.asString(
        azurermVirtualNetworkExample.name
      ),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSubnetExample.overrideLogicalId("example");
    const azurermMssqlManagedInstanceExample =
      new azurerm.mssqlManagedInstance.MssqlManagedInstance(this, "example_3", {
        administratorLogin: "msadministrator",
        administratorLoginPassword: "thisIsDog11",
        licenseType: "BasePrice",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "managedsqlinstance",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        skuName: "GP_Gen5",
        storageSizeInGb: 32,
        subnetId: cdktf.Token.asString(azurermSubnetExample.id),
        vcores: 4,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMssqlManagedInstanceExample.overrideLogicalId("example");
    const azurermMssqlManagedDatabaseExample =
      new azurerm.mssqlManagedDatabase.MssqlManagedDatabase(this, "example_4", {
        managedInstanceId: cdktf.Token.asString(
          azurermMssqlManagedInstanceExample.id
        ),
        name: "example",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMssqlManagedDatabaseExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Managed Database to create. Changing this forces a new resource to be created.

* `managedInstanceId` - (Required) The ID of the Azure SQL Managed Instance on which to create this Managed Database. Changing this forces a new resource to be created.

* `longTermRetentionPolicy` - (Optional) A `longTermRetentionPolicy` block as defined below.

* `shortTermRetentionDays` - (Optional) The backup retention period in days. This is how many days Point-in-Time Restore will be supported.

---

A `longTermRetentionPolicy` block supports the following:

* `weeklyRetention` - (Optional) The weekly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 520 weeks. e.g. `p1Y`, `p1M`, `p1W` or `p7D`.
* `monthlyRetention` - (Optional) The monthly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 120 months. e.g. `p1Y`, `p1M`, `p4W` or `p30D`.
* `yearlyRetention` - (Optional) The yearly retention policy for an LTR backup in an ISO 8601 format. Valid value is between 1 to 10 years. e.g. `p1Y`, `p12M`, `p52W` or `p365D`.
* `weekOfYear` - (Optional) The week of year to take the yearly backup. Value has to be between `1` and `52`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The Azure SQL Managed Database ID.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `read` - (Defaults to 5 minutes) Used when retrieving the Mssql Managed Database.
* `create` - (Defaults to 30 minutes) Used when creating the Mssql Managed Database.
* `update` - (Defaults to 30 minutes) Used when updating the Mssql Managed Database.
* `delete` - (Defaults to 30 minutes) Used when deleting the Mssql Managed Database.

## Import

SQL Managed Databases can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_mssql_managed_database.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Sql/managedInstances/myserver/databases/mydatabase
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-a702c5be99845ed833b5eb2443bfcede70ef98c36a37be0b82b841e7b73916b2 -->