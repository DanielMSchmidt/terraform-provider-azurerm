---
subcategory: "Template"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_tenant_template_deployment"
description: |-
  Manages a Template Deployment at the Tenant Scope.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_tenant_template_deployment

Manages a Template Deployment at the Tenant Scope.

~> **Note:** Deleting a Deployment at the Tenant Scope will not delete any resources created by the deployment.

~> **Note:** Deployments to a Tenant are always Incrementally applied. Existing resources that are not part of the template will not be removed.

~> **Note:** Tenant Template Deployments are always targeted at the Tenant in which the current User, Managed Identity, or Service Principal being used by Terraform is homed.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAzurermTemplateSpecVersionExample =
      new azurerm.dataAzurermTemplateSpecVersion.DataAzurermTemplateSpecVersion(
        this,
        "example",
        {
          name: "myTemplateForTenant",
          resourceGroupName: "myResourceGroup",
          version: "v0.1",
        }
      );
    const azurermTenantTemplateDeploymentExample =
      new azurerm.tenantTemplateDeployment.TenantTemplateDeployment(
        this,
        "example_1",
        {
          location: "West Europe",
          name: "example",
          templateSpecVersionId: cdktf.Token.asString(
            dataAzurermTemplateSpecVersionExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermTenantTemplateDeploymentExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `location` - (Required) The Azure Region where the Template should exist. Changing this forces a new Template to be created.

* `name` - (Required) The name which should be used for this Template. Changing this forces a new Template to be created.

---

* `debugLevel` - (Optional) The Debug Level which should be used for this Resource Group Template Deployment. Possible values are `none`, `requestContent`, `responseContent` and `requestContent, responseContent`.

* `parametersContent` - (Optional) The contents of the ARM Template parameters file - containing a JSON list of parameters.

* `templateContent` - (Optional) The contents of the ARM Template which should be deployed into this Resource Group. Cannot be specified with `templateSpecVersionId`.

* `templateSpecVersionId` - (Optional) The ID of the Template Spec Version to deploy. Cannot be specified with `templateContent`.

* `tags` - (Optional) A mapping of tags which should be assigned to the Template.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Tenant Template Deployment.

* `outputContent` - The JSON Content of the Outputs of the ARM Template Deployment.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 3 hours) Used when creating the Tenant Template Deployment.
* `read` - (Defaults to 5 minutes) Used when retrieving the Tenant Template Deployment.
* `update` - (Defaults to 3 hours) Used when updating the Tenant Template Deployment.
* `delete` - (Defaults to 3 hours) Used when deleting the Tenant Template Deployment.

## Import

Tenant Template Deployments can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_tenant_template_deployment.example /providers/Microsoft.Resources/deployments/deploy1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-e6b9b1d6695d03fc419a0edc517564567923127b2392eeed0846008562361bec -->