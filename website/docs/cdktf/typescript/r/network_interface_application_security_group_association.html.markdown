---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_network_interface_application_security_group_association"
description: |-
  Manages the association between a Network Interface and a Application Security Group

---


<!-- Please do not edit this file, it is generated. -->
# azurerm_network_interface_application_security_group_association

Manages the association between a Network Interface and a Application Security Group.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermVirtualNetworkExample =
      new azurerm.virtualNetwork.VirtualNetwork(this, "example_1", {
        addressSpace: ["10.0.0.0/16"],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-network",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualNetworkExample.overrideLogicalId("example");
    const azurermApplicationSecurityGroupExample =
      new azurerm.applicationSecurityGroup.ApplicationSecurityGroup(
        this,
        "example_2",
        {
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "example-asg",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermApplicationSecurityGroupExample.overrideLogicalId("example");
    const azurermSubnetExample = new azurerm.subnet.Subnet(this, "example_3", {
      addressPrefixes: ["10.0.1.0/24"],
      name: "internal",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      virtualNetworkName: cdktf.Token.asString(
        azurermVirtualNetworkExample.name
      ),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSubnetExample.overrideLogicalId("example");
    const azurermNetworkInterfaceExample =
      new azurerm.networkInterface.NetworkInterface(this, "example_4", {
        ipConfiguration: [
          {
            name: "testconfiguration1",
            privateIpAddressAllocation: "Dynamic",
            subnetId: cdktf.Token.asString(azurermSubnetExample.id),
          },
        ],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-nic",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNetworkInterfaceExample.overrideLogicalId("example");
    const azurermNetworkInterfaceApplicationSecurityGroupAssociationExample =
      new azurerm.networkInterfaceApplicationSecurityGroupAssociation.NetworkInterfaceApplicationSecurityGroupAssociation(
        this,
        "example_5",
        {
          applicationSecurityGroupId: cdktf.Token.asString(
            azurermApplicationSecurityGroupExample.id
          ),
          networkInterfaceId: cdktf.Token.asString(
            azurermNetworkInterfaceExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNetworkInterfaceApplicationSecurityGroupAssociationExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `networkInterfaceId` - (Required) The ID of the Network Interface. Changing this forces a new resource to be created.

* `applicationSecurityGroupId` - (Required) The ID of the Application Security Group which this Network Interface which should be connected to. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The (Terraform specific) ID of the Association between the Network Interface and the Application Security Group.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the association between the Network Interface and the Application Security Group.
* `update` - (Defaults to 30 minutes) Used when updating the association between the Network Interface and the Application Security Group.
* `read` - (Defaults to 5 minutes) Used when retrieving the association between the Network Interface and the Application Security Group.
* `delete` - (Defaults to 30 minutes) Used when deleting the association between the Network Interface and the Application Security Group.

## Import

Associations between Network Interfaces and Application Security Groups can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_network_interface_application_security_group_association.association1 "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/networkInterfaces/nic1|/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/applicationSecurityGroups/securityGroup1"
```

-> **NOTE:** This ID is specific to Terraform - and is of the format `{networkInterfaceId}|{applicationSecurityGroupId}`.

<!-- cache-key: cdktf-0.17.0-pre.15 input-a1130801dd939a9e263786a2c69bd76b43e6f5fc98c307f32dd12944deabf95a -->