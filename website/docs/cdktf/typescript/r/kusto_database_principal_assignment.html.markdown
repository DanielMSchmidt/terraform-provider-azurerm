---
subcategory: "Data Explorer"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_kusto_database_principal_assignment"
description: |-
  Manages a Kusto / Data Explorer Database Principal Assignment
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_kusto_database_principal_assignment

Manages a Kusto (also known as Azure Data Explorer) Database Principal Assignment.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "KustoRG",
      }
    );
    const dataAzurermClientConfigCurrent =
      new azurerm.dataAzurermClientConfig.DataAzurermClientConfig(
        this,
        "current",
        {}
      );
    const azurermKustoClusterExample = new azurerm.kustoCluster.KustoCluster(
      this,
      "example_2",
      {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "kustocluster",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        sku: {
          capacity: 2,
          name: "Standard_D13_v2",
        },
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermKustoClusterExample.overrideLogicalId("example");
    const azurermKustoDatabaseExample = new azurerm.kustoDatabase.KustoDatabase(
      this,
      "example_3",
      {
        clusterName: cdktf.Token.asString(azurermKustoClusterExample.name),
        hotCachePeriod: "P7D",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "KustoDatabase",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        softDeletePeriod: "P31D",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermKustoDatabaseExample.overrideLogicalId("example");
    const azurermKustoDatabasePrincipalAssignmentExample =
      new azurerm.kustoDatabasePrincipalAssignment.KustoDatabasePrincipalAssignment(
        this,
        "example_4",
        {
          clusterName: cdktf.Token.asString(azurermKustoClusterExample.name),
          databaseName: cdktf.Token.asString(azurermKustoDatabaseExample.name),
          name: "KustoPrincipalAssignment",
          principalId: cdktf.Token.asString(
            dataAzurermClientConfigCurrent.clientId
          ),
          principalType: "App",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          role: "Viewer",
          tenantId: cdktf.Token.asString(
            dataAzurermClientConfigCurrent.tenantId
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermKustoDatabasePrincipalAssignmentExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name of the kusto principal assignment. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the resource group in which to create the resource. Changing this forces a new resource to be created.

* `clusterName` - (Required) The name of the cluster in which to create the resource. Changing this forces a new resource to be created.

* `databaseName` - (Required) The name of the database in which to create the resource. Changing this forces a new resource to be created.

* `principalId` - (Required) The object id of the principal. Changing this forces a new resource to be created.

* `principalType` - (Required) The type of the principal. Valid values include `app`, `group`, `user`. Changing this forces a new resource to be created.

* `role` - (Required) The database role assigned to the principal. Valid values include `admin`, `ingestor`, `monitor`, `unrestrictedViewer`, `user` and `viewer`. Changing this forces a new resource to be created.

* `tenantId` - (Required) The tenant id in which the principal resides. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Kusto Database Principal Assignment.

* `principalName` - The name of the principal.

* `tenantName` - The name of the tenant.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 1 hour) Used when creating the Kusto Database Principal Assignment.
* `read` - (Defaults to 5 minutes) Used when retrieving the Kusto Database Principal Assignment.
* `delete` - (Defaults to 1 hour) Used when deleting the Kusto Database Principal Assignment.

## Import

Kusto Database Principal Assignment can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_kusto_database_principal_assignment.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Kusto/clusters/cluster1/databases/database1/principalAssignments/assignment1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-c65a516574bd362752307c8862e3bdadda4cd516b545a7bd5b5201046e6c3aec -->