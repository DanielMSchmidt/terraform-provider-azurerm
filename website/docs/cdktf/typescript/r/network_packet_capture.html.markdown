---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_network_packet_capture"
description: |-
  Configures Packet Capturing against a Virtual Machine using a Network Watcher.

---


<!-- Please do not edit this file, it is generated. -->
# azurerm_network_packet_capture

Configures Network Packet Capturing against a Virtual Machine using a Network Watcher.

!> **NOTE:** The `azurermNetworkPacketCapture` resource is deprecated and will be removed in favour of `azurermVirtualMachinePacketCapture` and `azurermVirtualMachineScaleSetPacketCapture` in version 4.0 of the AzureRM Provider.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "packet-capture-rg",
      }
    );
    const azurermStorageAccountExample =
      new azurerm.storageAccount.StorageAccount(this, "example_1", {
        accountReplicationType: "LRS",
        accountTier: "Standard",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "pctestsa",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageAccountExample.overrideLogicalId("example");
    const azurermVirtualNetworkExample =
      new azurerm.virtualNetwork.VirtualNetwork(this, "example_2", {
        addressSpace: ["10.0.0.0/16"],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "production-network",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualNetworkExample.overrideLogicalId("example");
    const azurermNetworkWatcherExample =
      new azurerm.networkWatcher.NetworkWatcher(this, "example_3", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "network-watcher",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNetworkWatcherExample.overrideLogicalId("example");
    const azurermSubnetExample = new azurerm.subnet.Subnet(this, "example_4", {
      addressPrefixes: ["10.0.2.0/24"],
      name: "internal",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      virtualNetworkName: cdktf.Token.asString(
        azurermVirtualNetworkExample.name
      ),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSubnetExample.overrideLogicalId("example");
    const azurermNetworkInterfaceExample =
      new azurerm.networkInterface.NetworkInterface(this, "example_5", {
        ipConfiguration: [
          {
            name: "testconfiguration1",
            privateIpAddressAllocation: "Dynamic",
            subnetId: cdktf.Token.asString(azurermSubnetExample.id),
          },
        ],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "pctest-nic",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNetworkInterfaceExample.overrideLogicalId("example");
    const azurermVirtualMachineExample =
      new azurerm.virtualMachine.VirtualMachine(this, "example_6", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "pctest-vm",
        networkInterfaceIds: [
          cdktf.Token.asString(azurermNetworkInterfaceExample.id),
        ],
        osProfile: {
          adminPassword: "Password1234!",
          adminUsername: "testadmin",
          computerName: "pctest-vm",
        },
        osProfileLinuxConfig: {
          disablePasswordAuthentication: false,
        },
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        storageImageReference: {
          offer: "UbuntuServer",
          publisher: "Canonical",
          sku: "20.04-LTS",
          version: "latest",
        },
        storageOsDisk: {
          caching: "ReadWrite",
          createOption: "FromImage",
          managedDiskType: "Standard_LRS",
          name: "osdisk",
        },
        vmSize: "Standard_F2",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualMachineExample.overrideLogicalId("example");
    const azurermVirtualMachineExtensionExample =
      new azurerm.virtualMachineExtension.VirtualMachineExtension(
        this,
        "example_7",
        {
          autoUpgradeMinorVersion: true,
          name: "network-watcher",
          publisher: "Microsoft.Azure.NetworkWatcher",
          type: "NetworkWatcherAgentLinux",
          typeHandlerVersion: "1.4",
          virtualMachineId: cdktf.Token.asString(
            azurermVirtualMachineExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualMachineExtensionExample.overrideLogicalId("example");
    const azurermNetworkPacketCaptureExample =
      new azurerm.networkPacketCapture.NetworkPacketCapture(this, "example_8", {
        dependsOn: [azurermVirtualMachineExtensionExample],
        name: "pctestcapture",
        networkWatcherName: cdktf.Token.asString(
          azurermNetworkWatcherExample.name
        ),
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        storageLocation: {
          storageAccountId: cdktf.Token.asString(
            azurermStorageAccountExample.id
          ),
        },
        targetResourceId: cdktf.Token.asString(azurermVirtualMachineExample.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNetworkPacketCaptureExample.overrideLogicalId("example");
  }
}

```

~> **NOTE:** This Resource requires that [the Network Watcher Virtual Machine Extension](https://docs.microsoft.com/azure/network-watcher/network-watcher-packet-capture-manage-portal#before-you-begin) is installed on the Virtual Machine before capturing can be enabled which can be installed via [the `azurermVirtualMachineExtension` resource](virtual_machine_extension.html).

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name to use for this Network Packet Capture. Changing this forces a new resource to be created.

* `networkWatcherName` - (Required) The name of the Network Watcher. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the resource group in which the Network Watcher exists. Changing this forces a new resource to be created.

* `targetResourceId` - (Required) The ID of the Resource to capture packets from. Changing this forces a new resource to be created.

~> **NOTE:** Currently only Virtual Machines IDs are supported.

* `maximumBytesPerPacket` - (Optional) The number of bytes captured per packet. The remaining bytes are truncated. Defaults to `0` (Entire Packet Captured). Changing this forces a new resource to be created.

* `maximumBytesPerSession` - (Optional) Maximum size of the capture in Bytes. Defaults to `1073741824` (1GB). Changing this forces a new resource to be created.

* `maximumCaptureDuration` - (Optional) The maximum duration of the capture session in seconds. Defaults to `18000` (5 hours). Changing this forces a new resource to be created.

* `storageLocation` - (Required) A `storageLocation` block as defined below. Changing this forces a new resource to be created.

* `filter` - (Optional) One or more `filter` blocks as defined below. Changing this forces a new resource to be created.

---

A `storageLocation` block contains:

* `filePath` - (Optional) A valid local path on the targeting VM. Must include the name of the capture file (*.cap). For Linux virtual machine it must start with `/var/captures`.

* `storageAccountId` - (Optional) The ID of the storage account to save the packet capture session

~> **NOTE:** At least one of `filePath` or `storageAccountId` must be specified.

---

A `filter` block contains:

* `localIpAddress` - (Optional) The local IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.

* `localPort` - (Optional) The local port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.

* `protocol` - (Required) The Protocol to be filtered on. Possible values include `any`, `tcp` and `udp`. Changing this forces a new resource to be created.

* `remoteIpAddress` - (Optional) The remote IP Address to be filtered on. Notation: "127.0.0.1" for single address entry. "127.0.0.1-127.0.0.255" for range. "127.0.0.1;127.0.0.5;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported.. Changing this forces a new resource to be created.

* `remotePort` - (Optional) The remote port to be filtered on. Notation: "80" for single port entry."80-85" for range. "80;443;" for multiple entries. Multiple ranges not currently supported. Mixing ranges with multiple entries not currently supported. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The Packet Capture ID.

* `storageLocation` - (Required) A `storageLocation` block as defined below.

---

A `storageLocation` block contains:

* `storagePath` - The URI of the storage path to save the packet capture.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Packet Capture.
* `update` - (Defaults to 30 minutes) Used when updating the Packet Capture.
* `read` - (Defaults to 5 minutes) Used when retrieving the Packet Capture.
* `delete` - (Defaults to 30 minutes) Used when deleting the Packet Capture.

## Import

Packet Captures can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_network_packet_capture.capture1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/networkWatchers/watcher1/packetCaptures/capture1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-11ff12fd8b1c18ca539017f2c7af325fc83e29075144c3da2610d7a8397f2668 -->