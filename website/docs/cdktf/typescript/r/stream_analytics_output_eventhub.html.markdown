---
subcategory: "Stream Analytics"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_stream_analytics_output_eventhub"
description: |-
  Manages a Stream Analytics Output to an EventHub.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_stream_analytics_output_eventhub

Manages a Stream Analytics Output to an EventHub.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "rg-example",
      }
    );
    const dataAzurermStreamAnalyticsJobExample =
      new azurerm.dataAzurermStreamAnalyticsJob.DataAzurermStreamAnalyticsJob(
        this,
        "example_1",
        {
          name: "example-job",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAzurermStreamAnalyticsJobExample.overrideLogicalId("example");
    const azurermEventhubNamespaceExample =
      new azurerm.eventhubNamespace.EventhubNamespace(this, "example_2", {
        capacity: 1,
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-ehnamespace",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        sku: "Standard",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermEventhubNamespaceExample.overrideLogicalId("example");
    const azurermEventhubExample = new azurerm.eventhub.Eventhub(
      this,
      "example_3",
      {
        messageRetention: 1,
        name: "example-eventhub",
        namespaceName: cdktf.Token.asString(
          azurermEventhubNamespaceExample.name
        ),
        partitionCount: 2,
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermEventhubExample.overrideLogicalId("example");
    const azurermStreamAnalyticsOutputEventhubExample =
      new azurerm.streamAnalyticsOutputEventhub.StreamAnalyticsOutputEventhub(
        this,
        "example_4",
        {
          eventhubName: cdktf.Token.asString(azurermEventhubExample.name),
          name: "output-to-eventhub",
          resourceGroupName: cdktf.Token.asString(
            dataAzurermStreamAnalyticsJobExample.resourceGroupName
          ),
          serialization: {
            type: "Avro",
          },
          servicebusNamespace: cdktf.Token.asString(
            azurermEventhubNamespaceExample.name
          ),
          sharedAccessPolicyKey: cdktf.Token.asString(
            azurermEventhubNamespaceExample.defaultPrimaryKey
          ),
          sharedAccessPolicyName: "RootManageSharedAccessKey",
          streamAnalyticsJobName: cdktf.Token.asString(
            dataAzurermStreamAnalyticsJobExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStreamAnalyticsOutputEventhubExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Stream Output. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.

* `streamAnalyticsJobName` - (Required) The name of the Stream Analytics Job. Changing this forces a new resource to be created.

* `eventhubName` - (Required) The name of the Event Hub.

* `servicebusNamespace` - (Required) The namespace that is associated with the desired Event Hub, Service Bus Queue, Service Bus Topic, etc.

* `sharedAccessPolicyKey` - (Optional) The shared access policy key for the specified shared access policy. Required when `authenticationMode` is set to `connectionString`.

* `sharedAccessPolicyName` - (Optional) The shared access policy name for the Event Hub, Service Bus Queue, Service Bus Topic, etc. Required when `authenticationMode` is set to `connectionString`.

* `serialization` - (Required) A `serialization` block as defined below.

* `propertyColumns` - (Optional) A list of property columns to add to the Event Hub output.

* `authenticationMode` - (Optional) The authentication mode for the Stream Output. Possible values are `msi` and `connectionString`. Defaults to `connectionString`.

* `partitionKey` - (Optional) The column that is used for the Event Hub partition key.

---

A `serialization` block supports the following:

* `type` - (Required) The serialization format used for outgoing data streams. Possible values are `avro`, `csv`, `json` and `parquet`.

* `encoding` - (Optional) The encoding of the incoming data in the case of input and the encoding of outgoing data in the case of output. It currently can only be set to `utf8`.

-> **NOTE:** This is required when `type` is set to `csv` or `json`.

* `fieldDelimiter` - (Optional) The delimiter that will be used to separate comma-separated value (CSV) records. Possible values are ` ` (space), `,` (comma), `` (tab), `|` (pipe) and `;`.

-> **NOTE:** This is required when `type` is set to `csv`.

* `format` - (Optional) Specifies the format of the JSON the output will be written in. Possible values are `array` and `lineSeparated`.

-> **NOTE:** This is Required and can only be specified when `type` is set to `json`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Stream Analytics Output EventHub.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Stream Analytics Output EventHub.
* `update` - (Defaults to 30 minutes) Used when updating the Stream Analytics Output EventHub.
* `read` - (Defaults to 5 minutes) Used when retrieving the Stream Analytics Output EventHub.
* `delete` - (Defaults to 30 minutes) Used when deleting the Stream Analytics Output EventHub.

## Import

Stream Analytics Outputs to an EventHub can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_stream_analytics_output_eventhub.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingJobs/job1/outputs/output1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-9e49fb68f234b8ae79edc26a73ca8e021213dab0bb6b906305d6c13ff4ea544b -->