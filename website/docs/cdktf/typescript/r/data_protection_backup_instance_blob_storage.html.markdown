---
subcategory: "DataProtection"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_data_protection_backup_instance_blob_storage"
description: |-
  Manages a Backup Instance Blob Storage.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_data_protection_backup_instance_blob_storage

Manages a Backup Instance Blob Storage.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermStorageAccountExample =
      new azurerm.storageAccount.StorageAccount(this, "example_1", {
        accountReplicationType: "LRS",
        accountTier: "Standard",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "storageaccountname",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageAccountExample.overrideLogicalId("example");
    const azurermDataProtectionBackupVaultExample =
      new azurerm.dataProtectionBackupVault.DataProtectionBackupVault(
        this,
        "example_2",
        {
          datastoreType: "VaultStore",
          identity: {
            type: "SystemAssigned",
          },
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "example-backup-vault",
          redundancy: "LocallyRedundant",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataProtectionBackupVaultExample.overrideLogicalId("example");
    const azurermRoleAssignmentExample =
      new azurerm.roleAssignment.RoleAssignment(this, "example_3", {
        principalId: cdktf.Token.asString(
          cdktf.propertyAccess(
            azurermDataProtectionBackupVaultExample.identity,
            ["0", "principal_id"]
          )
        ),
        roleDefinitionName: "Storage Account Backup Contributor",
        scope: cdktf.Token.asString(azurermStorageAccountExample.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermRoleAssignmentExample.overrideLogicalId("example");
    const azurermDataProtectionBackupPolicyBlobStorageExample =
      new azurerm.dataProtectionBackupPolicyBlobStorage.DataProtectionBackupPolicyBlobStorage(
        this,
        "example_4",
        {
          name: "example-backup-policy",
          retentionDuration: "P30D",
          vaultId: cdktf.Token.asString(
            azurermDataProtectionBackupVaultExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataProtectionBackupPolicyBlobStorageExample.overrideLogicalId(
      "example"
    );
    const azurermDataProtectionBackupInstanceBlobStorageExample =
      new azurerm.dataProtectionBackupInstanceBlobStorage.DataProtectionBackupInstanceBlobStorage(
        this,
        "example_5",
        {
          backupPolicyId: cdktf.Token.asString(
            azurermDataProtectionBackupPolicyBlobStorageExample.id
          ),
          dependsOn: [azurermRoleAssignmentExample],
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "example-backup-instance",
          storageAccountId: cdktf.Token.asString(
            azurermStorageAccountExample.id
          ),
          vaultId: cdktf.Token.asString(
            azurermDataProtectionBackupVaultExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataProtectionBackupInstanceBlobStorageExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Backup Instance Blob Storage. Changing this forces a new Backup Instance Blob Storage to be created.

* `location` - (Required) The location of the source Storage Account. Changing this forces a new Backup Instance Blob Storage to be created.

* `vaultId` - (Required) The ID of the Backup Vault within which the Backup Instance Blob Storage should exist. Changing this forces a new Backup Instance Blob Storage to be created.

* `storageAccountId` - (Required) The ID of the source Storage Account. Changing this forces a new Backup Instance Blob Storage to be created.

* `backupPolicyId` - (Required) The ID of the Backup Policy.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Backup Instance Blob Storage.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Backup Instance Blob Storage.
* `read` - (Defaults to 5 minutes) Used when retrieving the Backup Instance Blob Storage.
* `update` - (Defaults to 30 minutes) Used when updating the Backup Instance Blob Storage.
* `delete` - (Defaults to 30 minutes) Used when deleting the Backup Instance Blob Storage.

## Import

Backup Instance Blob Storages can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_data_protection_backup_instance_blob_storage.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1/backupInstances/backupInstance1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-e749a1c83ed954010e55d23bd66f8722ce29afa425316254961913b0ce958bdc -->