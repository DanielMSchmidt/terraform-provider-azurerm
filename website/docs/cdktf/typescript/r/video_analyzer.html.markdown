---
subcategory: "Video Analyzer"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_video_analyzer"
description: |-
  Manages a Video Analyzer.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_video_analyzer

Manages a Video Analyzer.

!> Video Analyzer (Preview) is now Deprecated and will be Retired on 2022-11-30 - as such the `azurermVideoAnalyzer` resource is deprecated and will be removed in v4.0 of the AzureRM Provider.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "video-analyzer-resources",
      }
    );
    const azurermStorageAccountExample =
      new azurerm.storageAccount.StorageAccount(this, "example_1", {
        accountReplicationType: "GRS",
        accountTier: "Standard",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "examplestoracc",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageAccountExample.overrideLogicalId("example");
    const azurermUserAssignedIdentityExample =
      new azurerm.userAssignedIdentity.UserAssignedIdentity(this, "example_2", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "exampleidentity",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermUserAssignedIdentityExample.overrideLogicalId("example");
    const azurermRoleAssignmentContributor =
      new azurerm.roleAssignment.RoleAssignment(this, "contributor", {
        principalId: cdktf.Token.asString(
          azurermUserAssignedIdentityExample.principalId
        ),
        roleDefinitionName: "Storage Blob Data Contributor",
        scope: cdktf.Token.asString(azurermStorageAccountExample.id),
      });
    const azurermRoleAssignmentReader =
      new azurerm.roleAssignment.RoleAssignment(this, "reader", {
        principalId: cdktf.Token.asString(
          azurermUserAssignedIdentityExample.principalId
        ),
        roleDefinitionName: "Reader",
        scope: cdktf.Token.asString(azurermStorageAccountExample.id),
      });
    const azurermVideoAnalyzerExample = new azurerm.videoAnalyzer.VideoAnalyzer(
      this,
      "example_5",
      {
        dependsOn: [
          azurermRoleAssignmentContributor,
          azurermRoleAssignmentReader,
        ],
        identity: {
          identityIds: [
            cdktf.Token.asString(azurermUserAssignedIdentityExample.id),
          ],
          type: "UserAssigned",
        },
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "exampleanalyzer",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        storageAccount: {
          id: cdktf.Token.asString(azurermStorageAccountExample.id),
          userAssignedIdentityId: cdktf.Token.asString(
            azurermUserAssignedIdentityExample.id
          ),
        },
        tags: {
          environment: "staging",
        },
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVideoAnalyzerExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Video Analyzer. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the resource group in which to create the Video Analyzer. Changing this forces a new resource to be created.

* `location` - (Required) Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.

* `storageAccount` - (Required) A `storageAccount` block as defined below.

* `identity` - (Required) An `identity` block as defined below.

* `tags` - (Optional) A mapping of tags assigned to the resource.

---

A `storageAccount` block supports the following:

* `id` - (Required) Specifies the ID of the Storage Account that will be associated with the Video Analyzer instance.

* `userAssignedIdentityId` - (Required) Specifies the User Assigned Identity ID which should be assigned to access this Storage Account.

---

A `identity` block supports the following:

* `type` - (Required) Specifies the type of Managed Service Identity that should be configured on this Video Analyzer instance. Only possible value is `userAssigned`.

* `identityIds` - (Required) Specifies a list of User Assigned Managed Identity IDs to be assigned to this Video Analyzer instance.

---

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Video Analyzer.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Video Analyzer.
* `update` - (Defaults to 30 minutes) Used when updating the Video Analyzer.
* `read` - (Defaults to 5 minutes) Used when retrieving the Video Analyzer.
* `delete` - (Defaults to 30 minutes) Used when deleting the Video Analyzer.

## Import

Video Analyzer can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_video_analyzer.analyzer /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Media/videoAnalyzers/analyzer1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-73bff5f6608bfefa0c43b174394d46675300556135128e0535be3e2a77c1e61c -->