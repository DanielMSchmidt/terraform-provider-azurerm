---
subcategory: "Machine Learning"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_machine_learning_datastore_blobstorage"
description: |-
  Manages a Machine Learning Blob Storage DataStore.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_machine_learning_datastore_blobstorage

Manages a Machine Learning Blob Storage DataStore.

## Example Usage with Azure Blob

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new azurerm.provider.AzurermProvider(this, "azurerm", {
      features: {},
    });
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermStorageAccountExample =
      new azurerm.storageAccount.StorageAccount(this, "example_2", {
        accountReplicationType: "GRS",
        accountTier: "Standard",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "workspacestorageaccount",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageAccountExample.overrideLogicalId("example");
    const azurermStorageContainerExample =
      new azurerm.storageContainer.StorageContainer(this, "example_3", {
        containerAccessType: "private",
        name: "example-container",
        storageAccountName: cdktf.Token.asString(
          azurermStorageAccountExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageContainerExample.overrideLogicalId("example");
    const dataAzurermClientConfigCurrent =
      new azurerm.dataAzurermClientConfig.DataAzurermClientConfig(
        this,
        "current",
        {}
      );
    const azurermApplicationInsightsExample =
      new azurerm.applicationInsights.ApplicationInsights(this, "example_5", {
        applicationType: "web",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "workspace-example-ai",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermApplicationInsightsExample.overrideLogicalId("example");
    const azurermKeyVaultExample = new azurerm.keyVault.KeyVault(
      this,
      "example_6",
      {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "workspaceexamplekeyvault",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        skuName: "premium",
        tenantId: cdktf.Token.asString(dataAzurermClientConfigCurrent.tenantId),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermKeyVaultExample.overrideLogicalId("example");
    const azurermMachineLearningWorkspaceExample =
      new azurerm.machineLearningWorkspace.MachineLearningWorkspace(
        this,
        "example_7",
        {
          applicationInsightsId: cdktf.Token.asString(
            azurermApplicationInsightsExample.id
          ),
          identity: {
            type: "SystemAssigned",
          },
          keyVaultId: cdktf.Token.asString(azurermKeyVaultExample.id),
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "example-workspace",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          storageAccountId: cdktf.Token.asString(
            azurermStorageAccountExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMachineLearningWorkspaceExample.overrideLogicalId("example");
    const azurermMachineLearningDatastoreBlobstorageExample =
      new azurerm.machineLearningDatastoreBlobstorage.MachineLearningDatastoreBlobstorage(
        this,
        "example_8",
        {
          accountKey: cdktf.Token.asString(
            azurermStorageAccountExample.primaryAccessKey
          ),
          name: "example-datastore",
          storageContainerId: cdktf.Token.asString(
            azurermStorageContainerExample.resourceManagerId
          ),
          workspaceId: cdktf.Token.asString(
            azurermMachineLearningWorkspaceExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMachineLearningDatastoreBlobstorageExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.

* `workspaceId` - (Required) The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.

* `storageContainerId` - (Required) The ID of the Storage Account Container. Changing this forces a new Machine Learning DataStore to be created.

---
* `accountKey` - (Optional) The access key of the Storage Account. Conflicts with `sharedAccessSignature`.

* `sharedAccessSignature` - (Optional) The Shared Access Signature of the Storage Account. Conflicts with `accountKey`.

~> **Note:**  One of `accountKey` or `sharedAccessSignature` must be specified.

* `description` - (Optional) Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.

* `isDefault` - (Optional) Specifies whether this Machines Learning DataStore is the default for the Workspace. Defaults to `false`.

~> **Note:** `isDefault` can only be set to `true` on update.

* `serviceDataAuthIdentity` - (Optional) Specifies which identity to use when retrieving data from the specified source. Defaults to `none`. Possible values are `none`, `workspaceSystemAssignedIdentity` and `workspaceUserAssignedIdentity`.

* `tags` - (Optional) A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported: 

* `id` - The ID of the Machine Learning DataStore.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Machine Learning DataStore.
* `read` - (Defaults to 5 minutes) Used when retrieving the Machine Learning DataStore.
* `update` - (Defaults to 30 minutes) Used when updating the Machine Learning DataStore.
* `delete` - (Defaults to 30 minutes) Used when deleting the Machine Learning DataStore.

## Import

Machine Learning DataStores can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_machine_learning_datastore_blobstorage.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.MachineLearningServices/workspaces/mlw1/datastores/datastore1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-2f68ec7cba848e9918a9415005fccb7edeaf1ad489f0a5f1e3890f7060694561 -->