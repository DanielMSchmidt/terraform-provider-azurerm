---
subcategory: "NetApp"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_netapp_snapshot"
description: |-
  Manages a NetApp Snapshot.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_netapp_snapshot

Manages a NetApp Snapshot.

## NetApp Snapshot Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermVirtualNetworkExample =
      new azurerm.virtualNetwork.VirtualNetwork(this, "example_1", {
        addressSpace: ["10.0.0.0/16"],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-virtualnetwork",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualNetworkExample.overrideLogicalId("example");
    const azurermNetappAccountExample = new azurerm.netappAccount.NetappAccount(
      this,
      "example_2",
      {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-netappaccount",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNetappAccountExample.overrideLogicalId("example");
    const azurermNetappPoolExample = new azurerm.netappPool.NetappPool(
      this,
      "example_3",
      {
        accountName: cdktf.Token.asString(azurermNetappAccountExample.name),
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-netapppool",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        serviceLevel: "Premium",
        sizeInTb: cdktf.Token.asNumber("4"),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNetappPoolExample.overrideLogicalId("example");
    const azurermSubnetExample = new azurerm.subnet.Subnet(this, "example_4", {
      addressPrefixes: ["10.0.2.0/24"],
      delegation: [
        {
          name: "netapp",
          serviceDelegation: {
            actions: [
              "Microsoft.Network/networkinterfaces/*",
              "Microsoft.Network/virtualNetworks/subnets/join/action",
            ],
            name: "Microsoft.Netapp/volumes",
          },
        },
      ],
      name: "example-subnet",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      virtualNetworkName: cdktf.Token.asString(
        azurermVirtualNetworkExample.name
      ),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSubnetExample.overrideLogicalId("example");
    const azurermNetappVolumeExample = new azurerm.netappVolume.NetappVolume(
      this,
      "example_5",
      {
        accountName: cdktf.Token.asString(azurermNetappAccountExample.name),
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-netappvolume",
        poolName: cdktf.Token.asString(azurermNetappPoolExample.name),
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        serviceLevel: "Premium",
        storageQuotaInGb: cdktf.Token.asNumber("100"),
        subnetId: cdktf.Token.asString(azurermSubnetExample.id),
        volumePath: "my-unique-file-path",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNetappVolumeExample.overrideLogicalId("example");
    const azurermNetappSnapshotExample =
      new azurerm.netappSnapshot.NetappSnapshot(this, "example_6", {
        accountName: cdktf.Token.asString(azurermNetappAccountExample.name),
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-netappsnapshot",
        poolName: cdktf.Token.asString(azurermNetappPoolExample.name),
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        volumeName: cdktf.Token.asString(azurermNetappVolumeExample.name),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNetappSnapshotExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the NetApp Snapshot. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the resource group where the NetApp Snapshot should be created. Changing this forces a new resource to be created.

* `accountName` - (Required) The name of the NetApp account in which the NetApp Pool should be created. Changing this forces a new resource to be created.

* `poolName` - (Required) The name of the NetApp pool in which the NetApp Volume should be created. Changing this forces a new resource to be created.

* `volumeName` - (Required) The name of the NetApp volume in which the NetApp Snapshot should be created. Changing this forces a new resource to be created.

* `location` - (Required) Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.

---

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the NetApp Snapshot.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the NetApp Snapshot.
* `update` - (Defaults to 30 minutes) Used when updating the NetApp Snapshot.
* `read` - (Defaults to 5 minutes) Used when retrieving the NetApp Snapshot.
* `delete` - (Defaults to 30 minutes) Used when deleting the NetApp Snapshot.

## Import

NetApp Snapshot can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_netapp_snapshot.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-59e9a0fc489953e9f50ab360ecb8d12233dc95fe218aa8275a8cbcbd98ce4e27 -->