---
subcategory: "Redis"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_redis_firewall_rule"
description: |-
  Manages a Firewall Rule associated with a Redis Cache.

---


<!-- Please do not edit this file, it is generated. -->
# azurerm_redis_firewall_rule

Manages a Firewall Rule associated with a Redis Cache.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
import * as random from "./.gen/providers/random";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*The following providers are missing schema information and might need manual adjustments to synthesize correctly: random.
    For a more precise conversion please use the --provider flag in convert.*/
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "redis-resourcegroup",
      }
    );
    const randomIdServer = new random.id.Id(this, "server", {
      byte_length: 8,
      keepers: [
        {
          azi_id: 1,
        },
      ],
    });
    const azurermRedisCacheExample = new azurerm.redisCache.RedisCache(
      this,
      "example_2",
      {
        capacity: 1,
        enableNonSslPort: false,
        family: "P",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "redis${" + randomIdServer.hex + "}",
        redisConfiguration: {
          maxmemoryDelta: 2,
          maxmemoryPolicy: "allkeys-lru",
          maxmemoryReserved: 2,
        },
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        skuName: "Premium",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermRedisCacheExample.overrideLogicalId("example");
    const azurermRedisFirewallRuleExample =
      new azurerm.redisFirewallRule.RedisFirewallRule(this, "example_3", {
        endIp: "2.3.4.5",
        name: "someIPrange",
        redisCacheName: cdktf.Token.asString(azurermRedisCacheExample.name),
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        startIp: "1.2.3.4",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermRedisFirewallRuleExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Firewall Rule. Changing this forces a new resource to be created.

* `redisCacheName` - (Required) The name of the Redis Cache. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the resource group in which this Redis Cache exists. Changing this forces a new resource to be created.

* `startIp` - (Required) The lowest IP address included in the range

* `endIp` - (Required) The highest IP address included in the range.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Redis Firewall Rule.

## Timeouts

 The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Redis Firewall Rule.
* `update` - (Defaults to 30 minutes) Used when updating the Redis Firewall Rule.
* `read` - (Defaults to 5 minutes) Used when retrieving the Redis Firewall Rule.
* `delete` - (Defaults to 30 minutes) Used when deleting the Redis Firewall Rule.

## Import

Redis Firewall Rules can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_redis_firewall_rule.rule1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Cache/redis/cache1/firewallRules/rule1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-567380d0bc2ec09fc0fcd217d7a22a1e5b41eba4025f6514876f57587b518327 -->