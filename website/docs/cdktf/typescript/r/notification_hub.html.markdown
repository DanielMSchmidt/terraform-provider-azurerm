---
subcategory: "Messaging"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_notification_hub"
description: |-
  Manages a Notification Hub within a Notification Hub Namespace.

---


<!-- Please do not edit this file, it is generated. -->
# azurerm_notification_hub

Manages a Notification Hub within a Notification Hub Namespace.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "notificationhub-resources",
      }
    );
    const azurermNotificationHubNamespaceExample =
      new azurerm.notificationHubNamespace.NotificationHubNamespace(
        this,
        "example_1",
        {
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "myappnamespace",
          namespaceType: "NotificationHub",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          skuName: "Free",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNotificationHubNamespaceExample.overrideLogicalId("example");
    const azurermNotificationHubExample =
      new azurerm.notificationHub.NotificationHub(this, "example_2", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "mynotificationhub",
        namespaceName: cdktf.Token.asString(
          azurermNotificationHubNamespaceExample.name
        ),
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNotificationHubExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name to use for this Notification Hub. Changing this forces a new resource to be created.

* `namespaceName` - (Required) The name of the Notification Hub Namespace in which to create this Notification Hub. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the Resource Group in which the Notification Hub Namespace exists. Changing this forces a new resource to be created.

* `location` - (Required) The Azure Region in which this Notification Hub Namespace exists. Changing this forces a new resource to be created.

* `apnsCredential` - (Optional) A `apnsCredential` block as defined below.

~> **NOTE:** Removing the `apnsCredential` block will currently force a recreation of this resource [due to this bug in the Azure SDK for Go](https://github.com/Azure/azure-sdk-for-go/issues/2246) - we'll remove this limitation when the SDK bug is fixed.

* `gcmCredential` - (Optional) A `gcmCredential` block as defined below.

~> **NOTE:** Removing the `gcmCredential` block will currently force a recreation of this resource [due to this bug in the Azure SDK for Go](https://github.com/Azure/azure-sdk-for-go/issues/2246) - we'll remove this limitation when the SDK bug is fixed.

* `tags` - (Optional) A mapping of tags to assign to the resource.

---

A `apnsCredential` block contains:

* `applicationMode` - (Required) The Application Mode which defines which server the APNS Messages should be sent to. Possible values are `production` and `sandbox`.

* `bundleId` - (Required) The Bundle ID of the iOS/macOS application to send push notifications for, such as `comHashicorpExample`.

* `keyId` - (Required) The Apple Push Notifications Service (APNS) Key.

* `teamId` - (Required) The ID of the team the Token.

* `token` - (Required) The Push Token associated with the Apple Developer Account. This is the contents of the `key` downloaded from [the Apple Developer Portal](https://developer.apple.com/account/ios/authkey/) between the `-----BEGIN PRIVATE KEY-----` and `-----END PRIVATE KEY-----` blocks.

---

A `gcmCredential` block contains:

* `apiKey` - (Required) The API Key associated with the Google Cloud Messaging service.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Notification Hub.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Notification Hub.
* `update` - (Defaults to 30 minutes) Used when updating the Notification Hub.
* `read` - (Defaults to 5 minutes) Used when retrieving the Notification Hub.
* `delete` - (Defaults to 30 minutes) Used when deleting the Notification Hub.

## Import

Notification Hubs can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_notification_hub.hub1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.NotificationHubs/namespaces/namespace1/notificationHubs/hub1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-60fdc812beba26588f2cfa39042b3051fdc97cd95297ad647388ccad1f9fe6bd -->