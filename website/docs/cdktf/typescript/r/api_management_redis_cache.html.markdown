---
subcategory: "API Management"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_api_management_redis_cache"
description: |-
  Manages a API Management Redis Cache.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_api_management_redis_cache

Manages a API Management Redis Cache.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermApiManagementExample = new azurerm.apiManagement.ApiManagement(
      this,
      "example_1",
      {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-apim",
        publisherEmail: "pub1@email.com",
        publisherName: "pub1",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        skuName: "Consumption_0",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermApiManagementExample.overrideLogicalId("example");
    const azurermRedisCacheExample = new azurerm.redisCache.RedisCache(
      this,
      "example_2",
      {
        capacity: 1,
        enableNonSslPort: false,
        family: "C",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        minimumTlsVersion: "1.2",
        name: "example-cache",
        redisConfiguration: {},
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        skuName: "Basic",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermRedisCacheExample.overrideLogicalId("example");
    const azurermApiManagementRedisCacheExample =
      new azurerm.apiManagementRedisCache.ApiManagementRedisCache(
        this,
        "example_3",
        {
          apiManagementId: cdktf.Token.asString(azurermApiManagementExample.id),
          cacheLocation: "East Us",
          connectionString: cdktf.Token.asString(
            azurermRedisCacheExample.primaryConnectionString
          ),
          description: "Redis cache instances",
          name: "example-Redis-Cache",
          redisCacheId: cdktf.Token.asString(azurermRedisCacheExample.id),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermApiManagementRedisCacheExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this API Management Redis Cache. Changing this forces a new API Management Redis Cache to be created.

* `apiManagementId` - (Required) The resource ID of the API Management Service from which to create this external cache. Changing this forces a new API Management Redis Cache to be created.

* `connectionString` - (Required) The connection string to the Cache for Redis.

---

* `description` - (Optional) The description of the API Management Redis Cache.

* `redisCacheId` - (Optional) The resource ID of the Cache for Redis.

* `cacheLocation` - (Optional) The location where to use cache from. Possible values are `default` and valid Azure regions. Defaults to `default`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the API Management Redis Cache.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the API Management Redis Cache.
* `read` - (Defaults to 5 minutes) Used when retrieving the API Management Redis Cache.
* `update` - (Defaults to 30 minutes) Used when updating the API Management Redis Cache.
* `delete` - (Defaults to 30 minutes) Used when deleting the API Management Redis Cache.

## Import

API Management Redis Caches can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_api_management_redis_cache.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ApiManagement/service/service1/caches/cache1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-d15ea34e27a05cc968c7de4845d6abbfbf3e79abc68db0b910a57606d11f102b -->