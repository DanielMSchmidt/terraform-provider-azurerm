---
subcategory: "Stream Analytics"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_stream_analytics_reference_input_mssql"
description: |-
  Manages a Stream Analytics Reference Input from MS SQL.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_stream_analytics_reference_input_mssql

Manages a Stream Analytics Reference Input from MS SQL. Reference data (also known as a lookup table) is a finite data set that is static or slowly changing in nature, used to perform a lookup or to correlate with your data stream. Learn more [here](https://docs.microsoft.com/azure/stream-analytics/stream-analytics-use-reference-data#azure-sql-database).

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const dataAzurermStreamAnalyticsJobExample =
      new azurerm.dataAzurermStreamAnalyticsJob.DataAzurermStreamAnalyticsJob(
        this,
        "example_1",
        {
          name: "example-job",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAzurermStreamAnalyticsJobExample.overrideLogicalId("example");
    const azurermMssqlServerExample = new azurerm.mssqlServer.MssqlServer(
      this,
      "example_2",
      {
        administratorLogin: "admin",
        administratorLoginPassword: "password",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-sqlserver",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        version: "12.0",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMssqlServerExample.overrideLogicalId("example");
    const azurermMssqlDatabaseExample = new azurerm.mssqlDatabase.MssqlDatabase(
      this,
      "example_3",
      {
        name: "example-db",
        serverId: cdktf.Token.asString(azurermMssqlServerExample.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMssqlDatabaseExample.overrideLogicalId("example");
    const azurermStreamAnalyticsReferenceInputMssqlExample =
      new azurerm.streamAnalyticsReferenceInputMssql.StreamAnalyticsReferenceInputMssql(
        this,
        "example_4",
        {
          database: cdktf.Token.asString(azurermMssqlDatabaseExample.name),
          fullSnapshotQuery:
            "    SELECT *\n    INTO [YourOutputAlias]\n    FROM [YourInputAlias]\n",
          name: "example-reference-input",
          password: "examplepassword",
          refreshIntervalDuration: "00:20:00",
          refreshType: "RefreshPeriodicallyWithFull",
          resourceGroupName: cdktf.Token.asString(
            dataAzurermStreamAnalyticsJobExample.resourceGroupName
          ),
          server: cdktf.Token.asString(
            azurermMssqlServerExample.fullyQualifiedDomainName
          ),
          streamAnalyticsJobName: cdktf.Token.asString(
            dataAzurermStreamAnalyticsJobExample.name
          ),
          username: "exampleuser",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStreamAnalyticsReferenceInputMssqlExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name of the Reference Input MS SQL data. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the Resource Group where the Stream Analytics Job should exist. Changing this forces a new resource to be created.

* `streamAnalyticsJobName` - (Required) The name of the Stream Analytics Job. Changing this forces a new resource to be created.

* `server` - (Required) The fully qualified domain name of the MS SQL server.

* `database` - (Required) The MS SQL database name where the reference data exists.

* `username` - (Required) The username to connect to the MS SQL database.

* `password` - (Required) The password to connect to the MS SQL database.

* `refreshType` - (Required) Defines whether and how the reference data should be refreshed. Accepted values are `static`, `refreshPeriodicallyWithFull` and `refreshPeriodicallyWithDelta`.

* `refreshIntervalDuration` - (Optional) The frequency in `hh:mm:ss` with which the reference data should be retrieved from the MS SQL database e.g. `00:20:00` for every 20 minutes. Must be set when `refreshType` is `refreshPeriodicallyWithFull` or `refreshPeriodicallyWithDelta`.

* `fullSnapshotQuery` - (Required) The query used to retrieve the reference data from the MS SQL database.

* `deltaSnapshotQuery` - (Optional) The query used to retrieve incremental changes in the reference data from the MS SQL database. Cannot be set when `refreshType` is `static`.

* `table` - (Optional) The name of the table in the Azure SQL database.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Stream Analytics.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Stream Analytics.
* `read` - (Defaults to 5 minutes) Used when retrieving the Stream Analytics.
* `update` - (Defaults to 30 minutes) Used when updating the Stream Analytics.
* `delete` - (Defaults to 30 minutes) Used when deleting the Stream Analytics.

## Import

Stream Analytics can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_stream_analytics_reference_input_mssql.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingJobs/job1/inputs/input1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-49a00d4cc59141dbee5c2ab3811ae5548099efe90dd6223ea766f50d7e476037 -->