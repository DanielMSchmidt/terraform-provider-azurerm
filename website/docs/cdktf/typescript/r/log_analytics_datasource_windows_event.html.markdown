---
subcategory: "Log Analytics"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_log_analytics_datasource_windows_event"
description: |-
  Manages a Log Analytics Windows Event DataSource.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_log_analytics_datasource_windows_event

Manages a Log Analytics Windows Event DataSource.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new azurerm.provider.AzurermProvider(this, "azurerm", {
      features: {},
    });
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermLogAnalyticsWorkspaceExample =
      new azurerm.logAnalyticsWorkspace.LogAnalyticsWorkspace(
        this,
        "example_2",
        {
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "example-law",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          sku: "PerGB2018",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermLogAnalyticsWorkspaceExample.overrideLogicalId("example");
    const azurermLogAnalyticsDatasourceWindowsEventExample =
      new azurerm.logAnalyticsDatasourceWindowsEvent.LogAnalyticsDatasourceWindowsEvent(
        this,
        "example_3",
        {
          eventLogName: "Application",
          eventTypes: ["Error"],
          name: "example-lad-wpc",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          workspaceName: cdktf.Token.asString(
            azurermLogAnalyticsWorkspaceExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermLogAnalyticsDatasourceWindowsEventExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Log Analytics Windows Event DataSource. Changing this forces a new Log Analytics Windows Event DataSource to be created.

* `resourceGroupName` - (Required) The name of the Resource Group where the Log Analytics Windows Event DataSource should exist. Changing this forces a new Log Analytics Windows Event DataSource to be created.

* `workspaceName` - (Required) The name of the Log Analytics Workspace where the Log Analytics Windows Event DataSource should exist. Changing this forces a new Log Analytics Windows Event DataSource to be created.

* `eventLogName` - (Required) Specifies the name of the Windows Event Log to collect events from.

* `eventTypes` - (Required) Specifies an array of event types applied to the specified event log. Possible values include `error`, `warning` and `information`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Log Analytics Windows Event DataSource.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Log Analytics Windows Event DataSource.
* `read` - (Defaults to 5 minutes) Used when retrieving the Log Analytics Windows Event DataSource.
* `update` - (Defaults to 30 minutes) Used when updating the Log Analytics Windows Event DataSource.
* `delete` - (Defaults to 30 minutes) Used when deleting the Log Analytics Windows Event DataSource.

## Import

Log Analytics Windows Event DataSources can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_log_analytics_datasource_windows_event.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.OperationalInsights/workspaces/workspace1/dataSources/datasource1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-d1eeff1adcca659cdb0471050b9c1de535204ab689a0c7b96886fbabc647d59e -->