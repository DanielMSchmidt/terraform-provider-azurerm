---
subcategory: "DataProtection"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_data_protection_backup_vault"
description: |-
  Manages a Backup Vault.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_data_protection_backup_vault

Manages a Backup Vault.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermDataProtectionBackupVaultExample =
      new azurerm.dataProtectionBackupVault.DataProtectionBackupVault(
        this,
        "example_1",
        {
          datastoreType: "VaultStore",
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "example-backup-vault",
          redundancy: "LocallyRedundant",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataProtectionBackupVaultExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Backup Vault. Changing this forces a new Backup Vault to be created.

* `resourceGroupName` - (Required) The name of the Resource Group where the Backup Vault should exist. Changing this forces a new Backup Vault to be created.

* `location` - (Required) The Azure Region where the Backup Vault should exist. Changing this forces a new Backup Vault to be created.

* `datastoreType` - (Required) Specifies the type of the data store. Possible values are `archiveStore`, `snapshotStore` and `vaultStore`. Changing this forces a new resource to be created.

* `redundancy` - (Required) Specifies the backup storage redundancy. Possible values are `geoRedundant` and `locallyRedundant`. Changing this forces a new Backup Vault to be created.

---

* `identity` - (Optional) An `identity` block as defined below.

* `tags` - (Optional) A mapping of tags which should be assigned to the Backup Vault.

---

An `identity` block supports the following:

* `type` - (Required) Specifies the type of Managed Service Identity that should be configured on this Backup Vault. The only possible value is `systemAssigned`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Backup Vault.

* `identity` - An `identity` block as defined below, which contains the Identity information for this Backup Vault.

---

An `identity` block exports the following:

* `principalId` - The Principal ID for the Service Principal associated with the Identity of this Backup Vault.

* `tenantId` - The Tenant ID for the Service Principal associated with the Identity of this Backup Vault.

-> You can access the Principal ID via `${azurermDataProtectionBackupVaultExampleIdentity0PrincipalId}` and the Tenant ID via `${azurermDataProtectionBackupVaultExampleIdentity0TenantId}`

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Backup Vault.
* `read` - (Defaults to 5 minutes) Used when retrieving the Backup Vault.
* `update` - (Defaults to 30 minutes) Used when updating the Backup Vault.
* `delete` - (Defaults to 30 minutes) Used when deleting the Backup Vault.

## Import

Backup Vaults can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_data_protection_backup_vault.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-b0e27d7a8894efc68599d44cfb110042ac8acdcb02caa9ee4b4882807b39c53f -->