---
subcategory: "Monitor"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_monitor_data_collection_rule_association"
description: |-
  Manages a Data Collection Rule Association.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_monitor_data_collection_rule_association

Manages a Data Collection Rule Association.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermVirtualNetworkExample =
      new azurerm.virtualNetwork.VirtualNetwork(this, "example_1", {
        addressSpace: ["10.0.0.0/16"],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "virtualnetwork",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualNetworkExample.overrideLogicalId("example");
    const azurermMonitorDataCollectionEndpointExample =
      new azurerm.monitorDataCollectionEndpoint.MonitorDataCollectionEndpoint(
        this,
        "example_2",
        {
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "example-dce",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMonitorDataCollectionEndpointExample.overrideLogicalId("example");
    const azurermMonitorDataCollectionRuleExample =
      new azurerm.monitorDataCollectionRule.MonitorDataCollectionRule(
        this,
        "example_3",
        {
          dataFlow: [
            {
              destinations: ["example-destination-metrics"],
              streams: ["Microsoft-InsightsMetrics"],
            },
          ],
          destinations: {
            azureMonitorMetrics: {
              name: "example-destination-metrics",
            },
          },
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "example-dcr",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMonitorDataCollectionRuleExample.overrideLogicalId("example");
    const azurermSubnetExample = new azurerm.subnet.Subnet(this, "example_4", {
      addressPrefixes: ["10.0.2.0/24"],
      name: "subnet",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      virtualNetworkName: cdktf.Token.asString(
        azurermVirtualNetworkExample.name
      ),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSubnetExample.overrideLogicalId("example");
    const azurermNetworkInterfaceExample =
      new azurerm.networkInterface.NetworkInterface(this, "example_5", {
        ipConfiguration: [
          {
            name: "internal",
            privateIpAddressAllocation: "Dynamic",
            subnetId: cdktf.Token.asString(azurermSubnetExample.id),
          },
        ],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "nic",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNetworkInterfaceExample.overrideLogicalId("example");
    const azurermLinuxVirtualMachineExample =
      new azurerm.linuxVirtualMachine.LinuxVirtualMachine(this, "example_6", {
        adminPassword: "example-Password@7890",
        adminUsername: "adminuser",
        disablePasswordAuthentication: false,
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "machine",
        networkInterfaceIds: [
          cdktf.Token.asString(azurermNetworkInterfaceExample.id),
        ],
        osDisk: {
          caching: "ReadWrite",
          storageAccountType: "Standard_LRS",
        },
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        size: "Standard_B1ls",
        sourceImageReference: {
          offer: "UbuntuServer",
          publisher: "Canonical",
          sku: "20.04-LTS",
          version: "latest",
        },
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermLinuxVirtualMachineExample.overrideLogicalId("example");
    new azurerm.monitorDataCollectionRuleAssociation.MonitorDataCollectionRuleAssociation(
      this,
      "example1",
      {
        dataCollectionRuleId: cdktf.Token.asString(
          azurermMonitorDataCollectionRuleExample.id
        ),
        description: "example",
        name: "example1-dcra",
        targetResourceId: cdktf.Token.asString(
          azurermLinuxVirtualMachineExample.id
        ),
      }
    );
    new azurerm.monitorDataCollectionRuleAssociation.MonitorDataCollectionRuleAssociation(
      this,
      "example2",
      {
        dataCollectionEndpointId: cdktf.Token.asString(
          azurermMonitorDataCollectionEndpointExample.id
        ),
        description: "example",
        targetResourceId: cdktf.Token.asString(
          azurermLinuxVirtualMachineExample.id
        ),
      }
    );
  }
}

```

## Arguments Reference

The following arguments are supported:

* `targetResourceId` - (Required) The ID of the Azure Resource which to associate to a Data Collection Rule or a Data Collection Endpoint. Changing this forces a new resource to be created.

---

* `name` - (Optional) The name which should be used for this Data Collection Rule Association. Changing this forces a new Data Collection Rule Association to be created. Defaults to `configurationAccessEndpoint`.

-> **NOTE** `name` is required when `dataCollectionRuleId` is specified. And when `dataCollectionEndpointId` is specified, the `name` is populated with `configurationAccessEndpoint`.

* `dataCollectionEndpointId` - (Optional) The ID of the Data Collection Endpoint which will be associated to the target resource.

* `dataCollectionRuleId` - (Optional) The ID of the Data Collection Rule which will be associated to the target resource.

-> **NOTE** Exactly one of `dataCollectionEndpointId` and `dataCollectionRuleId` blocks must be specified.

* `description` - (Optional) The description of the Data Collection Rule Association.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Data Collection Rule Association.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Data Collection Rule Association.
* `read` - (Defaults to 5 minutes) Used when retrieving the Data Collection Rule Association.
* `update` - (Defaults to 30 minutes) Used when updating the Data Collection Rule Association.
* `delete` - (Defaults to 30 minutes) Used when deleting the Data Collection Rule Association.

## Import

Data Collection Rules Association can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_monitor_data_collection_rule_association.example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1/providers/Microsoft.Insights/dataCollectionRuleAssociations/dca1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-c41cbae7922c9528adab26ae3adc9965a54b453d9264ce5cc2f2f17a75677e91 -->