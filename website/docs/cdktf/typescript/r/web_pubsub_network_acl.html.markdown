---
subcategory: "Messaging"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_web_pubsub_network_acl"
description: |-
  Manages the Network ACL for a Web Pubsub service.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_web_pubsub_network_acl

Manages the Network ACL for a Web Pubsub.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "east us",
        name: "terraform-webpubsub",
      }
    );
    const azurermVirtualNetworkExample =
      new azurerm.virtualNetwork.VirtualNetwork(this, "example_1", {
        addressSpace: ["10.5.0.0/16"],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-vnet",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualNetworkExample.overrideLogicalId("example");
    const azurermWebPubsubExample = new azurerm.webPubsub.WebPubsub(
      this,
      "example_2",
      {
        capacity: 1,
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "tfex-webpubsub",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        sku: "Standard_S1",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermWebPubsubExample.overrideLogicalId("example");
    const azurermSubnetExample = new azurerm.subnet.Subnet(this, "example_3", {
      addressPrefixes: ["10.5.2.0/24"],
      enforcePrivateLinkEndpointNetworkPolicies: true,
      name: "example-subnet",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      virtualNetworkName: cdktf.Token.asString(
        azurermVirtualNetworkExample.name
      ),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSubnetExample.overrideLogicalId("example");
    const azurermPrivateEndpointExample =
      new azurerm.privateEndpoint.PrivateEndpoint(this, "example_4", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-privateendpoint",
        privateServiceConnection: {
          isManualConnection: false,
          name: "psc-sig-test",
          privateConnectionResourceId: cdktf.Token.asString(
            azurermWebPubsubExample.id
          ),
          subresourceNames: ["webpubsub"],
        },
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        subnetId: cdktf.Token.asString(azurermSubnetExample.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermPrivateEndpointExample.overrideLogicalId("example");
    const azurermWebPubsubNetworkAclExample =
      new azurerm.webPubsubNetworkAcl.WebPubsubNetworkAcl(this, "example_5", {
        defaultAction: "Allow",
        dependsOn: [azurermPrivateEndpointExample],
        privateEndpoint: [
          {
            deniedRequestTypes: ["RESTAPI", "ClientConnection"],
            id: cdktf.Token.asString(azurermPrivateEndpointExample.id),
          },
        ],
        publicNetwork: {
          deniedRequestTypes: ["ClientConnection"],
        },
        webPubsubId: cdktf.Token.asString(azurermWebPubsubExample.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermWebPubsubNetworkAclExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `webPubsubId` - (Required) The ID of the Web Pubsub service. Changing this forces a new resource to be created.

* `defaultAction` - (Optional) The default action to control the network access when no other rule matches. Possible values are `allow` and `deny`. Defaults to `deny`.

* `publicNetwork` - (Required) A `publicNetwork` block as defined below.

* `privateEndpoint` - (Optional) A `privateEndpoint` block as defined below.

---

A `publicNetwork` block supports the following:

* `allowedRequestTypes` - (Optional) The allowed request types for the public network. Possible values are `clientConnection`, `serverConnection`, `restapi` and `trace`.

* `deniedRequestTypes` - (Optional) The denied request types for the public network. Possible values are `clientConnection`, `serverConnection`, `restapi` and `trace`.

-> **NOTE:** When `defaultAction` is `allow`, `allowedRequestTypes`cannot be set. When `defaultAction` is `deny`, `deniedRequestTypes`cannot be set.

---

A `privateEndpoint` block supports the following:

* `id` - (Required) The ID of the Private Endpoint which is based on the Web Pubsub service.

* `allowedRequestTypes` - (Optional) The allowed request types for the Private Endpoint Connection. Possible values are `clientConnection`, `serverConnection`, `restapi` and `trace`.

* `deniedRequestTypes` - (Optional) The denied request types for the Private Endpoint Connection. Possible values are `clientConnection`, `serverConnection`, `restapi` and `trace`.

-> **NOTE:** When `defaultAction` is `allow`, `allowedRequestTypes`cannot be set. When `defaultAction` is `deny`, `deniedRequestTypes`cannot be set.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Web Pubsub service.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Network ACL of the Web Pubsub service
* `read` - (Defaults to 5 minutes) Used when retrieving the Network ACL of the Web Pubsub service
* `update` - (Defaults to 30 minutes) Used when updating the Network ACL of the Web Pubsub service
* `delete` - (Defaults to 30 minutes) Used when deleting the Network ACL of the Web Pubsub service

## Import

Network ACLs for a Web Pubsub service can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_web_pubsub_network_acl.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.SignalRService/webPubSub/webpubsub1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-52a09a39dfaf910ec8fa614e1fdbf1231c3a1dbcc1d2c8f22277e909bf1f3411 -->