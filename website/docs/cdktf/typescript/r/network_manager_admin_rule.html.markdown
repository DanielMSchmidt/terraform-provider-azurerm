---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_network_manager_admin_rule"
description: |-
  Manages a Network Manager Admin Rule.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_network_manager_admin_rule

Manages a Network Manager Admin Rule.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const dataAzurermSubscriptionCurrent =
      new azurerm.dataAzurermSubscription.DataAzurermSubscription(
        this,
        "current",
        {}
      );
    const azurermNetworkManagerExample =
      new azurerm.networkManager.NetworkManager(this, "example_2", {
        description: "example network manager",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-network-manager",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        scope: {
          subscriptionIds: [
            cdktf.Token.asString(dataAzurermSubscriptionCurrent.id),
          ],
        },
        scopeAccesses: ["Connectivity", "SecurityAdmin"],
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNetworkManagerExample.overrideLogicalId("example");
    const azurermNetworkManagerNetworkGroupExample =
      new azurerm.networkManagerNetworkGroup.NetworkManagerNetworkGroup(
        this,
        "example_3",
        {
          name: "example-network-group",
          networkManagerId: cdktf.Token.asString(
            azurermNetworkManagerExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNetworkManagerNetworkGroupExample.overrideLogicalId("example");
    const azurermNetworkManagerSecurityAdminConfigurationExample =
      new azurerm.networkManagerSecurityAdminConfiguration.NetworkManagerSecurityAdminConfiguration(
        this,
        "example_4",
        {
          name: "example-admin-conf",
          networkManagerId: cdktf.Token.asString(
            azurermNetworkManagerExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNetworkManagerSecurityAdminConfigurationExample.overrideLogicalId(
      "example"
    );
    const azurermNetworkManagerAdminRuleCollectionExample =
      new azurerm.networkManagerAdminRuleCollection.NetworkManagerAdminRuleCollection(
        this,
        "example_5",
        {
          name: "example-admin-rule-collection",
          networkGroupIds: [
            cdktf.Token.asString(azurermNetworkManagerNetworkGroupExample.id),
          ],
          securityAdminConfigurationId: cdktf.Token.asString(
            azurermNetworkManagerSecurityAdminConfigurationExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNetworkManagerAdminRuleCollectionExample.overrideLogicalId(
      "example"
    );
    const azurermNetworkManagerAdminRuleExample =
      new azurerm.networkManagerAdminRule.NetworkManagerAdminRule(
        this,
        "example_6",
        {
          action: "Deny",
          adminRuleCollectionId: cdktf.Token.asString(
            azurermNetworkManagerAdminRuleCollectionExample.id
          ),
          description: "example admin rule",
          destination: [
            {
              addressPrefix: "10.1.0.1",
              addressPrefixType: "IPPrefix",
            },
            {
              addressPrefix: "10.0.0.0/24",
              addressPrefixType: "IPPrefix",
            },
          ],
          destinationPortRanges: ["80"],
          direction: "Outbound",
          name: "example-admin-rule",
          priority: 1,
          protocol: "Tcp",
          source: [
            {
              addressPrefix: "Internet",
              addressPrefixType: "ServiceTag",
            },
          ],
          sourcePortRanges: ["80", "1024-65535"],
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNetworkManagerAdminRuleExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) Specifies the name which should be used for this Network Manager Admin Rule. Changing this forces a new Network Manager Admin Rule to be created.

* `adminRuleCollectionId` - (Required) Specifies the ID of the Network Manager Admin Rule Collection. Changing this forces a new Network Manager Admin Rule to be created.

* `action` - (Required) Specifies the action allowed for this Network Manager Admin Rule. Possible values are `allow`, `alwaysAllow`, and `deny`.

* `direction` - (Required) Indicates if the traffic matched against the rule in inbound or outbound. Possible values are `inbound` and `outbound`.

* `priority` - (Required) The priority of the rule. Possible values are integers between `1` and `4096`. The priority number must be unique for each rule in the collection. The lower the priority number, the higher the priority of the rule.

* `protocol` - (Required) Specifies which network protocol this Network Manager Admin Rule applies to. Possible values are `ah`, `any`, `esp`, `icmp`, `tcp`, and `udp`.

* `description` - (Optional) A description of the Network Manager Admin Rule.

* `destinationPortRanges` - (Optional) A list of string specifies the destination port ranges. Specify one or more single port number or port ranges such as `102465535`. Use `*` to specify any port.

* `destination` - (Optional) One or more `destination` blocks as defined below.

* `sourcePortRanges` - (Optional) A list of string specifies the source port ranges. Specify one or more single port number or port ranges such as `102465535`. Use `*` to specify any port.

* `source` - (Optional) One or more `source` blocks as defined below.

---

A `destination` block supports the following:

* `addressPrefix` (Required) Specifies the address prefix. 

* `addressPrefixType` (Required) Specifies the address prefix type. Possible values are `ipPrefix` and `serviceTag`. For more information, please see [this document](https://learn.microsoft.com/en-us/azure/virtual-network-manager/concept-security-admins#source-and-destination-types).

---

A `source` block supports the following:

* `addressPrefix` (Required) Specifies the address prefix.

* `addressPrefixType` (Required) Specifies the address prefix type. Possible values are `ipPrefix` and `serviceTag`. For more information, please see [this document](https://learn.microsoft.com/en-us/azure/virtual-network-manager/concept-security-admins#source-and-destination-types).

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Network Manager Admin Rule.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Network Manager Admin Rule.
* `read` - (Defaults to 5 minutes) Used when retrieving the Network Manager Admin Rule.
* `update` - (Defaults to 30 minutes) Used when updating the Network Manager Admin Rule.
* `delete` - (Defaults to 30 minutes) Used when deleting the Network Manager Admin Rule.

## Import

Network Manager Admin Rule can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_network_manager_admin_rule.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/networkManagers/networkManager1/securityAdminConfigurations/configuration1/ruleCollections/ruleCollection1/rules/rule1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-7995a5ed2830a3727aace660938d551c9f98aae7bf87a0f5ab579bc83c86889c -->