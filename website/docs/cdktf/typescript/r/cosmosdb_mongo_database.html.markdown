---
subcategory: "CosmosDB (DocumentDB)"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_cosmosdb_mongo_database"
description: |-
  Manages a Mongo Database within a Cosmos DB Account.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_cosmosdb_mongo_database

Manages a Mongo Database within a Cosmos DB Account.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAzurermCosmosdbAccountExample =
      new azurerm.dataAzurermCosmosdbAccount.DataAzurermCosmosdbAccount(
        this,
        "example",
        {
          name: "tfex-cosmosdb-account",
          resourceGroupName: "tfex-cosmosdb-account-rg",
        }
      );
    const azurermCosmosdbMongoDatabaseExample =
      new azurerm.cosmosdbMongoDatabase.CosmosdbMongoDatabase(
        this,
        "example_1",
        {
          accountName: cdktf.Token.asString(
            dataAzurermCosmosdbAccountExample.name
          ),
          name: "tfex-cosmos-mongo-db",
          resourceGroupName: cdktf.Token.asString(
            dataAzurermCosmosdbAccountExample.resourceGroupName
          ),
          throughput: 400,
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermCosmosdbMongoDatabaseExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Cosmos DB Mongo Database. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the resource group in which the Cosmos DB Mongo Database is created. Changing this forces a new resource to be created.

* `accountName` - (Required) The name of the Cosmos DB Mongo Database to create the table within. Changing this forces a new resource to be created.

* `throughput` - (Optional) The throughput of the MongoDB database (RU/s). Must be set in increments of `100`. The minimum value is `400`. This must be set upon database creation otherwise it cannot be updated without a manual terraform destroy-apply.

~> **Note:** throughput has a maximum value of `1000000` unless a higher limit is requested via Azure Support.

* `autoscaleSettings` - (Optional) An `autoscaleSettings` block as defined below. This must be set upon database creation otherwise it cannot be updated without a manual terraform destroy-apply.

~> **Note:** Switching between autoscale and manual throughput is not supported via Terraform and must be completed via the Azure Portal and refreshed.

---

An `autoscaleSettings` block supports the following:

* `maxThroughput` - (Optional) The maximum throughput of the MongoDB database (RU/s). Must be between `1,000` and `1,000,000`. Must be set in increments of `1,000`. Conflicts with `throughput`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Cosmos DB Mongo Database.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the CosmosDB Mongo Database.
* `update` - (Defaults to 30 minutes) Used when updating the CosmosDB Mongo Database.
* `read` - (Defaults to 5 minutes) Used when retrieving the CosmosDB Mongo Database.
* `delete` - (Defaults to 30 minutes) Used when deleting the CosmosDB Mongo Database.

## Import

Cosmos Mongo Database can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_cosmosdb_mongo_database.db1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.DocumentDB/databaseAccounts/account1/mongodbDatabases/db1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-7c28c8f149b4818da49c4c9f735498a14071bcc5bfa4d96979c34e69af2ed323 -->