---
subcategory: "Database"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_postgresql_virtual_network_rule"
description: |-
  Manages a PostgreSQL Virtual Network Rule.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_postgresql_virtual_network_rule

Manages a PostgreSQL Virtual Network Rule.

-> **NOTE:** PostgreSQL Virtual Network Rules [can only be used with SKU Tiers of `generalPurpose` or `memoryOptimized`](https://docs.microsoft.com/azure/postgresql/concepts-data-access-and-security-vnet)

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermVirtualNetworkExample =
      new azurerm.virtualNetwork.VirtualNetwork(this, "example_1", {
        addressSpace: ["10.7.29.0/29"],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-vnet",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualNetworkExample.overrideLogicalId("example");
    const azurermPostgresqlServerExample =
      new azurerm.postgresqlServer.PostgresqlServer(this, "example_2", {
        administratorLogin: "psqladmin",
        administratorLoginPassword: "H@Sh1CoR3!",
        backupRetentionDays: 7,
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "postgresql-server-1",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        skuName: "GP_Gen5_2",
        sslEnforcementEnabled: true,
        storageMb: 5120,
        version: "9.5",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermPostgresqlServerExample.overrideLogicalId("example");
    const azurermSubnetInternal = new azurerm.subnet.Subnet(this, "internal", {
      addressPrefixes: ["10.7.29.0/29"],
      name: "internal",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      serviceEndpoints: ["Microsoft.Sql"],
      virtualNetworkName: cdktf.Token.asString(
        azurermVirtualNetworkExample.name
      ),
    });
    const azurermPostgresqlVirtualNetworkRuleExample =
      new azurerm.postgresqlVirtualNetworkRule.PostgresqlVirtualNetworkRule(
        this,
        "example_4",
        {
          ignoreMissingVnetServiceEndpoint: true,
          name: "postgresql-vnet-rule",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          serverName: cdktf.Token.asString(azurermPostgresqlServerExample.name),
          subnetId: cdktf.Token.asString(azurermSubnetInternal.id),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermPostgresqlVirtualNetworkRuleExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the PostgreSQL virtual network rule. Cannot be empty and must only contain alphanumeric characters and hyphens. Cannot start with a number, and cannot start or end with a hyphen. Changing this forces a new resource to be created.

~> **NOTE:** `name` must be between 1-128 characters long and must satisfy all of the requirements below:

1. Contains only alphanumeric and hyphen characters
2. Cannot start with a number or hyphen
3. Cannot end with a hyphen

* `resourceGroupName` - (Required) The name of the resource group where the PostgreSQL server resides. Changing this forces a new resource to be created.

* `serverName` - (Required) The name of the SQL Server to which this PostgreSQL virtual network rule will be applied to. Changing this forces a new resource to be created.

* `subnetId` - (Required) The ID of the subnet that the PostgreSQL server will be connected to.

* `ignoreMissingVnetServiceEndpoint` - (Optional) Should the Virtual Network Rule be created before the Subnet has the Virtual Network Service Endpoint enabled? 

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the PostgreSQL Virtual Network Rule.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the PostgreSQL Virtual Network Rule.
* `update` - (Defaults to 30 minutes) Used when updating the PostgreSQL Virtual Network Rule.
* `read` - (Defaults to 5 minutes) Used when retrieving the PostgreSQL Virtual Network Rule.
* `delete` - (Defaults to 30 minutes) Used when deleting the PostgreSQL Virtual Network Rule.

## Import

PostgreSQL Virtual Network Rules can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_postgresql_virtual_network_rule.rule1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.DBforPostgreSQL/servers/myserver/virtualNetworkRules/vnetrulename
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-80985e872f256d52eba50c583b02c9db31fb9838710a1b2110b2c573588a47b4 -->