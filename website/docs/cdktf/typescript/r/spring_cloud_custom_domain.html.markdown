---
subcategory: "Spring Cloud"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_spring_cloud_custom_domain"
description: |-
  Manages an Azure Spring Cloud Custom Domain.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_spring_cloud_custom_domain

Manages an Azure Spring Cloud Custom Domain.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new azurerm.provider.AzurermProvider(this, "azurerm", {
      features: {},
    });
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "rg-example",
      }
    );
    const azurermSpringCloudServiceExample =
      new azurerm.springCloudService.SpringCloudService(this, "example_2", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-springcloud",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSpringCloudServiceExample.overrideLogicalId("example");
    const dataAzurermDnsZoneExample =
      new azurerm.dataAzurermDnsZone.DataAzurermDnsZone(this, "example_3", {
        name: "mydomain.com",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAzurermDnsZoneExample.overrideLogicalId("example");
    const azurermSpringCloudAppExample =
      new azurerm.springCloudApp.SpringCloudApp(this, "example_4", {
        name: "example-springcloudapp",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        serviceName: cdktf.Token.asString(
          azurermSpringCloudServiceExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSpringCloudAppExample.overrideLogicalId("example");
    const azurermDnsCnameRecordExample =
      new azurerm.dnsCnameRecord.DnsCnameRecord(this, "example_5", {
        name: "record1",
        record: cdktf.Token.asString(azurermSpringCloudAppExample.fqdn),
        resourceGroupName: cdktf.Token.asString(
          dataAzurermDnsZoneExample.resourceGroupName
        ),
        ttl: 300,
        zoneName: cdktf.Token.asString(dataAzurermDnsZoneExample.name),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDnsCnameRecordExample.overrideLogicalId("example");
    const azurermSpringCloudCustomDomainExample =
      new azurerm.springCloudCustomDomain.SpringCloudCustomDomain(
        this,
        "example_6",
        {
          name: cdktf.Fn.join(
            ".",
            cdktf.Token.asList([
              azurermDnsCnameRecordExample.name,
              azurermDnsCnameRecordExample.zoneName,
            ])
          ),
          springCloudAppId: cdktf.Token.asString(
            azurermSpringCloudAppExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSpringCloudCustomDomainExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Spring Cloud Custom Domain. Changing this forces a new resource to be created.

* `springCloudAppId` - (Required) Specifies the resource ID of the Spring Cloud Application. Changing this forces a new resource to be created.

* `certificateName` - (Optional) Specifies the name of the Spring Cloud Certificate that binds to the Spring Cloud Custom Domain. Required when `thumbprint` is specified

* `thumbprint` - (Optional) Specifies the thumbprint of the Spring Cloud Certificate that binds to the Spring Cloud Custom Domain. Required when `certificateName` is specified. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Spring Cloud Custom Domain.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Spring Cloud Custom Domain.
* `read` - (Defaults to 5 minutes) Used when retrieving the Spring Cloud Custom Domain.
* `update` - (Defaults to 30 minutes) Used when updating the Spring Cloud Custom Domain.
* `delete` - (Defaults to 30 minutes) Used when deleting the Spring Cloud Custom Domain.

## Import

Spring Cloud Custom Domain can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_spring_cloud_custom_domain.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.AppPlatform/spring/spring1/apps/app1/domains/domain.com
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-65c5a36b3ed9fc0e738689ddba2435a3aa491e2b7834066d0ee9d05d25df6017 -->