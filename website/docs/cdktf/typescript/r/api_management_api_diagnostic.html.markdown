---
subcategory: "API Management"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_api_management_api_diagnostic"
description: |-
  Manages a API Management Service API Diagnostics Logs.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_api_management_api_diagnostic

Manages a API Management Service API Diagnostics Logs.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new azurerm.provider.AzurermProvider(this, "azurerm", {
      features: {},
    });
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermApiManagementExample = new azurerm.apiManagement.ApiManagement(
      this,
      "example_2",
      {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-apim",
        publisherEmail: "company@terraform.io",
        publisherName: "My Company",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        skuName: "Developer_1",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermApiManagementExample.overrideLogicalId("example");
    const azurermApiManagementApiExample =
      new azurerm.apiManagementApi.ApiManagementApi(this, "example_3", {
        apiManagementName: cdktf.Token.asString(
          azurermApiManagementExample.name
        ),
        displayName: "Example API",
        import: {
          contentFormat: "swagger-link-json",
          contentValue: "http://conferenceapi.azurewebsites.net/?format=json",
        },
        name: "example-api",
        path: "example",
        protocols: ["https"],
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        revision: "1",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermApiManagementApiExample.overrideLogicalId("example");
    const azurermApplicationInsightsExample =
      new azurerm.applicationInsights.ApplicationInsights(this, "example_4", {
        applicationType: "web",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-appinsights",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermApplicationInsightsExample.overrideLogicalId("example");
    const azurermApiManagementLoggerExample =
      new azurerm.apiManagementLogger.ApiManagementLogger(this, "example_5", {
        apiManagementName: cdktf.Token.asString(
          azurermApiManagementExample.name
        ),
        applicationInsights: {
          instrumentationKey: cdktf.Token.asString(
            azurermApplicationInsightsExample.instrumentationKey
          ),
        },
        name: "example-apimlogger",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermApiManagementLoggerExample.overrideLogicalId("example");
    const azurermApiManagementApiDiagnosticExample =
      new azurerm.apiManagementApiDiagnostic.ApiManagementApiDiagnostic(
        this,
        "example_6",
        {
          alwaysLogErrors: true,
          apiManagementLoggerId: cdktf.Token.asString(
            azurermApiManagementLoggerExample.id
          ),
          apiManagementName: cdktf.Token.asString(
            azurermApiManagementExample.name
          ),
          apiName: cdktf.Token.asString(azurermApiManagementApiExample.name),
          backendRequest: {
            bodyBytes: 32,
            headersToLog: ["content-type", "accept", "origin"],
          },
          backendResponse: {
            bodyBytes: 32,
            headersToLog: ["content-type", "content-length", "origin"],
          },
          frontendRequest: {
            bodyBytes: 32,
            headersToLog: ["content-type", "accept", "origin"],
          },
          frontendResponse: {
            bodyBytes: 32,
            headersToLog: ["content-type", "content-length", "origin"],
          },
          httpCorrelationProtocol: "W3C",
          identifier: "applicationinsights",
          logClientIp: true,
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          samplingPercentage: 5,
          verbosity: "verbose",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermApiManagementApiDiagnosticExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `apiManagementLoggerId` - (Required) The ID (name) of the Diagnostics Logger.

* `apiManagementName` - (Required) The name of the API Management Service instance. Changing this forces a new API Management Service API Diagnostics Logs to be created.

* `apiName` - (Required) The name of the API on which to configure the Diagnostics Logs. Changing this forces a new API Management Service API Diagnostics Logs to be created.

* `identifier` - (Required) Identifier of the Diagnostics Logs. Possible values are `applicationinsights` and `azuremonitor`. Changing this forces a new API Management Service API Diagnostics Logs to be created.

* `resourceGroupName` - (Required) The name of the Resource Group where the API Management Service API Diagnostics Logs should exist. Changing this forces a new API Management Service API Diagnostics Logs to be created.

---

* `alwaysLogErrors` - (Optional) Always log errors. Send telemetry if there is an erroneous condition, regardless of sampling settings.

* `backendRequest` - (Optional) A `backendRequest` block as defined below.

* `backendResponse` - (Optional) A `backendResponse` block as defined below.

* `frontendRequest` - (Optional) A `frontendRequest` block as defined below.

* `frontendResponse` - (Optional) A `frontendResponse` block as defined below.

* `httpCorrelationProtocol` - (Optional) The HTTP Correlation Protocol to use. Possible values are `none`, `legacy` or `w3C`.

* `logClientIp` - (Optional) Log client IP address.

* `samplingPercentage` - (Optional) Sampling (%). For high traffic APIs, please read this [documentation](https://docs.microsoft.com/azure/api-management/api-management-howto-app-insights#performance-implications-and-log-sampling) to understand performance implications and log sampling. Valid values are between `00` and `1000`.

* `verbosity` - (Optional) Logging verbosity. Possible values are `verbose`, `information` or `error`.

* `operationNameFormat` - (Optional) The format of the Operation Name for Application Insights telemetries. Possible values are `name`, and `url`. Defaults to `name`.

---

A `backendRequest`, `backendResponse`, `frontendRequest` or `frontendResponse` block supports the following:

* `bodyBytes` - (Optional) Number of payload bytes to log (up to 8192).

* `headersToLog` - (Optional) Specifies a list of headers to log.

* `dataMasking` - (Optional) A `dataMasking` block as defined below.

---

A `dataMasking` block supports the following:

* `queryParams` - (Optional) A `queryParams` block as defined below.

* `headers` - (Optional) A `headers` block as defined below.

---

The `queryParams` and `headers` blocks support the following:

* `mode` - (Required) The data masking mode. Possible values are `mask` and `hide` for `queryParams`. The only possible value is `mask` for `headers`.

* `value` - (Required) The name of the header or the query parameter to mask.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the API Management Service API Diagnostics Logs.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the API Management Service API Diagnostics Logs.
* `read` - (Defaults to 5 minutes) Used when retrieving the API Management Service API Diagnostics Logs.
* `update` - (Defaults to 30 minutes) Used when updating the API Management Service API Diagnostics Logs.
* `delete` - (Defaults to 30 minutes) Used when deleting the API Management Service API Diagnostics Logs.

## Import

API Management Service API Diagnostics Logs can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_api_management_api_diagnostic.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ApiManagement/service/instance1/apis/api1/diagnostics/diagnostic1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-d0df6ba62062037bee57106d22e76aacb25e778d00fc26e11f8216bd1dd6c9d6 -->