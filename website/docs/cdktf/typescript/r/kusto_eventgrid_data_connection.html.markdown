---
subcategory: "Data Explorer"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_kusto_eventgrid_data_connection"
description: |-
  Manages Kusto / Data Explorer Event Grid Data Connection
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_kusto_eventgrid_data_connection

Manages a Kusto (also known as Azure Data Explorer) Event Grid Data Connection

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermStorageAccountExample =
      new azurerm.storageAccount.StorageAccount(this, "example_1", {
        accountReplicationType: "GRS",
        accountTier: "Standard",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "storageaccountname",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageAccountExample.overrideLogicalId("example");
    const azurermEventhubNamespaceExample =
      new azurerm.eventhubNamespace.EventhubNamespace(this, "example_2", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "eventhubnamespace-example",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        sku: "Standard",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermEventhubNamespaceExample.overrideLogicalId("example");
    const azurermKustoClusterExample = new azurerm.kustoCluster.KustoCluster(
      this,
      "example_3",
      {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "examplekustocluster",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        sku: {
          capacity: 2,
          name: "Standard_D13_v2",
        },
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermKustoClusterExample.overrideLogicalId("example");
    const azurermKustoDatabaseExample = new azurerm.kustoDatabase.KustoDatabase(
      this,
      "example_4",
      {
        clusterName: cdktf.Token.asString(azurermKustoClusterExample.name),
        hotCachePeriod: "P7D",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-kusto-database",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        softDeletePeriod: "P31D",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermKustoDatabaseExample.overrideLogicalId("example");
    const azurermEventhubExample = new azurerm.eventhub.Eventhub(
      this,
      "example_5",
      {
        messageRetention: 1,
        name: "eventhub-example",
        namespaceName: cdktf.Token.asString(
          azurermEventhubNamespaceExample.name
        ),
        partitionCount: 1,
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermEventhubExample.overrideLogicalId("example");
    const azurermEventhubConsumerGroupExample =
      new azurerm.eventhubConsumerGroup.EventhubConsumerGroup(
        this,
        "example_6",
        {
          eventhubName: cdktf.Token.asString(azurermEventhubExample.name),
          name: "consumergroup-example",
          namespaceName: cdktf.Token.asString(
            azurermEventhubNamespaceExample.name
          ),
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermEventhubConsumerGroupExample.overrideLogicalId("example");
    const azurermEventgridEventSubscriptionExample =
      new azurerm.eventgridEventSubscription.EventgridEventSubscription(
        this,
        "example_7",
        {
          eventDeliverySchema: "EventGridSchema",
          eventhubEndpointId: cdktf.Token.asString(azurermEventhubExample.id),
          includedEventTypes: [
            "Microsoft.Storage.BlobCreated",
            "Microsoft.Storage.BlobRenamed",
          ],
          name: "eventgrid-example",
          retryPolicy: {
            eventTimeToLive: 144,
            maxDeliveryAttempts: 10,
          },
          scope: cdktf.Token.asString(azurermStorageAccountExample.id),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermEventgridEventSubscriptionExample.overrideLogicalId("example");
    const azurermKustoEventgridDataConnectionExample =
      new azurerm.kustoEventgridDataConnection.KustoEventgridDataConnection(
        this,
        "example_8",
        {
          clusterName: cdktf.Token.asString(azurermKustoClusterExample.name),
          dataFormat: "JSON",
          databaseName: cdktf.Token.asString(azurermKustoDatabaseExample.name),
          dependsOn: [azurermEventgridEventSubscriptionExample],
          eventhubConsumerGroupName: cdktf.Token.asString(
            azurermEventhubConsumerGroupExample.name
          ),
          eventhubId: cdktf.Token.asString(azurermEventhubExample.id),
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          mappingRuleName: "my-table-mapping",
          name: "my-kusto-eventgrid-data-connection",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          storageAccountId: cdktf.Token.asString(
            azurermStorageAccountExample.id
          ),
          tableName: "my-table",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermKustoEventgridDataConnectionExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Kusto Event Grid Data Connection to create. Changing this forces a new resource to be created.

* `location` - (Required) The location where the Kusto Database should be created. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) Specifies the Resource Group where the Kusto Database should exist. Changing this forces a new resource to be created.

* `clusterName` - (Required) Specifies the name of the Kusto Cluster this data connection will be added to. Changing this forces a new resource to be created.

* `databaseName` - (Required) Specifies the name of the Kusto Database this data connection will be added to. Changing this forces a new resource to be created.

* `storageAccountId` - (Required) Specifies the resource id of the Storage Account this data connection will use for ingestion. Changing this forces a new resource to be created.

* `eventhubId` - (Required) Specifies the resource id of the Event Hub this data connection will use for ingestion. Changing this forces a new resource to be created.

* `eventhubConsumerGroupName` - (Required) Specifies the Event Hub consumer group this data connection will use for ingestion. Changing this forces a new resource to be created.

* `blobStorageEventType` - (Optional) Specifies the blob storage event type that needs to be processed. Possible Values are `microsoftStorageBlobCreated` and `microsoftStorageBlobRenamed`. Defaults to `microsoftStorageBlobCreated`.

* `dataFormat` - (Optional) Specifies the data format of the EventHub messages. Allowed values: `apacheavro`, `avro`, `csv`, `json`, `multijson`, `orc`, `parquet`, `psv`, `raw`, `scsv`, `singlejson`, `sohsv`, `tsv`, `tsve`, `txt` and `w3Clogfile`.

* `databaseRoutingType` - (Optional) Indication for database routing information from the data connection, by default only database routing information is allowed. Allowed values: `single`, `multi`. Changing this forces a new resource to be created.

* `eventgridResourceId` - (Optional) The resource ID of the event grid that is subscribed to the storage account events.

* `managedIdentityResourceId` - (Optional) Empty for non-managed identity based data connection. For system assigned identity, provide cluster resource Id. For user assigned identity (UAI) provide the UAI resource Id.

* `mappingRuleName` - (Optional) Specifies the mapping rule used for the message ingestion. Mapping rule must exist before resource is created.

* `tableName` - (Optional) Specifies the target table name used for the message ingestion. Table must exist before resource is created.

* `skipFirstRecord` - (Optional) is the first record of every file ignored? Defaults to `false`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Kusto Event Grid Data Connection.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 60 minutes) Used when creating the Kusto Event Grid Data Connection.
* `update` - (Defaults to 60 minutes) Used when updating the Kusto Event Grid Data Connection.
* `read` - (Defaults to 5 minutes) Used when retrieving the Kusto Event Grid Data Connection.
* `delete` - (Defaults to 60 minutes) Used when deleting the Kusto Event Grid Data Connection.

## Import

Kusto Event Grid Data Connections can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_kusto_eventgrid_data_connection.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Kusto/clusters/cluster1/databases/database1/dataConnections/dataConnection1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-2cda01cd6a696bb6305d4dcf7d1e96144783f72242c38c73cfe496c4d04ec1b9 -->