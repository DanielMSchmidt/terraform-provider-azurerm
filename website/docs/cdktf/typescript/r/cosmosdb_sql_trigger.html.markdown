---
subcategory: "CosmosDB (DocumentDB)"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_cosmosdb_sql_trigger"
description: |-
  Manages an SQL Trigger.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_cosmosdb_sql_trigger

Manages an SQL Trigger.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAzurermCosmosdbAccountExample =
      new azurerm.dataAzurermCosmosdbAccount.DataAzurermCosmosdbAccount(
        this,
        "example",
        {
          name: "tfex-cosmosdb-account",
          resourceGroupName: "tfex-cosmosdb-account-rg",
        }
      );
    const azurermCosmosdbSqlDatabaseExample =
      new azurerm.cosmosdbSqlDatabase.CosmosdbSqlDatabase(this, "example_1", {
        accountName: cdktf.Token.asString(
          dataAzurermCosmosdbAccountExample.name
        ),
        name: "tfex-cosmos-db",
        resourceGroupName: cdktf.Token.asString(
          dataAzurermCosmosdbAccountExample.resourceGroupName
        ),
        throughput: 400,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermCosmosdbSqlDatabaseExample.overrideLogicalId("example");
    const azurermCosmosdbSqlContainerExample =
      new azurerm.cosmosdbSqlContainer.CosmosdbSqlContainer(this, "example_2", {
        accountName: cdktf.Token.asString(
          dataAzurermCosmosdbAccountExample.name
        ),
        databaseName: cdktf.Token.asString(
          azurermCosmosdbSqlDatabaseExample.name
        ),
        name: "example-container",
        partitionKeyPath: "/id",
        resourceGroupName: cdktf.Token.asString(
          dataAzurermCosmosdbAccountExample.resourceGroupName
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermCosmosdbSqlContainerExample.overrideLogicalId("example");
    const azurermCosmosdbSqlTriggerExample =
      new azurerm.cosmosdbSqlTrigger.CosmosdbSqlTrigger(this, "example_3", {
        body: "function trigger(){}",
        containerId: cdktf.Token.asString(
          azurermCosmosdbSqlContainerExample.id
        ),
        name: "test-trigger",
        operation: "Delete",
        type: "Post",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermCosmosdbSqlTriggerExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this SQL Trigger. Changing this forces a new SQL Trigger to be created.

* `containerId` - (Required) The id of the Cosmos DB SQL Container to create the SQL Trigger within. Changing this forces a new SQL Trigger to be created.

* `body` - (Required) Body of the Trigger.

* `operation` - (Required) The operation the trigger is associated with. Possible values are `all`, `create`, `update`, `delete` and `replace`.

* `type` - (Required) Type of the Trigger. Possible values are `pre` and `post`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the SQL Trigger.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the SQL Trigger.
* `read` - (Defaults to 5 minutes) Used when retrieving the SQL Trigger.
* `update` - (Defaults to 30 minutes) Used when updating the SQL Trigger.
* `delete` - (Defaults to 30 minutes) Used when deleting the SQL Trigger.

## Import

SQL Triggers can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_cosmosdb_sql_trigger.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DocumentDB/databaseAccounts/account1/sqlDatabases/database1/containers/container1/triggers/trigger1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-31d50ad59d97d14fdda8d7911c0d27ce847974cb293dc8d562943df9d8b21d6c -->