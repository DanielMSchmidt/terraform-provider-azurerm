---
subcategory: "CosmosDB (DocumentDB)"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_cosmosdb_postgresql_cluster"
description: |-
  Manages an Azure Cosmos DB for PostgreSQL Cluster.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_cosmosdb_postgresql_cluster

Manages an Azure Cosmos DB for PostgreSQL Cluster.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermCosmosdbPostgresqlClusterExample =
      new azurerm.cosmosdbPostgresqlCluster.CosmosdbPostgresqlCluster(
        this,
        "example_1",
        {
          administratorLoginPassword: "H@Sh1CoR3!",
          coordinatorStorageQuotaInMb: 131072,
          coordinatorVcoreCount: 2,
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "example-cluster",
          nodeCount: 0,
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermCosmosdbPostgresqlClusterExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Azure Cosmos DB for PostgreSQL Cluster. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the Resource Group where the Azure Cosmos DB for PostgreSQL Cluster should exist. Changing this forces a new resource to be created.

* `location` - (Required) The Azure Region where the Azure Cosmos DB for PostgreSQL Cluster should exist. Changing this forces a new resource to be created.

* `administratorLoginPassword` - (Required) The password of the administrator login.

* `coordinatorStorageQuotaInMb` - (Required) The coordinator storage allowed for the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4194304`, `8388608` and `16777216`.

-> **NOTE:** More information on [the types of compute resources available for CosmosDB can be found in the product documentation](https://learn.microsoft.com/azure/cosmos-db/postgresql/resources-compute)

* `coordinatorVcoreCount` - (Required) The coordinator vCore count for the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `1`, `2`, `4`, `8`, `16`, `32`, `64` and `96`.

* `nodeCount` - (Required) The worker node count of the Azure Cosmos DB for PostgreSQL Cluster. Possible value is between `0` and `20` except `1`.

* `citusVersion` - (Optional) The citus extension version on the Azure Cosmos DB for PostgreSQL Cluster. Possible values are `83`, `90`, `91`, `92`, `93`, `94`, `95`, `100`, `101`, `102`, `110`, `111`, `112` and `113`.

* `coordinatorPublicIpAccessEnabled` - (Optional) Is public access enabled on coordinator? Defaults to `true`.

* `coordinatorServerEdition` - (Optional) The edition of the coordinator server. Possible values are `burstableGeneralPurpose`, `burstableMemoryOptimized`, `generalPurpose` and `memoryOptimized`. Defaults to `generalPurpose`.

* `haEnabled` - (Optional) Is high availability enabled for the Azure Cosmos DB for PostgreSQL cluster? Defaults to `false`.

* `maintenanceWindow` - (Optional) A `maintenanceWindow` block as defined below.

* `nodePublicIpAccessEnabled` - (Optional) Is public access enabled on worker nodes. Defaults to `false`.

* `nodeServerEdition` - (Optional) The edition of the node server. Possible values are `burstableGeneralPurpose`, `burstableMemoryOptimized`, `generalPurpose` and `memoryOptimized`. Defaults to `memoryOptimized`.

* `nodeStorageQuotaInMb` - (Optional) The storage quota in MB on each worker node. Possible values are `32768`, `65536`, `131072`, `262144`, `524288`, `1048576`, `2097152`, `4194304`, `8388608` and `16777216`.

* `nodeVcores` - (Optional) The vCores count on each worker node. Possible values are `1`, `2`, `4`, `8`, `16`, `32`, `64`, `96` and `104`.

* `pointInTimeInUtc` - (Optional) The date and time in UTC (ISO8601 format) for the Azure Cosmos DB for PostgreSQL cluster restore. Changing this forces a new resource to be created.

* `preferredPrimaryZone` - (Optional) The preferred primary availability zone for the Azure Cosmos DB for PostgreSQL cluster.

* `shardsOnCoordinatorEnabled` - (Optional) Is shards on coordinator enabled for the Azure Cosmos DB for PostgreSQL cluster.

* `sourceLocation` - (Optional) The Azure region of the source Azure Cosmos DB for PostgreSQL cluster for read replica clusters. Changing this forces a new resource to be created.

* `sourceResourceId` - (Optional) The resource ID of the source Azure Cosmos DB for PostgreSQL cluster for read replica clusters. Changing this forces a new resource to be created.

* `sqlVersion` - (Optional) The major PostgreSQL version on the Azure Cosmos DB for PostgreSQL cluster. Possible values are `11`, `12`, `13`, `14` and `15`.

* `tags` - (Optional) A mapping of tags which should be assigned to the Azure Cosmos DB for PostgreSQL Cluster.

---

A `maintenanceWindow` block supports the following:

* `dayOfWeek` - (Optional) The day of week for maintenance window, where the week starts on a Sunday, i.e. Sunday = `0`, Monday = `1`. Defaults to `0`.

* `startHour` - (Optional) The start hour for maintenance window. Defaults to `0`.

* `startMinute` - (Optional) The start minute for maintenance window. Defaults to `0`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Azure Cosmos DB for PostgreSQL Cluster.

* `earliestRestoreTime` - The earliest restore point time (ISO8601 format) for the Azure Cosmos DB for PostgreSQL Cluster.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 3 hours) Used when creating the Azure Cosmos DB for PostgreSQL Cluster.
* `read` - (Defaults to 5 minutes) Used when retrieving the Azure Cosmos DB for PostgreSQL Cluster.
* `update` - (Defaults to 3 hours) Used when updating the Azure Cosmos DB for PostgreSQL Cluster.
* `delete` - (Defaults to 3 hours) Used when deleting the Azure Cosmos DB for PostgreSQL Cluster.

## Import

Azure Cosmos DB for PostgreSQL Clusters can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_cosmosdb_postgresql_cluster.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/cluster1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-72119e2bb2f876ac1bda51ccb65d5a8ba1ed97f88ab5f01eb0bee6e76989a973 -->