---
subcategory: "Messaging"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_notification_hub_authorization_rule"
description: |-
  Manages an Authorization Rule associated with a Notification Hub within a Notification Hub Namespace.

---


<!-- Please do not edit this file, it is generated. -->
# azurerm_notification_hub_authorization_rule

Manages an Authorization Rule associated with a Notification Hub within a Notification Hub Namespace.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "notificationhub-resources",
      }
    );
    const azurermNotificationHubNamespaceExample =
      new azurerm.notificationHubNamespace.NotificationHubNamespace(
        this,
        "example_1",
        {
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "myappnamespace",
          namespaceType: "NotificationHub",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          skuName: "Free",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNotificationHubNamespaceExample.overrideLogicalId("example");
    const azurermNotificationHubExample =
      new azurerm.notificationHub.NotificationHub(this, "example_2", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "mynotificationhub",
        namespaceName: cdktf.Token.asString(
          azurermNotificationHubNamespaceExample.name
        ),
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNotificationHubExample.overrideLogicalId("example");
    const azurermNotificationHubAuthorizationRuleExample =
      new azurerm.notificationHubAuthorizationRule.NotificationHubAuthorizationRule(
        this,
        "example_3",
        {
          listen: true,
          manage: true,
          name: "management-auth-rule",
          namespaceName: cdktf.Token.asString(
            azurermNotificationHubNamespaceExample.name
          ),
          notificationHubName: cdktf.Token.asString(
            azurermNotificationHubExample.name
          ),
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          send: true,
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNotificationHubAuthorizationRuleExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name to use for this Authorization Rule. Changing this forces a new resource to be created.

* `notificationHubName` - (Required) The name of the Notification Hub for which the Authorization Rule should be created. Changing this forces a new resource to be created.

* `namespaceName` - (Required) The name of the Notification Hub Namespace in which the Notification Hub exists. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the Resource Group in which the Notification Hub Namespace exists. Changing this forces a new resource to be created.

* `manage` - (Optional) Does this Authorization Rule have Manage access to the Notification Hub? Defaults to `false`.

-> **NOTE:** If `manage` is set to `true` then both `send` and `listen` must also be set to `true`.

* `send` - (Optional) Does this Authorization Rule have Send access to the Notification Hub? Defaults to `false`.

* `listen` - (Optional) Does this Authorization Rule have Listen access to the Notification Hub? Defaults to `false`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Authorization Rule.

* `primaryAccessKey` - The Primary Access Key associated with this Authorization Rule.

* `secondaryAccessKey` - The Secondary Access Key associated with this Authorization Rule.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Notification Hub Authorization Rule.
* `update` - (Defaults to 30 minutes) Used when updating the Notification Hub Authorization Rule.
* `read` - (Defaults to 5 minutes) Used when retrieving the Notification Hub Authorization Rule.
* `delete` - (Defaults to 30 minutes) Used when deleting the Notification Hub Authorization Rule.

## Import

Notification Hub Authorization Rule can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_notification_hub_authorization_rule.rule1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.NotificationHubs/namespaces/namespace1/notificationHubs/hub1/authorizationRules/rule1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-7319740088bbcaf365da6e9c0c667b46b342fd46f7fdfbc474cbf18d7e972928 -->