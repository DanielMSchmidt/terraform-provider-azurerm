---
subcategory: "Stream Analytics"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_stream_analytics_output_function"
description: |-
  Manages a Stream Analytics Output Function.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_stream_analytics_output_function

Manages a Stream Analytics Output Function.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermStorageAccountExample =
      new azurerm.storageAccount.StorageAccount(this, "example_1", {
        accountReplicationType: "LRS",
        accountTier: "Standard",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "examplestorageaccount",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageAccountExample.overrideLogicalId("example");
    const azurermStreamAnalyticsJobExample =
      new azurerm.streamAnalyticsJob.StreamAnalyticsJob(this, "example_2", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "examplestreamanalyticsjob",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        streamingUnits: 3,
        transformationQuery:
          "    SELECT *\n    INTO [YourOutputAlias]\n    FROM [YourInputAlias]\n",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStreamAnalyticsJobExample.overrideLogicalId("example");
    const azurermAppServicePlanExample =
      new azurerm.appServicePlan.AppServicePlan(this, "example_3", {
        kind: "FunctionApp",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "exampleappserviceplan",
        reserved: true,
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        sku: {
          size: "Y1",
          tier: "Dynamic",
        },
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermAppServicePlanExample.overrideLogicalId("example");
    const azurermFunctionAppExample = new azurerm.functionApp.FunctionApp(
      this,
      "example_4",
      {
        appServicePlanId: cdktf.Token.asString(azurermAppServicePlanExample.id),
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "examplefunctionapp",
        osType: "linux",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        storageAccountAccessKey: cdktf.Token.asString(
          azurermStorageAccountExample.primaryAccessKey
        ),
        storageAccountName: cdktf.Token.asString(
          azurermStorageAccountExample.name
        ),
        version: "~3",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermFunctionAppExample.overrideLogicalId("example");
    const azurermStreamAnalyticsOutputFunctionExample =
      new azurerm.streamAnalyticsOutputFunction.StreamAnalyticsOutputFunction(
        this,
        "example_5",
        {
          apiKey: "exampleapikey",
          functionApp: cdktf.Token.asString(azurermFunctionAppExample.name),
          functionName: "examplefunctionname",
          name: "exampleoutput",
          resourceGroupName: cdktf.Token.asString(
            azurermStreamAnalyticsJobExample.resourceGroupName
          ),
          streamAnalyticsJobName: cdktf.Token.asString(
            azurermStreamAnalyticsJobExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStreamAnalyticsOutputFunctionExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Stream Analytics Output. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the Resource Group where the Stream Analytics Output should exist. Changing this forces a new resource to be created.

* `streamAnalyticsJobName` - (Required) The name of the Stream Analytics Job. Changing this forces a new resource to be created.

* `apiKey` - (Required) The API key for the Function.

* `functionApp` - (Required) The name of the Function App.

* `functionName` - (Required) The name of the function in the Function App.

---

* `batchMaxCount` - (Optional) The maximum number of events in each batch that's sent to the function. Defaults to `100`.

* `batchMaxInBytes` - (Optional) The maximum batch size in bytes that's sent to the function. Defaults to `262144` (256 kB).

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Stream Analytics Output Function.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Stream Analytics Output Function.
* `read` - (Defaults to 5 minutes) Used when retrieving the Stream Analytics Output Function.
* `update` - (Defaults to 30 minutes) Used when updating the Stream Analytics Output Function.
* `delete` - (Defaults to 30 minutes) Used when deleting the Stream Analytics Output Function.

## Import

Stream Analytics Output Functions can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_stream_analytics_output_function.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingJobs/job1/outputs/output1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-8d042f864ad620fd279583a336a9b0caeadaa18d09263079489364c26f1232ef -->