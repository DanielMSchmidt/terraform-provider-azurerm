---
subcategory: "Management"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_management_lock"
description: |-
  Manages a Management Lock which is scoped to a Subscription, Resource Group or Resource.

---


<!-- Please do not edit this file, it is generated. -->
# azurerm_management_lock

Manages a Management Lock which is scoped to a Subscription, Resource Group or Resource.

## Example Usage (Subscription Level Lock)

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAzurermSubscriptionCurrent =
      new azurerm.dataAzurermSubscription.DataAzurermSubscription(
        this,
        "current",
        {}
      );
    new azurerm.managementLock.ManagementLock(this, "subscription-level", {
      lockLevel: "CanNotDelete",
      name: "subscription-level",
      notes: "Items can't be deleted in this subscription!",
      scope: cdktf.Token.asString(dataAzurermSubscriptionCurrent.id),
    });
  }
}

```

## Example Usage (Resource Group Level Lock)

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "locked-resource-group",
      }
    );
    new azurerm.managementLock.ManagementLock(this, "resource-group-level", {
      lockLevel: "ReadOnly",
      name: "resource-group-level",
      notes: "This Resource Group is Read-Only",
      scope: cdktf.Token.asString(azurermResourceGroupExample.id),
    });
  }
}

```

## Example Usage (Resource Level Lock)

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "locked-resource-group",
      }
    );
    const azurermPublicIpExample = new azurerm.publicIp.PublicIp(
      this,
      "example_1",
      {
        allocationMethod: "Static",
        idleTimeoutInMinutes: 30,
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "locked-publicip",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermPublicIpExample.overrideLogicalId("example");
    new azurerm.managementLock.ManagementLock(this, "public-ip", {
      lockLevel: "CanNotDelete",
      name: "resource-ip",
      notes: "Locked because it's needed by a third-party",
      scope: cdktf.Token.asString(azurermPublicIpExample.id),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Management Lock. Changing this forces a new resource to be created.

* `scope` - (Required) Specifies the scope at which the Management Lock should be created. Changing this forces a new resource to be created.

* `lockLevel` - (Required) Specifies the Level to be used for this Lock. Possible values are `canNotDelete` and `readOnly`. Changing this forces a new resource to be created.

~> **Note:** `canNotDelete` means authorized users are able to read and modify the resources, but not delete. `readOnly` means authorized users can only read from a resource, but they can't modify or delete it.

* `notes` - (Optional) Specifies some notes about the lock. Maximum of 512 characters. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Management Lock

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Management Lock.
* `update` - (Defaults to 30 minutes) Used when updating the Management Lock.
* `read` - (Defaults to 5 minutes) Used when retrieving the Management Lock.
* `delete` - (Defaults to 30 minutes) Used when deleting the Management Lock.

## Import

Management Locks can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_management_lock.lock1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Authorization/locks/lock1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-fd7d0dd8b83f8aea43c04f685b242059df625d171bb70b7721f0d120007484d4 -->