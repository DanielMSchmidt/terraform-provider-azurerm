---
subcategory: "Desktop Virtualization"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_virtual_desktop_application_group"
description: |-
  Manages a Virtual Desktop Application Group.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_virtual_desktop_application_group

Manages a Virtual Desktop Application Group.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new azurerm.provider.AzurermProvider(this, "azurerm", {
      features: {},
    });
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "rg-example-virtualdesktop",
      }
    );
    const azurermVirtualDesktopHostPoolPersonalautomatic =
      new azurerm.virtualDesktopHostPool.VirtualDesktopHostPool(
        this,
        "personalautomatic",
        {
          loadBalancerType: "BreadthFirst",
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "personalautomatic",
          personalDesktopAssignmentType: "Automatic",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          type: "Personal",
        }
      );
    const azurermVirtualDesktopHostPoolPooledbreadthfirst =
      new azurerm.virtualDesktopHostPool.VirtualDesktopHostPool(
        this,
        "pooledbreadthfirst",
        {
          loadBalancerType: "BreadthFirst",
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "pooledbreadthfirst",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          type: "Pooled",
        }
      );
    new azurerm.virtualDesktopApplicationGroup.VirtualDesktopApplicationGroup(
      this,
      "desktopapp",
      {
        description: "Acceptance Test: An application group",
        friendlyName: "TestAppGroup",
        hostPoolId: cdktf.Token.asString(
          azurermVirtualDesktopHostPoolPersonalautomatic.id
        ),
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "appgroupdesktop",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        type: "Desktop",
      }
    );
    new azurerm.virtualDesktopApplicationGroup.VirtualDesktopApplicationGroup(
      this,
      "remoteapp",
      {
        description: "Acceptance Test: An application group",
        friendlyName: "TestAppGroup",
        hostPoolId: cdktf.Token.asString(
          azurermVirtualDesktopHostPoolPooledbreadthfirst.id
        ),
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "acctag",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        type: "RemoteApp",
      }
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Virtual Desktop Application Group. Changing the name forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the resource group in which to create the Virtual Desktop Application Group. Changing this forces a new resource to be created.

* `location` - (Required) The location/region where the Virtual Desktop Application Group is located. Changing this forces a new resource to be created.

* `type` - (Required) Type of Virtual Desktop Application Group. Valid options are `remoteApp` or `desktop` application groups. Changing this forces a new resource to be created.

* `hostPoolId` - (Required) Resource ID for a Virtual Desktop Host Pool to associate with the Virtual Desktop Application Group. Changing the name forces a new resource to be created.

* `friendlyName` - (Optional) Option to set a friendly name for the Virtual Desktop Application Group.

* `defaultDesktopDisplayName` - (Optional) Option to set the display name for the default sessionDesktop desktop when `type` is set to `desktop`.

* `description` - (Optional) Option to set a description for the Virtual Desktop Application Group.

* `tags` - (Optional) A mapping of tags to assign to the resource.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Virtual Desktop Application Group.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 60 minutes) Used when creating the Virtual Desktop Application Group.
* `update` - (Defaults to 60 minutes) Used when updating the Virtual Desktop Application Group.
* `read` - (Defaults to 5 minutes) Used when retrieving the Virtual Desktop Application Group.
* `delete` - (Defaults to 60 minutes) Used when deleting the Virtual Desktop Application Group.

## Import

Virtual Desktop Application Groups can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_virtual_desktop_application_group.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myGroup1/providers/Microsoft.DesktopVirtualization/applicationGroups/myapplicationgroup
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-a04c2fab694959a48666039197ffbb0c7a5a44ee5828c133de4c9097bcedea7c -->