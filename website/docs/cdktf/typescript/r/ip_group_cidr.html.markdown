---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_ip_group_cidr"
description: |-
  Manages a IP Group CIDR.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_ip_group_cidr

Manages IP Group CIDR records.

~> Warning Do not use this resource at the same time as the `cidrs` property of the
`azurermIpGroup` resource for the same IP Group. Doing so will cause a conflict and
CIDRS will be removed.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "test-rg",
      }
    );
    const azurermIpGroupExample = new azurerm.ipGroup.IpGroup(
      this,
      "example_1",
      {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "test-ipgroup",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermIpGroupExample.overrideLogicalId("example");
    const azurermIpGroupCidrExample = new azurerm.ipGroupCidr.IpGroupCidr(
      this,
      "example_2",
      {
        cidr: "10.10.10.0/24",
        ipGroupId: cdktf.Token.asString(azurermIpGroupExample.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermIpGroupCidrExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `ipGroupId` - (Required) The ID of the destination IP Group.
Changing this forces a new IP Group CIDR to be created.

* `cidr` - (Required) The `cidr` that should be added to the IP Group.
Changing this forces a new IP Group CIDR to be created.

~> **NOTE:** The AzureRM Terraform provider provides cidr support via this standalone resource and in-line within [azurerm_ip_group](ip_group.html) using the `cidrs` property. You cannot use both methods simultaneously. If cidrs are set via this resource then `ignoreChanges` should be used in the resource `azurermIpGroupCidr` configuration.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported: 

* `id` - The ID of the IP Group CIDR.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the IP Group CIDR.
* `read` - (Defaults to 5 minutes) Used when retrieving the IP Group CIDR.
* `delete` - (Defaults to 30 minutes) Used when deleting the IP Group CIDR.

## Import

IP Group CIDRs can be imported using the `resource id` of the IP Group and
the CIDR value (`/` characters have to be replaced by `_`), e.g.

```shell
terraform import azurerm_ip_group_cidr.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/test-rg/providers/Microsoft.Network/ipGroups/test-ipgroup/cidrs/10.1.0.0_24
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-8990afb64ea3013f9d65aae291bc241aa499a4e34d3b69833d3fe82bef6ffdb4 -->