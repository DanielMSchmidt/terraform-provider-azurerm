---
subcategory: "Automation"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_automation_hybrid_runbook_worker"
description: |-
  Manages a Automation.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_automation_hybrid_runbook_worker

Manages a Automation Hybrid Runbook Worker.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermVirtualNetworkExample =
      new azurerm.virtualNetwork.VirtualNetwork(this, "example_1", {
        addressSpace: ["192.168.1.0/24"],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-vnet",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualNetworkExample.overrideLogicalId("example");
    const azurermAutomationAccountExample =
      new azurerm.automationAccount.AutomationAccount(this, "example_2", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-account",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        skuName: "Basic",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermAutomationAccountExample.overrideLogicalId("example");
    const azurermAutomationHybridRunbookWorkerGroupExample =
      new azurerm.automationHybridRunbookWorkerGroup.AutomationHybridRunbookWorkerGroup(
        this,
        "example_3",
        {
          automationAccountName: cdktf.Token.asString(
            azurermAutomationAccountExample.name
          ),
          name: "example",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermAutomationHybridRunbookWorkerGroupExample.overrideLogicalId(
      "example"
    );
    const azurermSubnetExample = new azurerm.subnet.Subnet(this, "example_4", {
      addressPrefixes: ["192.168.1.0/24"],
      name: "example-subnet",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      virtualNetworkName: cdktf.Token.asString(
        azurermVirtualNetworkExample.name
      ),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSubnetExample.overrideLogicalId("example");
    const azurermNetworkInterfaceExample =
      new azurerm.networkInterface.NetworkInterface(this, "example_5", {
        ipConfiguration: [
          {
            name: "vm-example",
            privateIpAddressAllocation: "Dynamic",
            subnetId: cdktf.Token.asString(azurermSubnetExample.id),
          },
        ],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-nic",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNetworkInterfaceExample.overrideLogicalId("example");
    const azurermLinuxVirtualMachineExample =
      new azurerm.linuxVirtualMachine.LinuxVirtualMachine(this, "example_6", {
        adminPassword: "Password1234!",
        adminUsername: "testadmin",
        disablePasswordAuthentication: false,
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-vm",
        networkInterfaceIds: [
          cdktf.Token.asString(azurermNetworkInterfaceExample.id),
        ],
        osDisk: {
          caching: "ReadWrite",
          storageAccountType: "Standard_LRS",
        },
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        size: "Standard_B1s",
        sourceImageReference: {
          offer: "CentOS",
          publisher: "OpenLogic",
          sku: "7.5",
          version: "latest",
        },
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermLinuxVirtualMachineExample.overrideLogicalId("example");
    const azurermAutomationHybridRunbookWorkerExample =
      new azurerm.automationHybridRunbookWorker.AutomationHybridRunbookWorker(
        this,
        "example_7",
        {
          automationAccountName: cdktf.Token.asString(
            azurermAutomationAccountExample.name
          ),
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          vmResourceId: cdktf.Token.asString(
            azurermLinuxVirtualMachineExample.id
          ),
          workerGroupName: cdktf.Token.asString(
            azurermAutomationHybridRunbookWorkerGroupExample.name
          ),
          workerId: "00000000-0000-0000-0000-000000000000",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermAutomationHybridRunbookWorkerExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `resourceGroupName` - (Required) The name of the Resource Group where the Automation should exist. Changing this forces a new Automation to be created.

* `automationAccountName` - (Required) The name of the automation account in which the Hybrid Worker is created. Changing this forces a new resource to be created.

* `workerGroupName` - (Required) The name of the HybridWorker Group. Changing this forces a new Automation to be created.

* `workerId` - (Required) Specify the ID of this HybridWorker in UUID notation. Changing this forces a new Automation to be created.

* `vmResourceId` - (Required) The ID of the virtual machine used for this HybridWorker. Changing this forces a new Automation to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Automation Hybrid Runbook Worker.

* `ip` - The IP address of assigned machine.

* `lastSeenDateTime` - Last Heartbeat from the Worker.

* `registrationDateTime` - The registration time of the worker machine.

* `workerName` - The name of HybridWorker.

* `workerType` - The type of the HybridWorker, the possible values are `hybridV1` and `hybridV2`.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Automation.
* `read` - (Defaults to 5 minutes) Used when retrieving the Automation.
* `delete` - (Defaults to 10 minutes) Used when deleting the Automation.

## Import

Automations can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_automation_hybrid_runbook_worker.example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1/hybridRunbookWorkerGroups/group1/hybridRunbookWorkers/00000000-0000-0000-0000-000000000000
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-765e610da9472cbecc47fa110169acc9e3d7233ff85e06605f32773a60542a33 -->