---
subcategory: "Log Analytics"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_log_analytics_linked_storage_account"
description: |-
  Manages a Log Analytics Linked Storage Account.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_log_analytics_linked_storage_account

Manages a Log Analytics Linked Storage Account.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermStorageAccountExample =
      new azurerm.storageAccount.StorageAccount(this, "example_1", {
        accountReplicationType: "GRS",
        accountTier: "Standard",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "examplesa",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageAccountExample.overrideLogicalId("example");
    const azurermLogAnalyticsWorkspaceExample =
      new azurerm.logAnalyticsWorkspace.LogAnalyticsWorkspace(
        this,
        "example_2",
        {
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "exampleworkspace",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          sku: "PerGB2018",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermLogAnalyticsWorkspaceExample.overrideLogicalId("example");
    const azurermLogAnalyticsLinkedStorageAccountExample =
      new azurerm.logAnalyticsLinkedStorageAccount.LogAnalyticsLinkedStorageAccount(
        this,
        "example_3",
        {
          dataSourceType: "CustomLogs",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          storageAccountIds: [
            cdktf.Token.asString(azurermStorageAccountExample.id),
          ],
          workspaceResourceId: cdktf.Token.asString(
            azurermLogAnalyticsWorkspaceExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermLogAnalyticsLinkedStorageAccountExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `dataSourceType` - (Required) The data source type which should be used for this Log Analytics Linked Storage Account. Possible values are `customLogs`, `azureWatson`, `query`, `ingestion` and `alerts`. Changing this forces a new Log Analytics Linked Storage Account to be created.

> **Note:** The `dataSourceType` is case-insensitive in current 3.x version. And in 4.0 or later versions, Case-sensitivity will be required.

* `resourceGroupName` - (Required) The name of the Resource Group where the Log Analytics Linked Storage Account should exist. Changing this forces a new Log Analytics Linked Storage Account to be created.

* `workspaceResourceId` - (Required) The resource ID of the Log Analytics Workspace. Changing this forces a new Log Analytics Linked Storage Account to be created.

* `storageAccountIds` - (Required) The storage account resource ids to be linked.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Log Analytics Linked Storage Account.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Log Analytics Linked Storage Account.
* `read` - (Defaults to 5 minutes) Used when retrieving the Log Analytics Linked Storage Account.
* `update` - (Defaults to 30 minutes) Used when updating the Log Analytics Linked Storage Account.
* `delete` - (Defaults to 30 minutes) Used when deleting the Log Analytics Linked Storage Account.

## Import

Log Analytics Linked Storage Accounts can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_log_analytics_linked_storage_account.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.OperationalInsights/workspaces/workspace1/linkedStorageAccounts/{dataSourceType}
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-1311168410ce2628e2d6c85eba37d9a1c2cffe6baf184ca577f9fa66bab6bea6 -->