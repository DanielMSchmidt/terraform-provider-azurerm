---
subcategory: "Data Share"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_data_share"
description: |-
  Manages a Data Share.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_data_share

Manages a Data Share.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new azurerm.provider.AzurermProvider(this, "azurerm", {
      features: {},
    });
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermDataShareAccountExample =
      new azurerm.dataShareAccount.DataShareAccount(this, "example_2", {
        identity: {
          type: "SystemAssigned",
        },
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-dsa",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        tags: {
          foo: "bar",
        },
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataShareAccountExample.overrideLogicalId("example");
    const azurermDataShareExample = new azurerm.dataShare.DataShare(
      this,
      "example_3",
      {
        accountId: cdktf.Token.asString(azurermDataShareAccountExample.id),
        description: "example desc",
        kind: "CopyBased",
        name: "example_dss",
        snapshotSchedule: {
          name: "example-ss",
          recurrence: "Day",
          startTime: "2020-04-17T04:47:52.9614956Z",
        },
        terms: "example terms",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataShareExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Data Share. Changing this forces a new Data Share to be created.

* `accountId` - (Required) The ID of the Data Share account in which the Data Share is created. Changing this forces a new Data Share to be created.

* `kind` - (Required) The kind of the Data Share. Possible values are `copyBased` and `inPlace`. Changing this forces a new Data Share to be created.

* `description` - (Optional) The Data Share's description.

* `snapshotSchedule` - (Optional) A `snapshotSchedule` block as defined below.

* `terms` - (Optional) The terms of the Data Share.

---

A `snapshotSchedule` block supports the following:

* `name` - (Required) The name of the snapshot schedule.

* `recurrence` - (Required) The interval of the synchronization with the source data. Possible values are `hour` and `day`.

* `startTime` - (Required) The synchronization with the source data's start time.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Data Share.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Data Share.
* `read` - (Defaults to 5 minutes) Used when retrieving the Data Share.
* `update` - (Defaults to 30 minutes) Used when updating the Data Share.
* `delete` - (Defaults to 30 minutes) Used when deleting the Data Share.

## Import

Data Shares can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_data_share.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataShare/accounts/account1/shares/share1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-ab1c6fc8ce22c6603ace4ad415363d77307c6c73503052788ce8d659df9dae7e -->