---
subcategory: "Media"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_media_asset"
description: |-
  Manages a Media Asset.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_media_asset

Manages a Media Asset.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "media-resources",
      }
    );
    const azurermStorageAccountExample =
      new azurerm.storageAccount.StorageAccount(this, "example_1", {
        accountReplicationType: "GRS",
        accountTier: "Standard",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "examplestoracc",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageAccountExample.overrideLogicalId("example");
    const azurermMediaServicesAccountExample =
      new azurerm.mediaServicesAccount.MediaServicesAccount(this, "example_2", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "examplemediaacc",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        storageAccount: [
          {
            id: cdktf.Token.asString(azurermStorageAccountExample.id),
            isPrimary: true,
          },
        ],
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMediaServicesAccountExample.overrideLogicalId("example");
    const azurermMediaAssetExample = new azurerm.mediaAsset.MediaAsset(
      this,
      "example_3",
      {
        description: "Asset description",
        mediaServicesAccountName: cdktf.Token.asString(
          azurermMediaServicesAccountExample.name
        ),
        name: "Asset1",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMediaAssetExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `mediaServicesAccountName` - (Required) Specifies the name of the Media Services Account. Changing this forces a new Media Asset to be created.

* `name` - (Required) The name which should be used for this Media Asset. Changing this forces a new Media Asset to be created.

* `resourceGroupName` - (Required) The name of the Resource Group where the Media Asset should exist. Changing this forces a new Media Asset to be created.

---

* `alternateId` - (Optional) The alternate ID of the Asset.

* `container` - (Optional) The name of the asset blob container. Changing this forces a new Media Asset to be created.

* `description` - (Optional) The Asset description.

* `storageAccountName` - (Optional) The name of the storage account where to store the media asset. Changing this forces a new Media Asset to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Media Asset.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Media Asset.
* `read` - (Defaults to 5 minutes) Used when retrieving the Media Asset.
* `update` - (Defaults to 30 minutes) Used when updating the Media Asset.
* `delete` - (Defaults to 30 minutes) Used when deleting the Media Asset.

## Import

Media Assets can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_media_asset.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Media/mediaServices/account1/assets/asset1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-4e602a58d3151e6680e311c3f3f5168b176283f3880bd691299a25162fa497fb -->