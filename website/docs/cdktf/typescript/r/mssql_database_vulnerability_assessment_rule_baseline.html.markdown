---
subcategory: "Database"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_mssql_database_vulnerability_assessment_rule_baseline"
description: |-
  Manages a Database Vulnerability Assessment Rule Baseline.

---


<!-- Please do not edit this file, it is generated. -->
# azurerm_mssql_database_vulnerability_assessment_rule_baseline

Manages a Database Vulnerability Assessment Rule Baseline.

-> **NOTE** Database Vulnerability Assessment is currently only available for MS SQL databases.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermSqlServerExample = new azurerm.sqlServer.SqlServer(
      this,
      "example_1",
      {
        administratorLogin: "4dm1n157r470r",
        administratorLoginPassword: "4-v3ry-53cr37-p455w0rd",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "mysqlserver",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        version: "12.0",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSqlServerExample.overrideLogicalId("example");
    const azurermStorageAccountExample =
      new azurerm.storageAccount.StorageAccount(this, "example_2", {
        accountReplicationType: "GRS",
        accountTier: "Standard",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "accteststorageaccount",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageAccountExample.overrideLogicalId("example");
    const azurermStorageContainerExample =
      new azurerm.storageContainer.StorageContainer(this, "example_3", {
        containerAccessType: "private",
        name: "accteststoragecontainer",
        storageAccountName: cdktf.Token.asString(
          azurermStorageAccountExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageContainerExample.overrideLogicalId("example");
    const azurermMssqlServerSecurityAlertPolicyExample =
      new azurerm.mssqlServerSecurityAlertPolicy.MssqlServerSecurityAlertPolicy(
        this,
        "example_4",
        {
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          serverName: cdktf.Token.asString(azurermSqlServerExample.name),
          state: "Enabled",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMssqlServerSecurityAlertPolicyExample.overrideLogicalId("example");
    const azurermMssqlServerVulnerabilityAssessmentExample =
      new azurerm.mssqlServerVulnerabilityAssessment.MssqlServerVulnerabilityAssessment(
        this,
        "example_5",
        {
          serverSecurityAlertPolicyId: cdktf.Token.asString(
            azurermMssqlServerSecurityAlertPolicyExample.id
          ),
          storageAccountAccessKey: cdktf.Token.asString(
            azurermStorageAccountExample.primaryAccessKey
          ),
          storageContainerPath:
            "${" +
            azurermStorageAccountExample.primaryBlobEndpoint +
            "${" +
            azurermStorageContainerExample.name +
            "}/",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMssqlServerVulnerabilityAssessmentExample.overrideLogicalId(
      "example"
    );
    const azurermSqlDatabaseExample = new azurerm.sqlDatabase.SqlDatabase(
      this,
      "example_6",
      {
        edition: "Standard",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "mysqldatabase",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        serverName: cdktf.Token.asString(azurermSqlServerExample.name),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSqlDatabaseExample.overrideLogicalId("example");
    const azurermMssqlDatabaseVulnerabilityAssessmentRuleBaselineExample =
      new azurerm.mssqlDatabaseVulnerabilityAssessmentRuleBaseline.MssqlDatabaseVulnerabilityAssessmentRuleBaseline(
        this,
        "example_7",
        {
          baselineName: "master",
          baselineResult: [
            {
              result: ["allowedip1", "123.123.123.123", "123.123.123.123"],
            },
            {
              result: ["allowedip2", "255.255.255.255", "255.255.255.255"],
            },
          ],
          databaseName: cdktf.Token.asString(azurermSqlDatabaseExample.name),
          ruleId: "VA2065",
          serverVulnerabilityAssessmentId: cdktf.Token.asString(
            azurermMssqlServerVulnerabilityAssessmentExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMssqlDatabaseVulnerabilityAssessmentRuleBaselineExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `serverVulnerabilityAssessmentId` - (Required) The Vulnerability Assessment ID of the MS SQL Server. Changing this forces a new resource to be created.

* `databaseName` - (Required) Specifies the name of the MS SQL Database. Changing this forces a new resource to be created.

* `ruleId` - (Required) The vulnerability assessment rule ID. Changing this forces a new resource to be created.

* `baselineName` - (Optional) The name of the vulnerability assessment rule baseline. Valid options are `default` and `master`. `default` implies a baseline on a database level rule and `master` for server level rule. Defaults to `default`. Changing this forces a new resource to be created.

* `baselineResult` - (Required) A `baselineResult` block as documented below. Multiple blocks can be defined.

---

A `baselineResult` block supports the following:

* `result` - (Required) A list representing a result of the baseline.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Database Vulnerability Assessment Rule Baseline.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Database Vulnerability Assessment Rule Baseline.
* `update` - (Defaults to 30 minutes) Used when updating the Database Vulnerability Assessment Rule Baseline.
* `read` - (Defaults to 5 minutes) Used when retrieving the Database Vulnerability Assessment Rule Baseline.
* `delete` - (Defaults to 30 minutes) Used when deleting the Database Vulnerability Assessment Rule Baseline.

## Import

Database Vulnerability Assessment Rule Baseline can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_mssql_database_vulnerability_assessment_rule_baseline.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/acceptanceTestResourceGroup1/providers/Microsoft.Sql/servers/mssqlserver/databases/mysqldatabase/vulnerabilityAssessments/Default/rules/VA2065/baselines/master
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-29ba3e9556b2cbfd4e64853b5030e133edd41fff3593213233488e5f7da9b058 -->