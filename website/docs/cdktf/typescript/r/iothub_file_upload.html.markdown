---
subcategory: "IoT Hub"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_iothub_file_upload"
description: |-
  Manages the File Upload of an IoT Hub.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_iothub_file_upload

Manages the File Upload of an IoT Hub.

~> **NOTE:** File upload can be defined either directly on the `azurermIothub` resource, or using the `azurermIothubFileUpload` resource - but the two cannot be used together. If both are used against the same IoTHub, spurious changes will occur.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermStorageAccountExample =
      new azurerm.storageAccount.StorageAccount(this, "example_1", {
        accountReplicationType: "LRS",
        accountTier: "Standard",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "examplestorage",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageAccountExample.overrideLogicalId("example");
    const azurermStorageContainerExample =
      new azurerm.storageContainer.StorageContainer(this, "example_2", {
        containerAccessType: "private",
        name: "examplecontainer",
        storageAccountName: cdktf.Token.asString(
          azurermStorageAccountExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageContainerExample.overrideLogicalId("example");
    const azurermIothubExample = new azurerm.iothub.Iothub(this, "example_3", {
      lifecycle: {
        ignoreChanges: [fileUpload],
      },
      location: cdktf.Token.asString(azurermResourceGroupExample.location),
      name: "example",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      sku: {
        capacity: cdktf.Token.asNumber("1"),
        name: "S1",
      },
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermIothubExample.overrideLogicalId("example");
    const azurermIothubFileUploadExample =
      new azurerm.iothubFileUpload.IothubFileUploadA(this, "example_4", {
        connectionString: cdktf.Token.asString(
          azurermStorageAccountExample.primaryBlobConnectionString
        ),
        containerName: cdktf.Token.asString(
          azurermStorageContainerExample.name
        ),
        iothubId: cdktf.Token.asString(azurermIothubExample.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermIothubFileUploadExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `iothubId` - (Required) The ID of the IoT Hub. Changing this forces a new IoT Hub to be created.

* `connectionString` - (Required) The connection string for the Azure Storage account to which files are uploaded.

* `containerName` - (Required) The name of the root container where the files should be uploaded to. The container need not exist but should be creatable using the `connectionString` specified.

---

* `authenticationType` - (Optional) The type used to authenticate against the storage account. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.

* `defaultTtl` - (Optional) The period of time for which a file upload notification message is available to consume before it expires, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours. Defaults to `pt1H`.

* `identityId` - (Optional) The ID of the User Managed Identity used to authenticate against the storage account.

-> **NOTE:** `identityId` can only be specified when `authenticationType` is `identityBased`. It must be one of the `identityIds` of the IoT Hub. If `identityId` is omitted when `authenticationType` is `identityBased`, then the System-Assigned Managed Identity of the IoT Hub will be used.

* `lockDuration` - (Optional) The lock duration for the file upload notifications queue, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 5 and 300 seconds. Defaults to `pt1M`.

* `maxDeliveryCount` - (Optional) The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to `10`.

* `notificationsEnabled` - (Optional) Used to specify whether file notifications are sent to IoT Hub on upload. Defaults to `false`.

* `sasTtl` - (Optional) The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 24 hours. Defaults to `pt1H`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported: 

* `id` - The ID of the IoT Hub.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the IoT Hub.
* `read` - (Defaults to 5 minutes) Used when retrieving the IoT Hub.
* `update` - (Defaults to 30 minutes) Used when updating the IoT Hub.
* `delete` - (Defaults to 30 minutes) Used when deleting the IoT Hub.

## Import

IoT Hub File Uploads can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_iothub_file_upload.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Devices/iotHubs/hub1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-b749fe2128094d19d9ed776439b6472ecce1ade7fc57786b54833111cbac08d3 -->