---
subcategory: "Mobile Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_mobile_network_sim_group"
description: |-
  Manages a Mobile Network Sim Group.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_mobile_network_sim_group

Manages a Mobile Network Sim Group.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const dataAzurermKeyVaultExample =
      new azurerm.dataAzurermKeyVault.DataAzurermKeyVault(this, "example_1", {
        name: "example-kv",
        resourceGroupName: "some-resource-group",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAzurermKeyVaultExample.overrideLogicalId("example");
    const dataAzurermKeyVaultKeyExample =
      new azurerm.dataAzurermKeyVaultKey.DataAzurermKeyVaultKey(
        this,
        "example_2",
        {
          keyVaultId: cdktf.Token.asString(dataAzurermKeyVaultExample.id),
          name: "example-key",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAzurermKeyVaultKeyExample.overrideLogicalId("example");
    const dataAzurermUserAssignedIdentityExample =
      new azurerm.dataAzurermUserAssignedIdentity.DataAzurermUserAssignedIdentity(
        this,
        "example_3",
        {
          name: "name_of_user_assigned_identity",
          resourceGroupName: "name_of_resource_group",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAzurermUserAssignedIdentityExample.overrideLogicalId("example");
    const azurermMobileNetworkExample = new azurerm.mobileNetwork.MobileNetwork(
      this,
      "example_4",
      {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        mobileCountryCode: "001",
        mobileNetworkCode: "01",
        name: "example-mn",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMobileNetworkExample.overrideLogicalId("example");
    const azurermMobileNetworkSimGroupExample =
      new azurerm.mobileNetworkSimGroup.MobileNetworkSimGroup(
        this,
        "example_5",
        {
          encryptionKeyUrl: cdktf.Token.asString(
            dataAzurermKeyVaultKeyExample.id
          ),
          identity: {
            identityIds: [
              cdktf.Token.asString(dataAzurermUserAssignedIdentityExample.id),
            ],
            type: "SystemAssigned, UserAssigned",
          },
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          mobileNetworkId: cdktf.Token.asString(azurermMobileNetworkExample.id),
          name: "example-mnsg",
          tags: {
            key: "value",
          },
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMobileNetworkSimGroupExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) Specifies the name which should be used for this Mobile Network Sim Groups. Changing this forces a new Mobile Network Sim Group to be created.

* `location` - (Required) Specifies the Azure Region where the Mobile Network Sim Groups should exist. Changing this forces a new Mobile Network Sim Group to be created.

* `mobileNetworkId` - (Required) The ID of Mobile Network which the Mobile Network Sim Group belongs to. Changing this forces a new Mobile Network Slice to be created.

* `encryptionKeyUrl` - (Optional) A key to encrypt the SIM data that belongs to this SIM group.

* `identity` - (Optional) An `identity` block as defined below.

-> **NOTE:** A `userAssigned` identity must be specified when `encryptionKeyUrl` is specified.

* `tags` - (Optional) A mapping of tags which should be assigned to the Mobile Network Sim Groups.

---

An `identity` block supports the following:

* `type` - (Required) Specifies the type of Managed Service Identity. Possible value is `userAssigned`.

* `identityIds` - (Optional) A list of IDs for User Assigned Managed Identity resources to be assigned.


## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Mobile Network Sim Groups.


## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 180 minutes) Used when creating the Mobile Network Sim Groups.
* `read` - (Defaults to 5 minutes) Used when retrieving the Mobile Network Sim Groups.
* `update` - (Defaults to 180 minutes) Used when updating the Mobile Network Sim Groups.
* `delete` - (Defaults to 180 minutes) Used when deleting the Mobile Network Sim Groups.

## Import

Mobile Network Sim Groups can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_mobile_network_sim_group.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.MobileNetwork/simGroups/simGroup1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-a859ac75d7f1dccf876c28a322b7125b8a1a50cfc6895ba4ef745da18f34ac50 -->