---
subcategory: "Database"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_mysql_flexible_server_configuration"
description: |-
  Sets a MySQL Flexible Server Configuration value on a MySQL Flexible Server.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_mysql_flexible_server_configuration

Sets a MySQL Flexible Server Configuration value on a MySQL Flexible Server.

## Disclaimers

~> **Note:** Since this resource is provisioned by default, the Azure Provider will not check for the presence of an existing resource prior to attempting to create it.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new azurerm.provider.AzurermProvider(this, "azurerm", {
      features: {},
    });
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermMysqlFlexibleServerExample =
      new azurerm.mysqlFlexibleServer.MysqlFlexibleServer(this, "example_2", {
        administratorLogin: "adminTerraform",
        administratorPassword: "H@Sh1CoR3!",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-fs",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        skuName: "GP_Standard_D2ds_v4",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMysqlFlexibleServerExample.overrideLogicalId("example");
    const azurermMysqlFlexibleServerConfigurationExample =
      new azurerm.mysqlFlexibleServerConfiguration.MysqlFlexibleServerConfiguration(
        this,
        "example_3",
        {
          name: "interactive_timeout",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          serverName: cdktf.Token.asString(
            azurermMysqlFlexibleServerExample.name
          ),
          value: "600",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMysqlFlexibleServerConfigurationExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the MySQL Flexible Server Configuration, which needs [to be a valid MySQL configuration name](https://dev.mysql.com/doc/refman/5.7/en/server-configuration.html). Changing this forces a new resource to be created.

* `serverName` - (Required) Specifies the name of the MySQL Flexible Server. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the resource group in which the MySQL Flexible Server exists. Changing this forces a new resource to be created.

* `value` - (Required) Specifies the value of the MySQL Flexible Server Configuration. See the MySQL documentation for valid values. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the MySQL Flexible Server Configuration.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the MySQL Flexible Server Configuration.
* `update` - (Defaults to 30 minutes) Used when updating the MySQL Flexible Server Configuration.
* `read` - (Defaults to 5 minutes) Used when retrieving the MySQL Flexible Server Configuration.
* `delete` - (Defaults to 30 minutes) Used when deleting the MySQL Flexible Server Configuration.

## Import

MySQL Flexible Server Configurations can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_mysql_flexible_server_configuration.interactive_timeout /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DBforMySQL/flexibleServers/flexibleServer1/configurations/interactive_timeout
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-a8243af736f16db5efaf737bd34d6ff05fe7952f4db584c5f9871022e61a33b2 -->