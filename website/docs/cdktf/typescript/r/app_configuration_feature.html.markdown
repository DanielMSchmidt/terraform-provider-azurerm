---
subcategory: "App Configuration"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_app_configuration_feature"
description: |-
  Manages an Azure App Configuration Feature.

---


<!-- Please do not edit this file, it is generated. -->
# azurerm_app_configuration_feature

Manages an Azure App Configuration Feature.

-> **Note:** App Configuration Features are provisioned using a Data Plane API which requires the role `App Configuration Data Owner` on either the App Configuration or a parent scope (such as the Resource Group/Subscription). [More information can be found in the Azure Documentation for App Configuration](https://docs.microsoft.com/azure/azure-app-configuration/concept-enable-rbac#azure-built-in-roles-for-azure-app-configuration). This is similar to providing App Configuration Keys.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const dataAzurermClientConfigCurrent =
      new azurerm.dataAzurermClientConfig.DataAzurermClientConfig(
        this,
        "current",
        {}
      );
    const azurermAppConfigurationAppconf =
      new azurerm.appConfiguration.AppConfiguration(this, "appconf", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "appConf1",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    new azurerm.appConfigurationFeature.AppConfigurationFeature(this, "test", {
      configurationStoreId: cdktf.Token.asString(
        azurermAppConfigurationAppconf.id
      ),
      description: "test description",
      enabled: true,
      label: "test-ackeylabel",
      name: "test-ackey",
    });
    new azurerm.roleAssignment.RoleAssignment(this, "appconf_dataowner", {
      principalId: cdktf.Token.asString(
        dataAzurermClientConfigCurrent.objectId
      ),
      roleDefinitionName: "App Configuration Data Owner",
      scope: cdktf.Token.asString(azurermAppConfigurationAppconf.id),
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `configurationStoreId` - (Required) Specifies the id of the App Configuration. Changing this forces a new resource to be created.

* `description` - (Optional) The description of the App Configuration Feature. 

* `enabled` - (Optional) The status of the App Configuration Feature. By default, this is set to false.

* `key` - (Optional) The key of the App Configuration Feature. The value for `name` will be used if this is unspecified. Changing this forces a new resource to be created.

* `label` - (Optional) The label of the App Configuration Feature. Changing this forces a new resource to be created.

* `locked` - (Optional) Should this App Configuration Feature be Locked to prevent changes?

* `name` - (Required) The name of the App Configuration Feature. Changing this forces a new resource to be created.

* `percentageFilterValue` - (Optional) A list of one or more numbers representing the value of the percentage required to enable this feature.

* `tags` - (Optional) A mapping of tags to assign to the resource.

* `targetingFilter` - (Optional) A `targetingFilter` block as defined below.

* `timewindowFilter` - (Optional) A `timewindowFilter` block as defined below.

---

A `targetingFilter` block represents a feature filter of type `microsoftTargeting` and takes the following attributes:

* `defaultRolloutPercentage` - (Required) A number representing the percentage of the entire user base.

* `groups` - (Optional) One or more blocks of type `groups` as defined below.

* `users` - (Optional) A list of users to target for this feature.

---

A `groups` block represents a group that can be used in a `targetingFilter` and takes the following attributes:

* `name` - (Required) The name of the group.

* `rolloutPercentage` - (Required) Rollout percentage of the group.

---

A `timewindowFilter` block represents a feature filter of type `microsoftTimeWindow` and takes the following attributes:

* `start` - (Optional) The earliest timestamp the feature is enabled. The timestamp must be in RFC3339 format.

* `end` - (Optional) The latest timestamp the feature is enabled. The timestamp must be in RFC3339 format.

---

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The App Configuration Feature ID.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 45 minutes) Used when creating the App Configuration Feature.
* `update` - (Defaults to 30 minutes) Used when updating the App Configuration Feature.
* `read` - (Defaults to 5 minutes) Used when retrieving the App Configuration Feature.
* `delete` - (Defaults to 30 minutes) Used when deleting the App Configuration Feature.

## Import

App Configuration Features can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_app_configuration_feature.test https://appconfname1.azconfig.io/kv/.appconfig.featureflag%2FkeyName?label=labelName
```

If you wish to import with an empty label then simply leave the label's name blank:

```shell
terraform import azurerm_app_configuration_feature.test https://appconfname1.azconfig.io/kv/.appconfig.featureflag%2FkeyName?label=
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-3e2810b6106a301f38994556d8f60e5c6c00251449af9f07c1f185af51b6fb58 -->