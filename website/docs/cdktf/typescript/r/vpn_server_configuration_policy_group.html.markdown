---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_vpn_server_configuration_policy_group"
description: |-
  Manages a VPN Server Configuration Policy Group.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_vpn_server_configuration_policy_group

Manages a VPN Server Configuration Policy Group.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermVpnServerConfigurationExample =
      new azurerm.vpnServerConfiguration.VpnServerConfiguration(
        this,
        "example_1",
        {
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "example-VPNSC",
          radius: {
            server: [
              {
                address: "10.105.1.1",
                score: 15,
                secret: "vindicators-the-return-of-worldender",
              },
            ],
          },
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          vpnAuthenticationTypes: ["Radius"],
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVpnServerConfigurationExample.overrideLogicalId("example");
    const azurermVpnServerConfigurationPolicyGroupExample =
      new azurerm.vpnServerConfigurationPolicyGroup.VpnServerConfigurationPolicyGroup(
        this,
        "example_2",
        {
          name: "example-VPNSCPG",
          policy: [
            {
              name: "policy1",
              type: "RadiusAzureGroupId",
              value: "6ad1bd08",
            },
          ],
          vpnServerConfigurationId: cdktf.Token.asString(
            azurermVpnServerConfigurationExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVpnServerConfigurationPolicyGroupExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The Name which should be used for this VPN Server Configuration Policy Group. Changing this forces a new resource to be created.

* `vpnServerConfigurationId` - (Required) The ID of the VPN Server Configuration that the VPN Server Configuration Policy Group belongs to. Changing this forces a new resource to be created.

* `policy` - (Required) One or more `policy` blocks as documented below.

* `isDefault` - (Optional) Is this a default VPN Server Configuration Policy Group? Defaults to `false`. Changing this forces a new resource to be created.

* `priority` - (Optional) The priority of this VPN Server Configuration Policy Group. Defaults to `0`.

---

A `policy` block supports the following:

* `name` - (Required) The name of the VPN Server Configuration Policy member.

* `type` - (Required) The attribute type of the VPN Server Configuration Policy member. Possible values are `aadGroupId`, `certificateGroupId` and `radiusAzureGroupId`.

* `value` - (Required) The value of the attribute that is used for the VPN Server Configuration Policy member.

## Attributes Reference

In addition to the arguments above, the following attributes are exported:

* `id` - The ID of the VPN Server Configuration Policy Group.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the VPN Server Configuration Policy Group.
* `update` - (Defaults to 30 minutes) Used when updating the VPN Server Configuration Policy Group.
* `read` - (Defaults to 5 minutes) Used when retrieving the VPN Server Configuration Policy Group.
* `delete` - (Defaults to 30 minutes) Used when deleting the VPN Server Configuration Policy Group.

## Import

VPN Server Configuration Policy Groups can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_vpn_server_configuration_policy_group.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Network/vpnServerConfigurations/serverConfiguration1/configurationPolicyGroups/configurationPolicyGroup1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-faf3e9ac8fe3e65bc98e99c55721e37826a01193832c1928a3cbf64fd31ecb90 -->