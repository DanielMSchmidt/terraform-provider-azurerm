---
subcategory: "Policy"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_subscription_policy_exemption"
description: |-
  Manages a Subscription Policy Exemption.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_subscription_policy_exemption

Manages a Subscription Policy Exemption.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAzurermPolicySetDefinitionExample =
      new azurerm.dataAzurermPolicySetDefinition.DataAzurermPolicySetDefinition(
        this,
        "example",
        {
          displayName:
            "Audit machines with insecure password security settings",
        }
      );
    const dataAzurermSubscriptionExample =
      new azurerm.dataAzurermSubscription.DataAzurermSubscription(
        this,
        "example_1",
        {}
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAzurermSubscriptionExample.overrideLogicalId("example");
    const azurermSubscriptionPolicyAssignmentExample =
      new azurerm.subscriptionPolicyAssignment.SubscriptionPolicyAssignment(
        this,
        "example_2",
        {
          identity: {
            type: "SystemAssigned",
          },
          location: "westus",
          name: "exampleAssignment",
          policyDefinitionId: cdktf.Token.asString(
            dataAzurermPolicySetDefinitionExample.id
          ),
          subscriptionId: cdktf.Token.asString(
            dataAzurermSubscriptionExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSubscriptionPolicyAssignmentExample.overrideLogicalId("example");
    const azurermSubscriptionPolicyExemptionExample =
      new azurerm.subscriptionPolicyExemption.SubscriptionPolicyExemption(
        this,
        "example_3",
        {
          exemptionCategory: "Mitigated",
          name: "exampleExemption",
          policyAssignmentId: cdktf.Token.asString(
            azurermSubscriptionPolicyAssignmentExample.id
          ),
          subscriptionId: cdktf.Token.asString(
            dataAzurermSubscriptionExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSubscriptionPolicyExemptionExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Policy Exemption. Changing this forces a new resource to be created.

* `subscriptionId` - (Required) The Subscription ID where the Policy Exemption should be applied. Changing this forces a new resource to be created.

* `exemptionCategory` - (Required) The category of this policy exemption. Possible values are `waiver` and `mitigated`.

* `policyAssignmentId` - (Required) The ID of the Policy Assignment to be exempted at the specified Scope. Changing this forces a new resource to be created.

* `description` - (Optional) A description to use for this Policy Exemption.

* `displayName` - (Optional) A friendly display name to use for this Policy Exemption.

* `expiresOn` - (Optional) The expiration date and time in UTC ISO 8601 format of this policy exemption.

* `policyDefinitionReferenceIds` - (Optional) The policy definition reference ID list when the associated policy assignment is an assignment of a policy set definition.

* `metadata` - (Optional) The metadata for this policy exemption. This is a JSON string representing additional metadata that should be stored with the policy exemption.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The Policy Exemption id.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Policy Exemption.
* `update` - (Defaults to 30 minutes) Used when updating the Policy Exemption.
* `read` - (Defaults to 5 minutes) Used when retrieving the Policy Exemption.
* `delete` - (Defaults to 30 minutes) Used when deleting the Policy Exemption.

## Import

Policy Exemptions can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_subscription_policy_exemption.exemption1 /subscriptions/00000000-0000-0000-000000000000/providers/Microsoft.Authorization/policyExemptions/exemption1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-fa0f22b955b6e95583bb0ec4b21e7e45b2d4bb11a37a02541331c1b723b7062b -->