---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_firewall_application_rule_collection"
description: |-
  Manages an Application Rule Collection within an Azure Firewall.

---


<!-- Please do not edit this file, it is generated. -->
# azurerm_firewall_application_rule_collection

Manages an Application Rule Collection within an Azure Firewall.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermVirtualNetworkExample =
      new azurerm.virtualNetwork.VirtualNetwork(this, "example_1", {
        addressSpace: ["10.0.0.0/16"],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "testvnet",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualNetworkExample.overrideLogicalId("example");
    const azurermPublicIpExample = new azurerm.publicIp.PublicIp(
      this,
      "example_2",
      {
        allocationMethod: "Static",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "testpip",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        sku: "Standard",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermPublicIpExample.overrideLogicalId("example");
    const azurermSubnetExample = new azurerm.subnet.Subnet(this, "example_3", {
      addressPrefixes: ["10.0.1.0/24"],
      name: "AzureFirewallSubnet",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      virtualNetworkName: cdktf.Token.asString(
        azurermVirtualNetworkExample.name
      ),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSubnetExample.overrideLogicalId("example");
    const azurermFirewallExample = new azurerm.firewall.Firewall(
      this,
      "example_4",
      {
        ipConfiguration: [
          {
            name: "configuration",
            publicIpAddressId: cdktf.Token.asString(azurermPublicIpExample.id),
            subnetId: cdktf.Token.asString(azurermSubnetExample.id),
          },
        ],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "testfirewall",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        skuName: "AZFW_VNet",
        skuTier: "Standard",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermFirewallExample.overrideLogicalId("example");
    const azurermFirewallApplicationRuleCollectionExample =
      new azurerm.firewallApplicationRuleCollection.FirewallApplicationRuleCollection(
        this,
        "example_5",
        {
          action: "Allow",
          azureFirewallName: cdktf.Token.asString(azurermFirewallExample.name),
          name: "testcollection",
          priority: 100,
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          rule: [
            {
              name: "testrule",
              protocol: [
                {
                  port: cdktf.Token.asNumber("443"),
                  type: "Https",
                },
              ],
              sourceAddresses: ["10.0.0.0/16"],
              targetFqdns: ["*.google.com"],
            },
          ],
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermFirewallApplicationRuleCollectionExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Application Rule Collection which must be unique within the Firewall. Changing this forces a new resource to be created.

* `azureFirewallName` - (Required) Specifies the name of the Firewall in which the Application Rule Collection should be created. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) Specifies the name of the Resource Group in which the Firewall exists. Changing this forces a new resource to be created.

* `priority` - (Required) Specifies the priority of the rule collection. Possible values are between `100` - `65000`.

* `action` - (Required) Specifies the action the rule will apply to matching traffic. Possible values are `allow` and `deny`.

* `rule` - (Required) One or more `rule` blocks as defined below.

---

A `rule` block supports the following:

* `name` - (Required) Specifies the name of the rule.

* `description` - (Optional) Specifies a description for the rule.

* `sourceAddresses` - (Optional) A list of source IP addresses and/or IP ranges.

* `sourceIpGroups` - (Optional) A list of source IP Group IDs for the rule.

-> **NOTE** At least one of `sourceAddresses` and `sourceIpGroups` must be specified for a rule.

* `fqdnTags` - (Optional) A list of FQDN tags. Possible values are `appServiceEnvironment`, `azureBackup`, `azureKubernetesService`, `hdInsight`, `microsoftActiveProtectionService`, `windowsDiagnostics`, `windowsUpdate` and `windowsVirtualDesktop`.

* `targetFqdns` - (Optional) A list of FQDNs.

* `protocol` - (Optional) One or more `protocol` blocks as defined below.

---

A `protocol` block supports the following:

* `port` - (Required) Specify a port for the connection.

* `type` - (Required) Specifies the type of connection. Possible values are `http`, `https` and `mssql`.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Firewall Application Rule Collection.
* `update` - (Defaults to 30 minutes) Used when updating the Firewall Application Rule Collection.
* `read` - (Defaults to 5 minutes) Used when retrieving the Firewall Application Rule Collection.
* `delete` - (Defaults to 30 minutes) Used when deleting the Firewall Application Rule Collection.

## Import

Firewall Application Rule Collections can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_firewall_application_rule_collection.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/azureFirewalls/myfirewall/applicationRuleCollections/mycollection
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-cf25981dd19c0f630226928a8203278cd86db88a36fbd3b4133aa90fded41d92 -->