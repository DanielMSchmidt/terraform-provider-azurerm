---
subcategory: "Orbital"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_orbital_contact_profile"
description: |-
  Manages an orbital contact resource.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_orbital_contact

Manages an orbital contact.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "rg-example",
      }
    );
    const azurermVirtualNetworkExample =
      new azurerm.virtualNetwork.VirtualNetwork(this, "example_1", {
        addressSpace: ["10.0.0.0/16"],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-vnet",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualNetworkExample.overrideLogicalId("example");
    const azurermOrbitalSpacecraftExample =
      new azurerm.orbitalSpacecraft.OrbitalSpacecraft(this, "example_2", {
        links: [
          {
            bandwidthMhz: 100,
            centerFrequencyMhz: 101,
            direction: "Uplink",
            name: "examplename",
            polarization: "LHCP",
          },
        ],
        location: "westeurope",
        name: "example-spacecraft",
        noradId: "12345",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        tags: {
          "aks-managed-cluster-name": "9a57225d-a405-4d40-aa46-f13d2342abef",
        },
        titleLine: "AQUA",
        twoLineElements: [
          "1 23455U 94089A   97320.90946019  .00000140  00000-0  10191-3 0  2621",
          "2 23455  99.0090 272.6745 0008546 223.1686 136.8816 14.11711747148495",
        ],
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermOrbitalSpacecraftExample.overrideLogicalId("example");
    const azurermSubnetExample = new azurerm.subnet.Subnet(this, "example_3", {
      addressPrefixes: ["10.0.1.0/24"],
      delegation: [
        {
          name: "orbitalgateway",
          serviceDelegation: {
            actions: [
              "Microsoft.Network/publicIPAddresses/join/action",
              "Microsoft.Network/virtualNetworks/subnets/join/action",
              "Microsoft.Network/virtualNetworks/read",
              "Microsoft.Network/publicIPAddresses/read",
            ],
            name: "Microsoft.Orbital/orbitalGateways",
          },
        },
      ],
      name: "example-subnet",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      virtualNetworkName: cdktf.Token.asString(
        azurermVirtualNetworkExample.name
      ),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSubnetExample.overrideLogicalId("example");
    const azurermOrbitalContactProfileExample =
      new azurerm.orbitalContactProfile.OrbitalContactProfile(
        this,
        "example_4",
        {
          autoTracking: "disabled",
          links: [
            {
              channels: [
                {
                  bandwidthMhz: 100,
                  centerFrequencyMhz: 101,
                  endPoint: [
                    {
                      endPointName: "AQUA_command",
                      ipAddress: "10.0.1.0",
                      port: "49153",
                      protocol: "TCP",
                    },
                  ],
                  name: "channelname",
                },
              ],
              direction: "Uplink",
              name: "RHCP_UL",
              polarization: "RHCP",
            },
          ],
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          minimumVariableContactDuration: "PT1M",
          name: "example-contactprofile",
          networkConfigurationSubnetId: cdktf.Token.asString(
            azurermSubnetExample.id
          ),
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermOrbitalContactProfileExample.overrideLogicalId("example");
    const azurermOrbitalContactExample =
      new azurerm.orbitalContact.OrbitalContact(this, "example_5", {
        contactProfileId: cdktf.Token.asString(
          azurermOrbitalContactProfileExample.id
        ),
        groundStationName: "WESTUS2_0",
        name: "example-contact",
        reservationEndTime: "2020-07-16T20:55:00.00Z",
        reservationStartTime: "2020-07-16T20:35:00.00Z",
        spacecraftId: cdktf.Token.asString(azurermOrbitalSpacecraftExample.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermOrbitalContactExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name of the Contact. Changing this forces a new resource to be created. Changing this forces a new resource to be created.

* `spacecraftId` - (Required) The ID of the spacecraft which the contact will be made to. Changing this forces a new resource to be created.

* `reservationStartTime` - (Required) Reservation start time of the Contact. Changing this forces a new resource to be created.

* `reservationEndTime` - (Required) Reservation end time of the Contact. Changing this forces a new resource to be created.

* `groundStationName` - (Required) Name of the Azure ground station. Changing this forces a new resource to be created.

* `contactProfileId` - (Required) ID of the orbital contact profile. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Contact.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Contact.
* `read` - (Defaults to 5 minutes) Used when retrieving the Contact.
* `update` - (Defaults to 30 minutes) Used when updating the Contact.
* `delete` - (Defaults to 30 minutes) Used when deleting the Contact.

## Import

Spacecraft can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_orbital_contact.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Orbital/spacecrafts/spacecraft1/contacts/contact1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-68381e6d65cc85dd5bfbe1368412c77c777e1236fcb300b42f7e8ccbcadfb59d -->