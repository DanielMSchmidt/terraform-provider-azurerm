---
subcategory: "Private DNS Resolver"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_private_dns_resolver_outbound_endpoint"
description: |-
  Manages a Private DNS Resolver Outbound Endpoint.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_private_dns_resolver_outbound_endpoint

Manages a Private DNS Resolver Outbound Endpoint.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "west europe",
        name: "example-resources",
      }
    );
    const azurermVirtualNetworkExample =
      new azurerm.virtualNetwork.VirtualNetwork(this, "example_1", {
        addressSpace: ["10.0.0.0/16"],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-vnet",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualNetworkExample.overrideLogicalId("example");
    const azurermPrivateDnsResolverExample =
      new azurerm.privateDnsResolver.PrivateDnsResolver(this, "example_2", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-resolver",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        virtualNetworkId: cdktf.Token.asString(azurermVirtualNetworkExample.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermPrivateDnsResolverExample.overrideLogicalId("example");
    const azurermSubnetExample = new azurerm.subnet.Subnet(this, "example_3", {
      addressPrefixes: ["10.0.0.64/28"],
      delegation: [
        {
          name: "Microsoft.Network.dnsResolvers",
          serviceDelegation: {
            actions: ["Microsoft.Network/virtualNetworks/subnets/join/action"],
            name: "Microsoft.Network/dnsResolvers",
          },
        },
      ],
      name: "outbounddns",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      virtualNetworkName: cdktf.Token.asString(
        azurermVirtualNetworkExample.name
      ),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSubnetExample.overrideLogicalId("example");
    const azurermPrivateDnsResolverOutboundEndpointExample =
      new azurerm.privateDnsResolverOutboundEndpoint.PrivateDnsResolverOutboundEndpoint(
        this,
        "example_4",
        {
          location: cdktf.Token.asString(
            azurermPrivateDnsResolverExample.location
          ),
          name: "example-endpoint",
          privateDnsResolverId: cdktf.Token.asString(
            azurermPrivateDnsResolverExample.id
          ),
          subnetId: cdktf.Token.asString(azurermSubnetExample.id),
          tags: {
            key: "value",
          },
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermPrivateDnsResolverOutboundEndpointExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) Specifies the name which should be used for this Private DNS Resolver Outbound Endpoint. Changing this forces a new Private DNS Resolver Outbound Endpoint to be created.

* `privateDnsResolverId` - (Required) Specifies the ID of the Private DNS Resolver Outbound Endpoint. Changing this forces a new Private DNS Resolver Outbound Endpoint to be created.

* `location` - (Required) Specifies the Azure Region where the Private DNS Resolver Outbound Endpoint should exist. Changing this forces a new Private DNS Resolver Outbound Endpoint to be created.

* `subnetId` - (Required) The ID of the Subnet that is linked to the Private DNS Resolver Outbound Endpoint. Changing this forces a new resource to be created.

* `tags` - (Optional) A mapping of tags which should be assigned to the Private DNS Resolver Outbound Endpoint.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Private DNS Resolver Outbound Endpoint.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Private DNS Resolver Outbound Endpoint.
* `read` - (Defaults to 5 minutes) Used when retrieving the Private DNS Resolver Outbound Endpoint.
* `update` - (Defaults to 30 minutes) Used when updating the Private DNS Resolver Outbound Endpoint.
* `delete` - (Defaults to 30 minutes) Used when deleting the Private DNS Resolver Outbound Endpoint.

## Import

Private DNS Resolver Outbound Endpoint can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_private_dns_resolver_outbound_endpoint.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/dnsResolvers/dnsResolver1/outboundEndpoints/outboundEndpoint1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-3ceb7acc7150fbc1743f825c76518e67a341a890ad02eb2eb5f24de2b3a5372b -->