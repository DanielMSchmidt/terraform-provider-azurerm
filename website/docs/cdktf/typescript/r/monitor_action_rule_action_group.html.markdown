---
subcategory: "Monitor"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_monitor_action_rule_action_group"
description: |-
  Manages an Monitor Action Rule which type is action group.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_monitor_action_rule_action_group

Manages a Monitor Action Rule which type is action group.

!> **NOTE:** This resource has been deprecated in version 3.0 of the AzureRM provider and will be removed in version 4.0. Please use [`azurermMonitorAlertProcessingRuleActionGroup`](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_alert_processing_rule_action_group) resource instead.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermMonitorActionGroupExample =
      new azurerm.monitorActionGroup.MonitorActionGroup(this, "example_1", {
        name: "example-action-group",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        shortName: "example",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMonitorActionGroupExample.overrideLogicalId("example");
    const azurermMonitorActionRuleActionGroupExample =
      new azurerm.monitorActionRuleActionGroup.MonitorActionRuleActionGroup(
        this,
        "example_2",
        {
          actionGroupId: cdktf.Token.asString(
            azurermMonitorActionGroupExample.id
          ),
          name: "example-amar",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          scope: {
            resourceIds: [cdktf.Token.asString(azurermResourceGroupExample.id)],
            type: "ResourceGroup",
          },
          tags: {
            foo: "bar",
          },
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMonitorActionRuleActionGroupExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Monitor Action Rule. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) Specifies the name of the resource group in which the Monitor Action Rule should exist. Changing this forces a new resource to be created.

* `actionGroupId` - (Required) Specifies the resource id of monitor action group.

* `description` - (Optional) Specifies a description for the Action Rule.

* `enabled` - (Optional) Is the Action Rule enabled? Defaults to `true`.

* `scope` - (Optional) A `scope` block as defined below.

* `condition` - (Optional) A `condition` block as defined below.

* `tags` - (Optional) A mapping of tags to assign to the resource.

---

The `scope` block supports the following:

* `type` - (Required) Specifies the type of target scope. Possible values are `resourceGroup` and `resource`.

* `resourceIds` - (Required) A list of resource IDs of the given scope type which will be the target of action rule.

---

The `condition` block supports the following:

* `alertContext` - (Optional) A `alertContext` block as defined below.

* `alertRuleId` - (Optional) A `alertRuleId` block as defined below.

* `description` - (Optional) A `description` block as defined below.

* `monitor` - (Optional) A `monitor` block as defined below.

* `monitorService` - (Optional) A `monitorService` as block defined below.

* `severity` - (Optional) A `severity` block as defined below.

* `targetResourceType` - (Optional) A `targetResourceType` block as defined below.

---

The `alertContext` block supports the following:

* `operator` - (Required) The operator for a given condition. Possible values are `equals`, `notEquals`, `contains`, and `doesNotContain`.

* `values` - (Required) A list of values to match for a given condition.

---

The `alertRuleId` block supports the following:

* `operator` - (Required) The operator for a given condition. Possible values are `equals`, `notEquals`, `contains`, and `doesNotContain`.

* `values` - (Required) A list of values to match for a given condition.

---

The `description` block supports the following:

* `operator` - (Required) The operator for a given condition. Possible values are `equals`, `notEquals`, `contains`, and `doesNotContain`.

* `values` - (Required) A list of values to match for a given condition.

---

The `monitor` block supports the following:

* `operator` - (Required) The operator for a given condition. Possible values are `equals` and `notEquals`.

* `values` - (Required) A list of values to match for a given condition. Possible values are `fired` and `resolved`.

---

The `monitorService` block supports the following:

* `operator` - (Required) The operator for a given condition. Possible values are `equals` and `notEquals`.

* `values` - (Required) A list of values to match for a given condition. Possible values are `ActivityLog Administrative`, `ActivityLog Autoscale`, `ActivityLog Policy`, `ActivityLog Recommendation`, `ActivityLog Security`, `Application Insights`, `Azure Backup`, `Azure Stack Edge`, `Azure Stack Hub`, `custom`, `Data Box Gateway`, `Health Platform`, `Log Alerts V2`, `Log Analytics`, `platform`, `Resource Health`, `Smart Detector` and `VM Insights - Health`.

---

The `severity` block supports the following:

* `operator` - (Required) The operator for a given condition. Possible values are `equals`and `notEquals`.

* `values` - (Required) A list of values to match for a given condition. Possible values are `sev0`, `sev1`, `sev2`, `sev3`, and `sev4`.

---

The `targetResourceType` block supports the following:

* `operator` - (Required) The operator for a given condition. Possible values are `equals` and `notEquals`.

* `values` - (Required) A list of values to match for a given condition. The values should be valid resource types.

---

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Monitor Action Rule.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Monitor Action Rule.
* `read` - (Defaults to 5 minutes) Used when retrieving the Monitor Action Rule.
* `update` - (Defaults to 30 minutes) Used when updating the Monitor Action Rule.
* `delete` - (Defaults to 30 minutes) Used when deleting the Monitor Action Rule.

## Import

Monitor Action Rule can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_monitor_action_rule_action_group.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.AlertsManagement/actionRules/actionRule1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-9a7368c6b782bafa2c53f618f9339879af837136a59f6b469e71adb4d4c8c657 -->