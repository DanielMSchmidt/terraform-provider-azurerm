---
subcategory: "Monitor"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_monitor_alert_prometheus_rule_group"
description: |-
  Manages an Alert Management Prometheus Rule Group.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_monitor_alert_prometheus_rule_group

Manages an Alert Management Prometheus Rule Group.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermKubernetesClusterExample =
      new azurerm.kubernetesCluster.KubernetesCluster(this, "example_1", {
        defaultNodePool: {
          enableHostEncryption: true,
          name: "default",
          nodeCount: 1,
          vmSize: "Standard_DS2_v2",
        },
        dnsPrefix: "example-aks",
        identity: {
          type: "SystemAssigned",
        },
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-cluster",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermKubernetesClusterExample.overrideLogicalId("example");
    const azurermMonitorActionGroupExample =
      new azurerm.monitorActionGroup.MonitorActionGroup(this, "example_2", {
        name: "example-mag",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        shortName: "testag",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMonitorActionGroupExample.overrideLogicalId("example");
    const azurermMonitorWorkspaceExample =
      new azurerm.monitorWorkspace.MonitorWorkspace(this, "example_3", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-amw",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMonitorWorkspaceExample.overrideLogicalId("example");
    const azurermMonitorAlertPrometheusRuleGroupExample =
      new azurerm.monitorAlertPrometheusRuleGroup.MonitorAlertPrometheusRuleGroup(
        this,
        "example_4",
        {
          clusterName: cdktf.Token.asString(
            azurermKubernetesClusterExample.name
          ),
          description: "This is the description of the following rule group",
          interval: "PT1M",
          location: "West Europe",
          name: "example-amprg",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          rule: [
            {
              enabled: false,
              expression:
                'histogram_quantile(0.99, sum(rate(jobs_duration_seconds_bucket{service="billing-processing"}[5m])) by (job_type))\n',
              labels: {
                team: "prod",
              },
              record: "job_type:billing_jobs_duration_seconds:99p5m",
            },
            {
              action: [
                {
                  actionGroupId: cdktf.Token.asString(
                    azurermMonitorActionGroupExample.id
                  ),
                  actionProperties: {
                    actionName: "actionValue",
                  },
                },
              ],
              alert: "Billing_Processing_Very_Slow",
              alertResolution: {
                autoResolved: true,
                timeToResolve: "PT10M",
              },
              annotations: {
                annotationName: "annotationValue",
              },
              enabled: true,
              expression:
                'histogram_quantile(0.99, sum(rate(jobs_duration_seconds_bucket{service="billing-processing"}[5m])) by (job_type))\n',
              for: "PT5M",
              labels: {
                team: "prod",
              },
              severity: 2,
            },
          ],
          ruleGroupEnabled: false,
          scopes: [cdktf.Token.asString(azurermMonitorWorkspaceExample.id)],
          tags: {
            key: "value",
          },
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMonitorAlertPrometheusRuleGroupExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) Specifies the name which should be used for this Alert Management Prometheus Rule Group. Changing this forces a new resource to be created.

* `location` - (Required) Specifies the Azure Region where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) Specifies the name of the Resource Group where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.

* `rule` - (Required) A `rule` block as defined below.

* `scopes` - (Required) Specifies the resource ID of the Azure Monitor Workspace.

* `clusterName` - (Optional) Specifies the name of the Managed Kubernetes Cluster.

* `description` - (Optional) The description of the Alert Management Prometheus Rule Group.

* `ruleGroupEnabled` - (Optional) Is this Alert Management Prometheus Rule Group enabled? Possible values are `true` and `false`.

* `interval` - (Optional) Specifies the interval in which to run the Alert Management Prometheus Rule Group represented in ISO 8601 duration format. Possible values are between `pt1M` and `pt15M`.

* `tags` - (Optional) A mapping of tags to assign to the Alert Management Prometheus Rule Group.

---

A `rule` block supports the following:

* `action` - (Optional) An `action` block as defined below.

* `alert` - (Optional) Specifies the Alert rule name.

* `annotations` - (Optional) Specifies a set of informational labels that can be used to store longer additional information such as alert descriptions or runbook links.

* `enabled` - (Optional) Is this rule enabled? Possible values are `true` and `false`.

* `expression` - (Required) Specifies the Prometheus Query Language expression to evaluate. For more details see [this doc](https://prometheus.io/docs/prometheus/latest/querying/basics). Evaluate at the period given by `interval` and record the result as a new set of time series with the metric name given by `record`. 

* `for` - (Optional) Specifies the amount of time alert must be active before firing, represented in ISO 8601 duration format.

* `labels` - (Optional) Specifies the labels to add or overwrite before storing the result.

* `record` - (Optional) Specifies the recorded metrics name.

* `alertResolution` - (Optional) An `alertResolution` block as defined below.

* `severity` - (Optional) Specifies the severity of the alerts fired by the rule. Possible values are between 0 and 4.

---

An `action` block supports the following:

* `actionGroupId` - (Required) Specifies the resource id of the monitor action group.

* `actionProperties` - (Optional) Specifies the properties of an action group object.

---

An `alertResolution` block supports the following:

* `autoResolved` - (Optional) Is the alert auto-resolution? Possible values are `true` and `false`.

* `timeToResolve` - (Optional) Specifies the alert auto-resolution interval, represented in ISO 8601 duration format.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Alert Management Prometheus Rule Group.


## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Alert Management Prometheus Rule Group.
* `read` - (Defaults to 5 minutes) Used when retrieving the Alert Management Prometheus Rule Group.
* `update` - (Defaults to 30 minutes) Used when updating the Alert Management Prometheus Rule Group.
* `delete` - (Defaults to 30 minutes) Used when deleting the Alert Management Prometheus Rule Group.

## Import

Alert Management Prometheus Rule Group can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_monitor_alert_prometheus_rule_group.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.AlertsManagement/prometheusRuleGroups/ruleGroup1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-53de4cd8b92607b6a4cbc785ce5e7bce87a54df9e19cf314e278915532630c86 -->