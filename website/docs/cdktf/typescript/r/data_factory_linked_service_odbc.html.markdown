---
subcategory: "Data Factory"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_data_factory_linked_service_odbc"
description: |-
  Manages a Linked Service (connection) between a Database and Azure Data Factory through ODBC protocol.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_data_factory_linked_service_odbc

Manages a Linked Service (connection) between a Database and Azure Data Factory through ODBC protocol.

~> **Note:** All arguments including the connection_string will be stored in the raw state as plain-text. [Read more about sensitive data in state](/docs/state/sensitive-data.html).

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermDataFactoryExample = new azurerm.dataFactory.DataFactory(
      this,
      "example_1",
      {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataFactoryExample.overrideLogicalId("example");
    new azurerm.dataFactoryLinkedServiceOdbc.DataFactoryLinkedServiceOdbc(
      this,
      "anonymous",
      {
        connectionString:
          "Driver={SQL Server};Server=test;Database=test;Uid=test;Pwd=test;",
        dataFactoryId: cdktf.Token.asString(azurermDataFactoryExample.id),
        name: "anonymous",
      }
    );
    new azurerm.dataFactoryLinkedServiceOdbc.DataFactoryLinkedServiceOdbc(
      this,
      "basic_auth",
      {
        basicAuthentication: {
          password: "Ch4ngeM3!",
          username: "onrylmz",
        },
        connectionString:
          "Driver={SQL Server};Server=test;Database=test;Uid=test;Pwd=test;",
        dataFactoryId: cdktf.Token.asString(azurermDataFactoryExample.id),
        name: "basic_auth",
      }
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Data Factory Linked Service ODBC. Changing this forces a new resource to be created. Must be unique within a data factory. See the [Microsoft documentation](https://docs.microsoft.com/azure/data-factory/naming-rules) for all restrictions.

* `dataFactoryId` - (Required) The Data Factory ID in which to associate the Linked Service with. Changing this forces a new resource.

* `connectionString` - (Required) The connection string in which to authenticate with ODBC.

* `basicAuthentication` - (Optional) A `basicAuthentication` block as defined below.

* `description` - (Optional) The description for the Data Factory Linked Service ODBC.

* `integrationRuntimeName` - (Optional) The integration runtime reference to associate with the Data Factory Linked Service ODBC.

* `annotations` - (Optional) List of tags that can be used for describing the Data Factory Linked Service ODBC.

* `parameters` - (Optional) A map of parameters to associate with the Data Factory Linked Service ODBC.

* `additionalProperties` - (Optional) A map of additional properties to associate with the Data Factory Linked Service ODBC.

---

A `basicAuthentication` block supports the following:

* `username` - (Required) The username which can be used to authenticate to the ODBC endpoint.

* `password` - (Required) The password associated with the username, which can be used to authenticate to the ODBC endpoint.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Data Factory ODBC Linked Service.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Data Factory ODBC Linked Service.
* `update` - (Defaults to 30 minutes) Used when updating the Data Factory ODBC Linked Service.
* `read` - (Defaults to 5 minutes) Used when retrieving the Data Factory ODBC Linked Service.
* `delete` - (Defaults to 30 minutes) Used when deleting the Data Factory ODBC Linked Service.

## Import

Data Factory ODBC Linked Service's can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_data_factory_linked_service_odbc.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.DataFactory/factories/example/linkedservices/example
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-28bb7824afde347e77dfb487aaa35f7188156b5f183cdd5ae86e8584c2375fd1 -->