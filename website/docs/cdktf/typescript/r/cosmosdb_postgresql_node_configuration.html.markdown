---
subcategory: "CosmosDB (DocumentDB)"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_cosmosdb_postgresql_node_configuration"
description: |-
  Sets a Node Configuration value on Azure Cosmos DB for PostgreSQL Cluster.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_cosmosdb_postgresql_node_configuration

Sets a Node Configuration value on Azure Cosmos DB for PostgreSQL Cluster.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermCosmosdbPostgresqlClusterExample =
      new azurerm.cosmosdbPostgresqlCluster.CosmosdbPostgresqlCluster(
        this,
        "example_1",
        {
          administratorLoginPassword: "H@Sh1CoR3!",
          coordinatorStorageQuotaInMb: 131072,
          coordinatorVcoreCount: 2,
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "examplecluster",
          nodeCount: 2,
          nodeStorageQuotaInMb: 131072,
          nodeVcores: 2,
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermCosmosdbPostgresqlClusterExample.overrideLogicalId("example");
    const azurermCosmosdbPostgresqlNodeConfigurationExample =
      new azurerm.cosmosdbPostgresqlNodeConfiguration.CosmosdbPostgresqlNodeConfiguration(
        this,
        "example_2",
        {
          clusterId: cdktf.Token.asString(
            azurermCosmosdbPostgresqlClusterExample.id
          ),
          name: "array_nulls",
          value: "on",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermCosmosdbPostgresqlNodeConfigurationExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Node Configuration on Azure Cosmos DB for PostgreSQL Cluster. Changing this forces a new resource to be created.

* `clusterId` - (Required) The resource ID of the Azure Cosmos DB for PostgreSQL Cluster where we want to change configuration. Changing this forces a new resource to be created.

* `value` - (Required) The value of the Node Configuration on Azure Cosmos DB for PostgreSQL Cluster.

## Attributes Reference

The following attributes are exported:

* `id` - The ID of the Node Configuration on Azure Cosmos DB for PostgreSQL Cluster.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Node Configuration on Azure Cosmos DB for PostgreSQL Cluster.
* `update` - (Defaults to 30 minutes) Used when updating the Node Configuration on Azure Cosmos DB for PostgreSQL Cluster.
* `read` - (Defaults to 5 minutes) Used when retrieving the Node Configuration on Azure Cosmos DB for PostgreSQL Cluster.
* `delete` - (Defaults to 30 minutes) Used when deleting the Node Configuration on Azure Cosmos DB for PostgreSQL Cluster.

## Import

Node Configurations on Azure Cosmos DB for PostgreSQL Clusters can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_cosmosdb_postgresql_node_configuration.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/cluster1/nodeConfigurations/array_nulls
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-d7ebd122d9955ddc0977db65173efd8013f3d73d2f2be836c8aa39c87fca5d5f -->