---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_virtual_hub_connection"
description: |-
  Manages a Connection for a Virtual Hub.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_virtual_hub_connection

Manages a Connection for a Virtual Hub.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermVirtualNetworkExample =
      new azurerm.virtualNetwork.VirtualNetwork(this, "example_1", {
        addressSpace: ["172.0.0.0/16"],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-network",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualNetworkExample.overrideLogicalId("example");
    const azurermVirtualWanExample = new azurerm.virtualWan.VirtualWan(
      this,
      "example_2",
      {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-vwan",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualWanExample.overrideLogicalId("example");
    const azurermVirtualHubExample = new azurerm.virtualHub.VirtualHub(
      this,
      "example_3",
      {
        addressPrefix: "10.0.1.0/24",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-hub",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        virtualWanId: cdktf.Token.asString(azurermVirtualWanExample.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualHubExample.overrideLogicalId("example");
    const azurermVirtualHubConnectionExample =
      new azurerm.virtualHubConnection.VirtualHubConnection(this, "example_4", {
        name: "example-vhub",
        remoteVirtualNetworkId: cdktf.Token.asString(
          azurermVirtualNetworkExample.id
        ),
        virtualHubId: cdktf.Token.asString(azurermVirtualHubExample.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualHubConnectionExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The Name which should be used for this Connection, which must be unique within the Virtual Hub. Changing this forces a new resource to be created.

* `virtualHubId` - (Required) The ID of the Virtual Hub within which this connection should be created. Changing this forces a new resource to be created.

* `remoteVirtualNetworkId` - (Required) The ID of the Virtual Network which the Virtual Hub should be connected to. Changing this forces a new resource to be created.

---

* `internetSecurityEnabled` - (Optional) Should Internet Security be enabled to secure internet traffic? Defaults to `false`.

* `routing` - (Optional) A `routing` block as defined below.

---

A `routing` block supports the following:

* `associatedRouteTableId` - (Optional) The ID of the route table associated with this Virtual Hub connection.

* `propagatedRouteTable` - (Optional) A `propagatedRouteTable` block as defined below.

* `staticVnetRoute` - (Optional) A `staticVnetRoute` block as defined below.

---

A `propagatedRouteTable` block supports the following:

* `labels` - (Optional) The list of labels to assign to this route table.

* `routeTableIds` - (Optional) A list of Route Table IDs to associated with this Virtual Hub Connection.

---

A `staticVnetRoute` block supports the following:

* `name` - (Optional) The name which should be used for this Static Route.

* `addressPrefixes` - (Optional) A list of CIDR Ranges which should be used as Address Prefixes.

* `nextHopIpAddress` - (Optional) The IP Address which should be used for the Next Hop.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Virtual Hub Connection.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 60 minutes) Used when creating the Virtual Hub Connection.
* `read` - (Defaults to 5 minutes) Used when retrieving the Virtual Hub Connection.
* `update` - (Defaults to 60 minutes) Used when updating the Virtual Hub Connection.
* `delete` - (Defaults to 60 minutes) Used when deleting the Virtual Hub Connection.

## Import

Virtual Hub Connection's can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_virtual_hub_connection.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/virtualHubs/hub1/hubVirtualNetworkConnections/connection1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-c0239de7da31d76964ea14044d0a58602c8dea7f968e95730e1b538374c2524c -->