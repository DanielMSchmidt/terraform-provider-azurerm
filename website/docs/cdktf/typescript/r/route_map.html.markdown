---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_route_map"
description: |-
  Manages a Route Map.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_route_map

Manages a Route Map.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermVirtualWanExample = new azurerm.virtualWan.VirtualWan(
      this,
      "example_1",
      {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-vwan",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualWanExample.overrideLogicalId("example");
    const azurermVirtualHubExample = new azurerm.virtualHub.VirtualHub(
      this,
      "example_2",
      {
        addressPrefix: "10.0.1.0/24",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-vhub",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        virtualWanId: cdktf.Token.asString(azurermVirtualWanExample.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualHubExample.overrideLogicalId("example");
    const azurermRouteMapExample = new azurerm.routeMap.RouteMap(
      this,
      "example_3",
      {
        name: "example-rm",
        rule: [
          {
            action: [
              {
                parameter: [
                  {
                    asPath: ["22334"],
                  },
                ],
                type: "Add",
              },
            ],
            matchCriterion: [
              {
                matchCondition: "Contains",
                routePrefix: ["10.0.0.0/8"],
              },
            ],
            name: "rule1",
            nextStepIfMatched: "Continue",
          },
        ],
        virtualHubId: cdktf.Token.asString(azurermVirtualHubExample.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermRouteMapExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Route Map. Changing this forces a new resource to be created.

* `virtualHubId` - (Required) The resource ID of the Virtual Hub. Changing this forces a new resource to be created.

* `rule` - (Optional) A `rule` block as defined below.

---

A `rule` block supports the following:

* `name` - (Required) The unique name for the rule.

* `action` - (Optional) An `action` block as defined below.

* `matchCriterion` - (Optional) A `matchCriterion` block as defined below.

* `nextStepIfMatched` - (Optional) The next step after the rule is evaluated. Possible values are `continue`, `terminate` and `unknown`. Defaults to `unknown`.

---

An `action` block supports the following:

* `parameter` - (Required) A `parameter` block as defined below.

* `type` - (Required) The type of the action to be taken. Possible values are `add`, `drop`, `remove`, `replace` and `unknown`.

---

A `parameter` block supports the following:

* `asPath` - (Optional) A list of AS paths.

* `community` - (Optional) A list of BGP communities.

* `routePrefix` - (Optional) A list of route prefixes.

---

A `matchCriterion` block supports the following:

* `matchCondition` - (Required) The match condition to apply the rule of the Route Map. Possible values are `contains`, `equals`, `notContains`, `notEquals` and `unknown`.

* `asPath` - (Optional) A list of AS paths which this criterion matches.

* `community` - (Optional) A list of BGP communities which this criterion matches.

* `routePrefix` - (Optional) A list of route prefixes which this criterion matches.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Route Map.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Route Map.
* `read` - (Defaults to 5 minutes) Used when retrieving the Route Map.
* `update` - (Defaults to 30 minutes) Used when updating the Route Map.
* `delete` - (Defaults to 30 minutes) Used when deleting the Route Map.

## Import

Route Maps can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_route_map.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/virtualHubs/virtualHub1/routeMaps/routeMap1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-2079d33b73b4c8c05bf170d75d804f94344cd3e2dfa74124ce962a1e83597b89 -->