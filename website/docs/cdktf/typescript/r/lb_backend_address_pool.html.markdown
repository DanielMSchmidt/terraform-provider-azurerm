---
subcategory: "Load Balancer"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_lb_backend_address_pool"
description: |-
  Manages a Load Balancer Backend Address Pool.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_lb_backend_address_pool

Manages a Load Balancer Backend Address Pool.

~> **NOTE:** When using this resource, the Load Balancer needs to have a FrontEnd IP Configuration Attached

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "LoadBalancerRG",
      }
    );
    const azurermPublicIpExample = new azurerm.publicIp.PublicIp(
      this,
      "example_1",
      {
        allocationMethod: "Static",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "PublicIPForLB",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermPublicIpExample.overrideLogicalId("example");
    const azurermLbExample = new azurerm.lb.Lb(this, "example_2", {
      frontendIpConfiguration: [
        {
          name: "PublicIPAddress",
          publicIpAddressId: cdktf.Token.asString(azurermPublicIpExample.id),
        },
      ],
      location: cdktf.Token.asString(azurermResourceGroupExample.location),
      name: "TestLoadBalancer",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermLbExample.overrideLogicalId("example");
    const azurermLbBackendAddressPoolExample =
      new azurerm.lbBackendAddressPool.LbBackendAddressPool(this, "example_3", {
        loadbalancerId: cdktf.Token.asString(azurermLbExample.id),
        name: "BackEndAddressPool",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermLbBackendAddressPoolExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Backend Address Pool. Changing this forces a new resource to be created.
  
* `loadbalancerId` - (Required) The ID of the Load Balancer in which to create the Backend Address Pool. Changing this forces a new resource to be created.

* `tunnelInterface` - (Optional) One or more `tunnelInterface` blocks as defined below.

* `virtualNetworkId` - (Optional) The ID of the Virtual Network within which the Backend Address Pool should exist.

---

The `tunnelInterface` block supports the following:

* `identifier` - (Required) The unique identifier of this Gateway Lodbalancer Tunnel Interface.

* `type` - (Required) The traffic type of this Gateway Lodbalancer Tunnel Interface. Possible values are `none`, `internal` and `external`.

* `protocol` - (Required) The protocol used for this Gateway Lodbalancer Tunnel Interface. Possible values are `none`, `native` and `vxlan`.

* `port` - (Required) The port number that this Gateway Lodbalancer Tunnel Interface listens to.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Backend Address Pool.
  
* `backendIpConfigurations` - The Backend IP Configurations associated with this Backend Address Pool.

* `loadBalancingRules` - The Load Balancing Rules associated with this Backend Address Pool.

* `inboundNatRules` - An array of the Load Balancing Inbound NAT Rules associated with this Backend Address Pool.

* `outboundRules` - An array of the Load Balancing Outbound Rules associated with this Backend Address Pool.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Load Balancer Backend Address Pool.
* `update` - (Defaults to 30 minutes) Used when updating the Load Balancer Backend Address Pool.
* `read` - (Defaults to 5 minutes) Used when retrieving the Load Balancer Backend Address Pool.
* `delete` - (Defaults to 30 minutes) Used when deleting the Load Balancer Backend Address Pool.

## Import

Load Balancer Backend Address Pools can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_lb_backend_address_pool.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/loadBalancers/lb1/backendAddressPools/pool1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-70f84301309f4159e7b353bc17fa0131ece763f96ee60afd3508f4992451fcff -->