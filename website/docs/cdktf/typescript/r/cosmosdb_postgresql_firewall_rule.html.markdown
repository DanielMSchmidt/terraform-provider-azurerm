---
subcategory: "CosmosDB (DocumentDB)"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_cosmosdb_postgresql_firewall_rule"
description: |-
  Manages an Azure Cosmos DB for PostgreSQL Firewall Rule.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_cosmosdb_postgresql_firewall_rule

Manages an Azure Cosmos DB for PostgreSQL Firewall Rule.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermCosmosdbPostgresqlClusterExample =
      new azurerm.cosmosdbPostgresqlCluster.CosmosdbPostgresqlCluster(
        this,
        "example_1",
        {
          administratorLoginPassword: "H@Sh1CoR3!",
          coordinatorStorageQuotaInMb: 131072,
          coordinatorVcoreCount: 2,
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "examplecluster",
          nodeCount: 0,
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermCosmosdbPostgresqlClusterExample.overrideLogicalId("example");
    const azurermCosmosdbPostgresqlFirewallRuleExample =
      new azurerm.cosmosdbPostgresqlFirewallRule.CosmosdbPostgresqlFirewallRule(
        this,
        "example_2",
        {
          clusterId: cdktf.Token.asString(
            azurermCosmosdbPostgresqlClusterExample.id
          ),
          endIpAddress: "10.0.17.64",
          name: "example-firewallrule",
          startIpAddress: "10.0.17.62",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermCosmosdbPostgresqlFirewallRuleExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for the Azure Cosmos DB for PostgreSQL Firewall Rule. Changing this forces a new resource to be created.

* `clusterId` - (Required) The resource ID of the Azure Cosmos DB for PostgreSQL Cluster. Changing this forces a new resource to be created.

* `endIpAddress` - (Required) The end IP address of the Azure Cosmos DB for PostgreSQL Firewall Rule.

* `startIpAddress` - (Required) The start IP address of the Azure Cosmos DB for PostgreSQL Firewall Rule.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Azure Cosmos DB for PostgreSQL Firewall Rule.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Azure Cosmos DB for PostgreSQL Firewall Rule.
* `read` - (Defaults to 5 minutes) Used when retrieving the Azure Cosmos DB for PostgreSQL Firewall Rule.
* `update` - (Defaults to 30 minutes) Used when updating the Azure Cosmos DB for PostgreSQL Firewall Rule.
* `delete` - (Defaults to 30 minutes) Used when deleting the Azure Cosmos DB for PostgreSQL Firewall Rule.

## Import

Azure Cosmos DB for PostgreSQL Firewall Rules can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_cosmosdb_postgresql_firewall_rule.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.DBforPostgreSQL/serverGroupsv2/cluster1/firewallRules/firewallRule1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-124aba1b4504ed15896fb464693d9cac8ed3260126947cf8ca3d75beb3d16fa4 -->