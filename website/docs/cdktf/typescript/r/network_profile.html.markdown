---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_network_profile"
description: |-
  Manages a Network Profile.

---


<!-- Please do not edit this file, it is generated. -->
# azurerm_network_profile

Manages a Network Profile.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "examplegroup",
      }
    );
    const azurermVirtualNetworkExample =
      new azurerm.virtualNetwork.VirtualNetwork(this, "example_1", {
        addressSpace: ["10.1.0.0/16"],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "examplevnet",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualNetworkExample.overrideLogicalId("example");
    const azurermSubnetExample = new azurerm.subnet.Subnet(this, "example_2", {
      addressPrefixes: ["10.1.0.0/24"],
      delegation: [
        {
          name: "delegation",
          serviceDelegation: {
            actions: ["Microsoft.Network/virtualNetworks/subnets/action"],
            name: "Microsoft.ContainerInstance/containerGroups",
          },
        },
      ],
      name: "examplesubnet",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      virtualNetworkName: cdktf.Token.asString(
        azurermVirtualNetworkExample.name
      ),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSubnetExample.overrideLogicalId("example");
    const azurermNetworkProfileExample =
      new azurerm.networkProfile.NetworkProfile(this, "example_3", {
        containerNetworkInterface: {
          ipConfiguration: [
            {
              name: "exampleipconfig",
              subnetId: cdktf.Token.asString(azurermSubnetExample.id),
            },
          ],
          name: "examplecnic",
        },
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "examplenetprofile",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermNetworkProfileExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Network Profile. Changing this forces a new resource to be created.

* `location` - (Required) Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the resource group in which to create the resource. Changing this forces a new resource to be created.

* `containerNetworkInterface` - (Required) A `containerNetworkInterface` block as documented below.

* `tags` - (Optional) A mapping of tags to assign to the resource.

---

A `containerNetworkInterface` block supports the following:

* `name` - (Required) Specifies the name of the IP Configuration.

* `ipConfiguration` - (Required) One or more `ipConfiguration` blocks as documented below.

---

A `ipConfiguration` block supports the following:

* `name` - (Required) Specifies the name of the IP Configuration.

* `subnetId` - (Required) Reference to the subnet associated with the IP Configuration.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Network Profile.

* `containerNetworkInterfaceIds` - A list of Container Network Interface IDs.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Network Profile.
* `update` - (Defaults to 30 minutes) Used when updating the Network Profile.
* `read` - (Defaults to 5 minutes) Used when retrieving the Network Profile.
* `delete` - (Defaults to 30 minutes) Used when deleting the Network Profile.

## Import

Network Profile can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_network_profile.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/networkProfiles/examplenetprofile
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-66e71689f5c45f42adb3b3bd9263a6048c7ae81de8174177b1c20e4842d21354 -->