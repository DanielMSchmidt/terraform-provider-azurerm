---
subcategory: "Data Share"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_data_share_dataset_kusto_database"
description: |-
  Manages a Data Share Kusto Database Dataset.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_data_share_dataset_kusto_database

Manages a Data Share Kusto Database Dataset.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new azurerm.provider.AzurermProvider(this, "azurerm", {
      features: {},
    });
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermDataShareAccountExample =
      new azurerm.dataShareAccount.DataShareAccount(this, "example_2", {
        identity: {
          type: "SystemAssigned",
        },
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-dsa",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataShareAccountExample.overrideLogicalId("example");
    const azurermKustoClusterExample = new azurerm.kustoCluster.KustoCluster(
      this,
      "example_3",
      {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "examplekc",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        sku: {
          capacity: 1,
          name: "Dev(No SLA)_Standard_D11_v2",
        },
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermKustoClusterExample.overrideLogicalId("example");
    const azurermKustoDatabaseExample = new azurerm.kustoDatabase.KustoDatabase(
      this,
      "example_4",
      {
        clusterName: cdktf.Token.asString(azurermKustoClusterExample.name),
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "examplekd",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermKustoDatabaseExample.overrideLogicalId("example");
    const azurermRoleAssignmentExample =
      new azurerm.roleAssignment.RoleAssignment(this, "example_5", {
        principalId: cdktf.Token.asString(
          cdktf.propertyAccess(azurermDataShareAccountExample.identity, [
            "0",
            "principal_id",
          ])
        ),
        roleDefinitionName: "Contributor",
        scope: cdktf.Token.asString(azurermKustoClusterExample.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermRoleAssignmentExample.overrideLogicalId("example");
    const azurermDataShareExample = new azurerm.dataShare.DataShare(
      this,
      "example_6",
      {
        accountId: cdktf.Token.asString(azurermDataShareAccountExample.id),
        kind: "InPlace",
        name: "example_ds",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataShareExample.overrideLogicalId("example");
    const azurermDataShareDatasetKustoDatabaseExample =
      new azurerm.dataShareDatasetKustoDatabase.DataShareDatasetKustoDatabase(
        this,
        "example_7",
        {
          dependsOn: [azurermRoleAssignmentExample],
          kustoDatabaseId: cdktf.Token.asString(azurermKustoDatabaseExample.id),
          name: "example-dskd",
          shareId: cdktf.Token.asString(azurermDataShareExample.id),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataShareDatasetKustoDatabaseExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Data Share Kusto Database Dataset. Changing this forces a new Data Share Kusto Database Dataset to be created.

* `shareId` - (Required) The resource ID of the Data Share where this Data Share Kusto Database Dataset should be created. Changing this forces a new Data Share Kusto Database Dataset to be created.

* `kustoDatabaseId` - (Required) The resource ID of the Kusto Cluster Database to be shared with the receiver. Changing this forces a new Data Share Kusto Database Dataset to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The resource ID of the Data Share Kusto Database Dataset.

* `displayName` - The name of the Data Share Dataset.

* `kustoClusterLocation` - The location of the Kusto Cluster.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Data Share Kusto Database Dataset.
* `read` - (Defaults to 5 minutes) Used when retrieving the Data Share Kusto Database Dataset.
* `delete` - (Defaults to 30 minutes) Used when deleting the Data Share Kusto Database Dataset.

## Import

Data Share Kusto Database Datasets can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_data_share_dataset_kusto_database.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataShare/accounts/account1/shares/share1/dataSets/dataSet1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-99f91f827e8835aacf1f6d74ac25fbf0e63c6d1c7c53f1ffbfe86ed590d4df75 -->