---
subcategory: "Messaging"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_servicebus_queue_authorization_rule"
description: |-
  Manages an Authorization Rule for a ServiceBus Queue.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_servicebus_queue_authorization_rule

Manages an Authorization Rule for a ServiceBus Queue.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "terraform-servicebus",
      }
    );
    const azurermServicebusNamespaceExample =
      new azurerm.servicebusNamespace.ServicebusNamespace(this, "example_1", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "tfex-servicebus-namespace",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        sku: "Standard",
        tags: {
          source: "terraform",
        },
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermServicebusNamespaceExample.overrideLogicalId("example");
    const azurermServicebusQueueExample =
      new azurerm.servicebusQueue.ServicebusQueue(this, "example_2", {
        enablePartitioning: true,
        name: "tfex_servicebus_queue",
        namespaceId: cdktf.Token.asString(azurermServicebusNamespaceExample.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermServicebusQueueExample.overrideLogicalId("example");
    const azurermServicebusQueueAuthorizationRuleExample =
      new azurerm.servicebusQueueAuthorizationRule.ServicebusQueueAuthorizationRule(
        this,
        "example_3",
        {
          listen: true,
          manage: false,
          name: "examplerule",
          queueId: cdktf.Token.asString(azurermServicebusQueueExample.id),
          send: true,
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermServicebusQueueAuthorizationRuleExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Authorization Rule. Changing this forces a new resource to be created.

* `queueId` - (Required) Specifies the ID of the ServiceBus Queue. Changing this forces a new resource to be created.

~> **NOTE** At least one of the 3 permissions below needs to be set.

* `listen` - (Optional) Does this Authorization Rule have Listen permissions to the ServiceBus Queue? Defaults to `false`.

* `send` - (Optional) Does this Authorization Rule have Send permissions to the ServiceBus Queue? Defaults to `false`.

* `manage` - (Optional) Does this Authorization Rule have Manage permissions to the ServiceBus Queue? When this property is `true` - both `listen` and `send` must be too. Defaults to `false`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Authorization Rule.

* `primaryKey` - The Primary Key for the Authorization Rule.

* `primaryConnectionString` - The Primary Connection String for the Authorization Rule.

* `secondaryKey` - The Secondary Key for the Authorization Rule.

* `secondaryConnectionString` - The Secondary Connection String for the Authorization Rule.

* `primaryConnectionStringAlias` - The alias Primary Connection String for the ServiceBus Namespace, if the namespace is Geo DR paired.

* `secondaryConnectionStringAlias` - The alias Secondary Connection String for the ServiceBus Namespace

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the ServiceBus Queue Authorization Rule.
* `update` - (Defaults to 30 minutes) Used when updating the ServiceBus Queue Authorization Rule.
* `read` - (Defaults to 5 minutes) Used when retrieving the ServiceBus Queue Authorization Rule.
* `delete` - (Defaults to 30 minutes) Used when deleting the ServiceBus Queue Authorization Rule.

## Import

ServiceBus Queue Authorization Rules can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_servicebus_queue_authorization_rule.rule1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ServiceBus/namespaces/namespace1/queues/queue1/authorizationRules/rule1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-14652c0318ec30c0a28c8ac0a1a0a15585dfae04ccb24ad0f8c998eb78d1466e -->