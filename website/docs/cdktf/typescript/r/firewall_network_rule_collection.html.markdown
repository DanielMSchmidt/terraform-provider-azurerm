---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_firewall_network_rule_collection"
description: |-
  Manages a Network Rule Collection within an Azure Firewall.

---


<!-- Please do not edit this file, it is generated. -->
# azurerm_firewall_network_rule_collection

Manages a Network Rule Collection within an Azure Firewall.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermVirtualNetworkExample =
      new azurerm.virtualNetwork.VirtualNetwork(this, "example_1", {
        addressSpace: ["10.0.0.0/16"],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "testvnet",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualNetworkExample.overrideLogicalId("example");
    const azurermPublicIpExample = new azurerm.publicIp.PublicIp(
      this,
      "example_2",
      {
        allocationMethod: "Static",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "testpip",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        sku: "Standard",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermPublicIpExample.overrideLogicalId("example");
    const azurermSubnetExample = new azurerm.subnet.Subnet(this, "example_3", {
      addressPrefixes: ["10.0.1.0/24"],
      name: "AzureFirewallSubnet",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      virtualNetworkName: cdktf.Token.asString(
        azurermVirtualNetworkExample.name
      ),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSubnetExample.overrideLogicalId("example");
    const azurermFirewallExample = new azurerm.firewall.Firewall(
      this,
      "example_4",
      {
        ipConfiguration: [
          {
            name: "configuration",
            publicIpAddressId: cdktf.Token.asString(azurermPublicIpExample.id),
            subnetId: cdktf.Token.asString(azurermSubnetExample.id),
          },
        ],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "testfirewall",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        skuName: "AZFW_VNet",
        skuTier: "Standard",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermFirewallExample.overrideLogicalId("example");
    const azurermFirewallNetworkRuleCollectionExample =
      new azurerm.firewallNetworkRuleCollection.FirewallNetworkRuleCollection(
        this,
        "example_5",
        {
          action: "Allow",
          azureFirewallName: cdktf.Token.asString(azurermFirewallExample.name),
          name: "testcollection",
          priority: 100,
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          rule: [
            {
              destinationAddresses: ["8.8.8.8", "8.8.4.4"],
              destinationPorts: ["53"],
              name: "testrule",
              protocols: ["TCP", "UDP"],
              sourceAddresses: ["10.0.0.0/16"],
            },
          ],
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermFirewallNetworkRuleCollectionExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Network Rule Collection which must be unique within the Firewall. Changing this forces a new resource to be created.

* `azureFirewallName` - (Required) Specifies the name of the Firewall in which the Network Rule Collection should be created. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) Specifies the name of the Resource Group in which the Firewall exists. Changing this forces a new resource to be created.

* `priority` - (Required) Specifies the priority of the rule collection. Possible values are between `100` - `65000`.

* `action` - (Required) Specifies the action the rule will apply to matching traffic. Possible values are `allow` and `deny`.

* `rule` - (Required) One or more `rule` blocks as defined below.

---

A `rule` block supports the following:

* `name` - (Required) Specifies the name of the rule.

* `description` - (Optional) Specifies a description for the rule.

* `sourceAddresses` - (Optional) A list of source IP addresses and/or IP ranges.

* `sourceIpGroups` - (Optional) A list of IP Group IDs for the rule.

-> **NOTE** At least one of `sourceAddresses` and `sourceIpGroups` must be specified for a rule.

* `destinationAddresses` - (Optional) Either a list of destination IP addresses and/or IP ranges, or a list of destination [Service Tags](https://docs.microsoft.com/azure/virtual-network/service-tags-overview#available-service-tags).

* `destinationIpGroups` - (Optional) A list of destination IP Group IDs for the rule.

* `destinationFqdns` - (Optional) A list of destination FQDNS for the rule.

-> **NOTE** [You must enable DNS Proxy to use FQDNs in your network rules](https://docs.microsoft.com/azure/firewall/fqdn-filtering-network-rules).

-> **NOTE** At least one of `destinationAddresses`, `destinationIpGroups` and `destinationFqdns` must be specified for a rule.

* `destinationPorts` - (Required) A list of destination ports.

* `protocols` - (Required) A list of protocols. Possible values are `any`, `icmp`, `tcp` and `udp`.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Firewall Network Rule Collection.
* `update` - (Defaults to 30 minutes) Used when updating the Firewall Network Rule Collection.
* `read` - (Defaults to 5 minutes) Used when retrieving the Firewall Network Rule Collection.
* `delete` - (Defaults to 30 minutes) Used when deleting the Firewall Network Rule Collection.

## Import

Azure Firewall Network Rule Collections can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_firewall_network_rule_collection.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/azureFirewalls/myfirewall/networkRuleCollections/mycollection
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-b6408a31b3ede5c30d585d1f2599c610d39a89f6ef0e415fc843e2fa906ea19a -->