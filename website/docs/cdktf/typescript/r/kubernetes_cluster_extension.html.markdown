---
subcategory: "Container"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_kubernetes_cluster_extension"
description: |-
  Manages a Kubernetes Cluster Extension.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_kubernetes_cluster_extension

Manages a Kubernetes Cluster Extension.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermKubernetesClusterExample =
      new azurerm.kubernetesCluster.KubernetesCluster(this, "example_1", {
        defaultNodePool: {
          name: "default",
          nodeCount: 1,
          vmSize: "Standard_DS2_v2",
        },
        dnsPrefix: "example-aks",
        identity: {
          type: "SystemAssigned",
        },
        location: "West Europe",
        name: "example-aks",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermKubernetesClusterExample.overrideLogicalId("example");
    const azurermKubernetesClusterExtensionExample =
      new azurerm.kubernetesClusterExtension.KubernetesClusterExtension(
        this,
        "example_2",
        {
          clusterId: cdktf.Token.asString(azurermKubernetesClusterExample.id),
          extensionType: "microsoft.flux",
          name: "example-ext",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermKubernetesClusterExtensionExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) Specifies the name which should be used for this Kubernetes Cluster Extension. Changing this forces a new Kubernetes Cluster Extension to be created.

* `clusterId` - (Required) Specifies the Cluster ID. Changing this forces a new Kubernetes Cluster Extension to be created.

* `extensionType` - (Required) Specifies the type of extension. It must be one of the extension types registered with Microsoft.KubernetesConfiguration by the Extension publisher. For more information, please refer to [Available Extensions for AKS](https://learn.microsoft.com/en-us/azure/aks/cluster-extensions?tabs=azure-cli#currently-available-extensions). Changing this forces a new Kubernetes Cluster Extension to be created.

* `configurationProtectedSettings` - (Optional) Configuration settings that are sensitive, as name-value pairs for configuring this extension.

* `configurationSettings` - (Optional) Configuration settings, as name-value pairs for configuring this extension.

* `plan` - (Optional) A `plan` block as defined below.

* `releaseTrain` - (Optional) The release train used by this extension. Possible values include but are not limited to `stable`, `preview`. Changing this forces a new Kubernetes Cluster Extension to be created.

* `releaseNamespace` - (Optional) Namespace where the extension release must be placed for a cluster scoped extension. If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.

* `targetNamespace` - (Optional) Namespace where the extension will be created for a namespace scoped extension.  If this namespace does not exist, it will be created. Changing this forces a new Kubernetes Cluster Extension to be created.

* `version` - (Optional) User-specified version that the extension should pin to. If it is not set, Azure will use the latest version and auto upgrade it. Changing this forces a new Kubernetes Cluster Extension to be created.

---

A `plan` block supports the following:

* `name` - (Required) Specifies the name of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.

* `product` - (Required) Specifies the product of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.

* `publisher` - (Required) Specifies the publisher of the plan. Changing this forces a new Kubernetes Cluster Extension to be created.

* `promotionCode` - (Optional) Specifies the promotion code to use with the plan. Changing this forces a new Kubernetes Cluster Extension to be created.

* `version` - (Optional) Specifies the version of the plan from the marketplace. Changing this forces a new Kubernetes Cluster Extension to be created.

~> **NOTE:** When `plan` is specified, legal terms must be accepted for this item on this subscription before creating the Kubernetes Cluster Extension. The `azurermMarketplaceAgreement` resource or AZ CLI tool can be used to do this.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Kubernetes Cluster Extension.

* `aksAssignedIdentity` - An `aksAssignedIdentity` block as defined below.

* `currentVersion` - The current version of the extension.

---

An `aksAssignedIdentity` block exports the following:

* `type` - The identity type.

* `principalId` - The principal ID of resource identity.

* `tenantId` - The tenant ID of resource.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Kubernetes Cluster Extension.
* `read` - (Defaults to 5 minutes) Used when retrieving the Kubernetes Cluster Extension.
* `update` - (Defaults to 30 minutes) Used when updating the Kubernetes Cluster Extension.
* `delete` - (Defaults to 30 minutes) Used when deleting the Kubernetes Cluster Extension.

## Import

Kubernetes Cluster Extension can be imported using the `resource id` for different `clusterResourceName`, e.g.

```shell
terraform import azurerm_kubernetes_cluster_extension.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.ContainerService/managedClusters/cluster1/providers/Microsoft.KubernetesConfiguration/extensions/extension1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-c811fa827e70b7c4cc886e886bfc6228038ff8daea5cea8f00684e453245aeff -->