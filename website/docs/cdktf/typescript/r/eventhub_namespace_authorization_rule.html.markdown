---
subcategory: "Messaging"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_eventhub_namespace_authorization_rule"
description: |-
  Manages an Authorization Rule for an Event Hub Namespace.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_eventhub_namespace_authorization_rule

Manages an Authorization Rule for an Event Hub Namespace.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "resourcegroup",
      }
    );
    const azurermEventhubNamespaceExample =
      new azurerm.eventhubNamespace.EventhubNamespace(this, "example_1", {
        capacity: 2,
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "acceptanceTestEventHubNamespace",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        sku: "Basic",
        tags: {
          environment: "Production",
        },
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermEventhubNamespaceExample.overrideLogicalId("example");
    const azurermEventhubNamespaceAuthorizationRuleExample =
      new azurerm.eventhubNamespaceAuthorizationRule.EventhubNamespaceAuthorizationRule(
        this,
        "example_2",
        {
          listen: true,
          manage: false,
          name: "navi",
          namespaceName: cdktf.Token.asString(
            azurermEventhubNamespaceExample.name
          ),
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          send: false,
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermEventhubNamespaceAuthorizationRuleExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Authorization Rule. Changing this forces a new resource to be created.

* `namespaceName` - (Required) Specifies the name of the EventHub Namespace. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the resource group in which the EventHub Namespace exists. Changing this forces a new resource to be created.

~> **NOTE** At least one of the 3 permissions below needs to be set.

* `listen` - (Optional) Grants listen access to this this Authorization Rule. Defaults to `false`.

* `send` - (Optional) Grants send access to this this Authorization Rule. Defaults to `false`.

* `manage` - (Optional) Grants manage access to this this Authorization Rule. When this property is `true` - both `listen` and `send` must be too. Defaults to `false`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The EventHub Namespace Authorization Rule ID.

* `primaryConnectionStringAlias` - The alias of the Primary Connection String for the Authorization Rule, which is generated when disaster recovery is enabled.

* `secondaryConnectionStringAlias` - The alias of the Secondary Connection String for the Authorization Rule, which is generated when disaster recovery is enabled.

* `primaryConnectionString` - The Primary Connection String for the Authorization Rule.

* `primaryKey` - The Primary Key for the Authorization Rule.

* `secondaryConnectionString` - The Secondary Connection String for the Authorization Rule.

* `secondaryKey` - The Secondary Key for the Authorization Rule.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the EventHub Namespace Authorization Rule.
* `update` - (Defaults to 30 minutes) Used when updating the EventHub Namespace Authorization Rule.
* `read` - (Defaults to 5 minutes) Used when retrieving the EventHub Namespace Authorization Rule.
* `delete` - (Defaults to 30 minutes) Used when deleting the EventHub Namespace Authorization Rule.

## Import

EventHub Namespace Authorization Rules can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_eventhub_namespace_authorization_rule.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.EventHub/namespaces/namespace1/authorizationRules/rule1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-251e4b1a28a468dc2f29832f2bfa7c65d12d4fc58340f64278a88ac550796eee -->