---
subcategory: "API Management"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_api_management_logger"
description: |-
  Manages a Logger within an API Management Service.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_api_management_logger

Manages a Logger within an API Management Service.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermApiManagementExample = new azurerm.apiManagement.ApiManagement(
      this,
      "example_1",
      {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-apim",
        publisherEmail: "company@terraform.io",
        publisherName: "My Company",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        skuName: "Developer_1",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermApiManagementExample.overrideLogicalId("example");
    const azurermApplicationInsightsExample =
      new azurerm.applicationInsights.ApplicationInsights(this, "example_2", {
        applicationType: "other",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-appinsights",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermApplicationInsightsExample.overrideLogicalId("example");
    const azurermApiManagementLoggerExample =
      new azurerm.apiManagementLogger.ApiManagementLogger(this, "example_3", {
        apiManagementName: cdktf.Token.asString(
          azurermApiManagementExample.name
        ),
        applicationInsights: {
          instrumentationKey: cdktf.Token.asString(
            azurermApplicationInsightsExample.instrumentationKey
          ),
        },
        name: "example-logger",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        resourceId: cdktf.Token.asString(azurermApplicationInsightsExample.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermApiManagementLoggerExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of this Logger, which must be unique within the API Management Service. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.

* `apiManagementName` - (Required) The name of the API Management Service. Changing this forces a new resource to be created.

* `applicationInsights` - (Optional) An `applicationInsights` block as documented below. Changing this forces a new resource to be created.

* `buffered` - (Optional) Specifies whether records should be buffered in the Logger prior to publishing. Defaults to `true`.

* `description` - (Optional) A description of this Logger.

* `eventhub` - (Optional) An `eventhub` block as documented below. Changing this forces a new resource to be created.

* `resourceId` - (Optional) The target resource id which will be linked in the API-Management portal page. Changing this forces a new resource to be created.

---

An `applicationInsights` block supports the following:

* `instrumentationKey` - (Required) The instrumentation key used to push data to Application Insights.

---

An `eventhub` block supports the following:

* `name` - (Required) The name of an EventHub.

* `connectionString` - (Required) The connection string of an EventHub Namespace.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the API Management Logger.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the API Management Logger.
* `update` - (Defaults to 30 minutes) Used when updating the API Management Logger.
* `read` - (Defaults to 5 minutes) Used when retrieving the API Management Logger.
* `delete` - (Defaults to 30 minutes) Used when deleting the API Management Logger.

## Import

API Management Loggers can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_api_management_logger.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example-rg/providers/Microsoft.ApiManagement/service/example-apim/loggers/example-logger
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-33351da403a05488dd3e57fc7bc9791563a19636c132d8cf13a21d252af03011 -->