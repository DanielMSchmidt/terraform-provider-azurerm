---
subcategory: "Messaging"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_signalr_service_network_acl"
description: |-
  Manages the Network ACL for a SignalR service.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_signalr_service_network_acl

Manages the Network ACL for a SignalR service.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermSignalrServiceExample =
      new azurerm.signalrService.SignalrService(this, "example_1", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-signalr",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        sku: {
          capacity: 1,
          name: "Standard_S1",
        },
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSignalrServiceExample.overrideLogicalId("example");
    const azurermVirtualNetworkExample =
      new azurerm.virtualNetwork.VirtualNetwork(this, "example_2", {
        addressSpace: ["10.5.0.0/16"],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-vnet",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualNetworkExample.overrideLogicalId("example");
    const azurermSubnetExample = new azurerm.subnet.Subnet(this, "example_3", {
      addressPrefixes: ["10.5.2.0/24"],
      enforcePrivateLinkEndpointNetworkPolicies: true,
      name: "example-subnet",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      virtualNetworkName: cdktf.Token.asString(
        azurermVirtualNetworkExample.name
      ),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSubnetExample.overrideLogicalId("example");
    const azurermPrivateEndpointExample =
      new azurerm.privateEndpoint.PrivateEndpoint(this, "example_4", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-privateendpoint",
        privateServiceConnection: {
          isManualConnection: false,
          name: "psc-sig-test",
          privateConnectionResourceId: cdktf.Token.asString(
            azurermSignalrServiceExample.id
          ),
          subresourceNames: ["signalr"],
        },
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        subnetId: cdktf.Token.asString(azurermSubnetExample.id),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermPrivateEndpointExample.overrideLogicalId("example");
    const azurermSignalrServiceNetworkAclExample =
      new azurerm.signalrServiceNetworkAcl.SignalrServiceNetworkAcl(
        this,
        "example_5",
        {
          defaultAction: "Deny",
          privateEndpoint: [
            {
              allowedRequestTypes: ["ServerConnection"],
              id: cdktf.Token.asString(azurermPrivateEndpointExample.id),
            },
          ],
          publicNetwork: {
            allowedRequestTypes: ["ClientConnection"],
          },
          signalrServiceId: cdktf.Token.asString(
            azurermSignalrServiceExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSignalrServiceNetworkAclExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `signalrServiceId` - (Required) The ID of the SignalR service. Changing this forces a new resource to be created.

* `defaultAction` - (Required) The default action to control the network access when no other rule matches. Possible values are `allow` and `deny`.

* `publicNetwork` - (Required) A `publicNetwork` block as defined below.

* `privateEndpoint` - (Optional) A `privateEndpoint` block as defined below.

---

A `publicNetwork` block supports the following:

* `allowedRequestTypes` - (Optional) The allowed request types for the public network. Possible values are `clientConnection`, `serverConnection`, `restapi` and `trace`.

~> **Note:** When `defaultAction` is `allow`, `allowedRequestTypes`cannot be set.

* `deniedRequestTypes` - (Optional) The denied request types for the public network. Possible values are `clientConnection`, `serverConnection`, `restapi` and `trace`.

~> **Note:** When `defaultAction` is `deny`, `deniedRequestTypes`cannot be set.

~> **Note:** `allowedRequestTypes` - (Optional) and `deniedRequestTypes` cannot be set together.

---

A `privateEndpoint` block supports the following:

* `id` - (Required) The ID of the Private Endpoint which is based on the SignalR service.

* `allowedRequestTypes` - (Optional) The allowed request types for the Private Endpoint Connection. Possible values are `clientConnection`, `serverConnection`, `restapi` and `trace`.

~> **Note:** When `defaultAction` is `allow`, `allowedRequestTypes`cannot be set.

* `deniedRequestTypes` - (Optional) The denied request types for the Private Endpoint Connection. Possible values are `clientConnection`, `serverConnection`, `restapi` and `trace`.

~> **Note:** When `defaultAction` is `deny`, `deniedRequestTypes`cannot be set.

~> **Note:** `allowedRequestTypes` - (Optional) and `deniedRequestTypes` cannot be set together.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the SignalR service.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Network ACL of the SignalR service
* `read` - (Defaults to 5 minutes) Used when retrieving the Network ACL of the SignalR service
* `update` - (Defaults to 30 minutes) Used when updating the Network ACL of the SignalR service
* `delete` - (Defaults to 30 minutes) Used when deleting the Network ACL of the SignalR service

## Import

Network ACLs for a SignalR service can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_signalr_service_network_acl.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.SignalRService/signalR/signalr1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-cee4b206b39c0655ce812ec0444161907a986b9f3b01d3c0a90654fe26c8a421 -->