---
subcategory: "Azure Stack HCI"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_stack_hci_cluster"
description: |-
  Manages an Azure Stack HCI Cluster.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_stack_hci_cluster

Manages an Azure Stack HCI Cluster.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
import * as azuread from "./.gen/providers/azuread";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*The following providers are missing schema information and might need manual adjustments to synthesize correctly: azuread.
    For a more precise conversion please use the --provider flag in convert.*/
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const dataAzureadApplicationExample =
      new azuread.dataAzureadApplication.DataAzureadApplication(
        this,
        "example_1",
        {
          display_name: "Allowed resource types",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAzureadApplicationExample.overrideLogicalId("example");
    const dataAzurermClientConfigCurrent =
      new azurerm.dataAzurermClientConfig.DataAzurermClientConfig(
        this,
        "current",
        {}
      );
    const azurermStackHciClusterExample =
      new azurerm.stackHciCluster.StackHciCluster(this, "example_3", {
        clientId: cdktf.Token.asString(
          dataAzureadApplicationExample.applicationId
        ),
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-cluster",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        tenantId: cdktf.Token.asString(dataAzurermClientConfigCurrent.tenantId),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStackHciClusterExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Azure Stack HCI Cluster. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the Resource Group where the Azure Stack HCI Cluster should exist. Changing this forces a new resource to be created.

* `location` - (Required) The Azure Region where the Azure Stack HCI Cluster should exist. Changing this forces a new resource to be created.

* `clientId` - (Required) The Client ID of the Azure Active Directory which is used by the Azure Stack HCI Cluster. Changing this forces a new resource to be created.

* `tenantId` - (Optional) The Tenant ID of the Azure Active Directory which is used by the Azure Stack HCI Cluster. Changing this forces a new resource to be created.

~> **NOTE** If unspecified the Tenant ID of the Provider will be used.

* `tags` - (Optional) A mapping of tags which should be assigned to the Azure Stack HCI Cluster.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Azure Stack HCI Cluster.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Azure Stack HCI Cluster.
* `read` - (Defaults to 5 minutes) Used when retrieving the Azure Stack HCI Cluster.
* `update` - (Defaults to 30 minutes) Used when updating the Azure Stack HCI Cluster.
* `delete` - (Defaults to 30 minutes) Used when deleting the Azure Stack HCI Cluster.

## Import

Azure Stack HCI Clusters can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_stack_hci_cluster.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.AzureStackHCI/clusters/cluster1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-47ad3a583f9e9c163db91fbbd7ecb66f904e3b054921e29ae5d9507861edeb7d -->