---
subcategory: "Cost Management"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_subscription_cost_management_export"
description: |-
  Manages an Azure Cost Management Export for a Subscription.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_subscription_cost_management_export

Manages a Cost Management Export for a Subscription.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermStorageAccountExample =
      new azurerm.storageAccount.StorageAccount(this, "example_1", {
        accountReplicationType: "LRS",
        accountTier: "Standard",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageAccountExample.overrideLogicalId("example");
    const azurermStorageContainerExample =
      new azurerm.storageContainer.StorageContainer(this, "example_2", {
        name: "examplecontainer",
        storageAccountName: cdktf.Token.asString(
          azurermStorageAccountExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageContainerExample.overrideLogicalId("example");
    const dataAzurermSubscriptionExample =
      new azurerm.dataAzurermSubscription.DataAzurermSubscription(
        this,
        "example_3",
        {}
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAzurermSubscriptionExample.overrideLogicalId("example");
    const azurermSubscriptionCostManagementExportExample =
      new azurerm.subscriptionCostManagementExport.SubscriptionCostManagementExport(
        this,
        "example_4",
        {
          exportDataOptions: {
            timeFrame: "WeekToDate",
            type: "Usage",
          },
          exportDataStorageLocation: {
            containerId: cdktf.Token.asString(
              azurermStorageContainerExample.resourceManagerId
            ),
            rootFolderPath: "/root/updated",
          },
          name: "example",
          recurrencePeriodEndDate: "2020-09-18T00:00:00Z",
          recurrencePeriodStartDate: "2020-08-18T00:00:00Z",
          recurrenceType: "Monthly",
          subscriptionId: cdktf.Token.asString(
            dataAzurermSubscriptionExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSubscriptionCostManagementExportExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Cost Management Export. Changing this forces a new resource to be created.

* `subscriptionId` - (Required) The id of the subscription on which to create an export. Changing this forces a new resource to be created.

* `recurrenceType` - (Required) How often the requested information will be exported. Valid values include `annually`, `daily`, `monthly`, `weekly`.

* `recurrencePeriodStartDate` - (Required) The date the export will start capturing information.

* `recurrencePeriodEndDate` - (Required) The date the export will stop capturing information.

* `exportDataStorageLocation` - (Required) A `exportDataStorageLocation` block as defined below.

* `exportDataOptions` - (Required) A `exportDataOptions` block as defined below.

* `active` - (Optional) Is the cost management export active? Default is `true`.

---

A `exportDataStorageLocation` block supports the following:

* `containerId` - (Required) The Resource Manager ID of the container where exports will be uploaded. Changing this forces a new resource to be created.

* `rootFolderPath` - (Required) The path of the directory where exports will be uploaded. Changing this forces a new resource to be created.

~> **Note:** The Resource Manager ID of a Storage Container is exposed via the `resourceManagerId` attribute of the `azurermStorageContainer` resource.

---

A `exportDataOptions` block supports the following:

* `type` - (Required) The type of the query. Possible values are `actualCost`, `amortizedCost` and `usage`.

* `timeFrame` - (Required) The time frame for pulling data for the query. If custom, then a specific time period must be provided. Possible values include: `weekToDate`, `monthToDate`, `billingMonthToDate`, `theLast7Days`, `theLastMonth`, `theLastBillingMonth`, `custom`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Cost Management Export for this Subscription.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Subscription Cost Management Export.
* `read` - (Defaults to 5 minutes) Used when retrieving the Subscription Cost Management Export.
* `update` - (Defaults to 30 minutes) Used when updating the Subscription Cost Management Export.
* `delete` - (Defaults to 30 minutes) Used when deleting the Subscription Cost Management Export.

## Import

Subscription Cost Management Exports can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_subscription_cost_management_export.example /subscriptions/12345678-1234-9876-4563-123456789012/providers/Microsoft.CostManagement/exports/export1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-80ddc12adca0deefa211c981d20895d62d6f8d1a55cf3828ab39cc095076cca3 -->