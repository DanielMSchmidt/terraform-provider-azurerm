---
subcategory: "Mobile Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_mobile_network_sim_policy"
description: |-
  Manages a Mobile Network Sim Policy.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_mobile_network_sim_policy

Manages a Mobile Network Sim Policy.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermMobileNetworkExample = new azurerm.mobileNetwork.MobileNetwork(
      this,
      "example_1",
      {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        mobileCountryCode: "001",
        mobileNetworkCode: "01",
        name: "example-mn",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMobileNetworkExample.overrideLogicalId("example");
    const azurermMobileNetworkDataNetworkExample =
      new azurerm.mobileNetworkDataNetwork.MobileNetworkDataNetwork(
        this,
        "example_2",
        {
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          mobileNetworkId: cdktf.Token.asString(azurermMobileNetworkExample.id),
          name: "example-mndn",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMobileNetworkDataNetworkExample.overrideLogicalId("example");
    const azurermMobileNetworkServiceExample =
      new azurerm.mobileNetworkService.MobileNetworkService(this, "example_3", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        mobileNetworkId: cdktf.Token.asString(azurermMobileNetworkExample.id),
        name: "example-mns",
        pccRule: [
          {
            name: "default-rule",
            precedence: 1,
            serviceDataFlowTemplate: [
              {
                direction: "Uplink",
                name: "IP-to-server",
                ports: [],
                protocol: ["ip"],
                remoteIpList: ["10.3.4.0/24"],
              },
            ],
            trafficControlEnabled: true,
          },
        ],
        servicePrecedence: 0,
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMobileNetworkServiceExample.overrideLogicalId("example");
    const azurermMobileNetworkSliceExample =
      new azurerm.mobileNetworkSlice.MobileNetworkSlice(this, "example_4", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        mobileNetworkId: cdktf.Token.asString(azurermMobileNetworkExample.id),
        name: "example-mns",
        singleNetworkSliceSelectionAssistanceInformation: {
          sliceServiceType: 1,
        },
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMobileNetworkSliceExample.overrideLogicalId("example");
    const azurermMobileNetworkSimPolicyExample =
      new azurerm.mobileNetworkSimPolicy.MobileNetworkSimPolicy(
        this,
        "example_5",
        {
          defaultSliceId: cdktf.Token.asString(
            azurermMobileNetworkSliceExample.id
          ),
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          mobileNetworkId: cdktf.Token.asString(azurermMobileNetworkExample.id),
          name: "example-mnsp",
          registrationTimerInSeconds: 3240,
          slice: [
            {
              dataNetwork: [
                {
                  allocationAndRetentionPriorityLevel: 9,
                  allowedServicesIds: [
                    cdktf.Token.asString(azurermMobileNetworkServiceExample.id),
                  ],
                  dataNetworkId: cdktf.Token.asString(
                    azurermMobileNetworkDataNetworkExample.id
                  ),
                  defaultSessionType: "IPv4",
                  preemptionCapability: "NotPreempt",
                  preemptionVulnerability: "Preemptable",
                  qosIndicator: 9,
                  sessionAggregateMaximumBitRate: {
                    downlink: "1 Gbps",
                    uplink: "500 Mbps",
                  },
                },
              ],
              defaultDataNetworkId: cdktf.Token.asString(
                azurermMobileNetworkDataNetworkExample.id
              ),
              sliceId: cdktf.Token.asString(
                azurermMobileNetworkSliceExample.id
              ),
            },
          ],
          tags: {
            key: "value",
          },
          userEquipmentAggregateMaximumBitRate: {
            downlink: "1 Gbps",
            uplink: "500 Mbps",
          },
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermMobileNetworkSimPolicyExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Mobile Network Sim Policies. Changing this forces a new Mobile Network Sim Policies to be created.

* `mobileNetworkId` - (Required) The ID of the Mobile Network which the Sim Policy belongs to. Changing this forces a new Mobile Network Sim Policies to be created.

* `defaultSliceId` - (Required) The ID of default slice to use if the UE does not explicitly specify it. This slice must exist in the `slice` block.

* `location` - (Required) Specifies the Azure Region where the Mobile Network Sim Policy should exist. Changing this forces a new Mobile Network Sim Policies to be created.

* `registrationTimerInSeconds` - (Optional) Interval for the user equipment periodic registration update procedure. Defaults to `3240`.

* `ratFrequencySelectionPriorityIndex` - (Optional) RAT/Frequency Selection Priority Index, defined in 3GPP TS 36.413.

* `userEquipmentAggregateMaximumBitRate` - (Required) A `userEquipmentAggregateMaximumBitRate` block as defined below.

* `slice` - (Required) An array of `slice` block as defined below. The allowed slices and the settings to use for them. The list must not contain duplicate items and must contain at least one item.

* `tags` - (Optional) A mapping of tags which should be assigned to the Mobile Network Sim Policies.

---

A `slice` block supports the following:

* `dataNetwork` - (Required) An array of `dataNetwork` block as defined below.

* `defaultDataNetworkId` - (Required) The ID of default data network to use if the user equipment does not explicitly specify it. Configuration for this object must exist in the `dataNetwork` block.

* `sliceId` - (Required) The ID of the slice that these settings apply to.

---

A `dataNetwork` block supports the following:

* `allowedServicesIds` - (Required) An array of IDs of services that can be used as part of this SIM policy. The array must not contain duplicate items and must contain at least one item.

* `dataNetworkId` - (Required) The ID of Mobile Network Data Network which these settings apply to.

* `sessionAggregateMaximumBitRate` - (Required) A `sessionAggregateMaximumBitRate` block as defined below.

* `allocationAndRetentionPriorityLevel` - (Optional) Default QoS Flow allocation and retention priority (ARP) level. Flows with higher priority preempt flows with lower priority, if the settings of `preemptionCapability` and `preemptionVulnerability` allow it. `1` is the highest level of priority. If this field is not specified then `qosIndicator` is used to derive the ARP value. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters.

* `additionalAllowedSessionTypes` - (Optional) Allowed session types in addition to the default session type. Must not duplicate the default session type. Possible values are `iPv4` and `iPv6`.

* `defaultSessionType` - (Optional) The default PDU session type, which is used if the user equipment does not request a specific session type. Possible values are `iPv4` and `iPv6`. Defaults to `iPv4`.

* `qosIndicator` - (Optional) The QoS Indicator (5QI for 5G network /QCI for 4G net work) value identifies a set of QoS characteristics, it controls QoS forwarding treatment for QoS flows or EPS bearers. Recommended values: 5-9; 69-70; 79-80. Must be between `1` and `127`. Defaults to `9`.

* `maxBufferedPackets` - (Optional) The maximum number of downlink packets to buffer at the user plane for High Latency Communication - Extended Buffering. Defaults to `10`, Must be at least `0`, See 3GPP TS29.272 v15.10.0 section 7.3.188 for a full description. This maximum is not guaranteed because there is a internal limit on buffered packets across all PDU sessions.

* `preemptionCapability` - (Optional) The Preemption Capability of a QoS Flow, it controls whether it can preempt another QoS Flow with a lower priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `notPreempt` and `mayPreempt`, Defaults to `notPreempt`.

* `preemptionVulnerability` - (Optional) The Preemption Vulnerability of a QoS Flow, it controls whether it can be preempted by QoS Flow with a higher priority level. See 3GPP TS23.501 section 5.7.2.2 for a full description of the ARP parameters. Possible values are `notPreemptable` and `preemptable`. Defaults to `preemptable`.

---

A `sessionAggregateMaximumBitRate` block supports the following:

* `downlink` - (Required) Downlink bit rate. Must be a number followed by `kbps`, `mbps`, `gbps` or `tbps`.

* `uplink` - (Required) Uplink bit rate. Must be a number followed by `kbps`, `mbps`, `gbps` or `tbps`.

---

A `userEquipmentAggregateMaximumBitRate` block supports the following:

* `downlink` - (Required) Downlink bit rate. Must be a number followed by `kbps`, `mbps`, `gbps` or `tbps`.

* `uplink` - (Required) Uplink bit rate. Must be a number followed by `kbps`, `mbps`, `gbps` or `tbps`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Mobile Network Sim Policies.


## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 180 minutes) Used when creating the Mobile Network Sim Policies.
* `read` - (Defaults to 5 minutes) Used when retrieving the Mobile Network Sim Policies.
* `update` - (Defaults to 60 minutes) Used when updating the Mobile Network Sim Policies.
* `delete` - (Defaults to 180 minutes) Used when deleting the Mobile Network Sim Policies.

## Import

Mobile Network Sim Policies can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_mobile_network_sim_policy.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.MobileNetwork/mobileNetworks/mobileNetwork1/simPolicies/simPolicy1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-c23e1d7387c3f47455a5e09633526400269982c071a2366a38bce511da344c19 -->