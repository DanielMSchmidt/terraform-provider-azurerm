---
subcategory: "CosmosDB (DocumentDB)"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_cosmosdb_notebook_workspace"
description: |-
  Manages an SQL Notebook Workspace.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_cosmosdb_notebook_workspace

Manages an SQL Notebook Workspace.

!> **Note:** CosmosDb Notebook Workspace is now Deprecated - as such the `azurermCosmosdbNotebookWorkspace` resource is deprecated and will be removed in v4.0 of the AzureRM Provider.

~> **NOTE:** CosmosDb Notebook (the feature itself) is not deprecated and will return: <https://learn.microsoft.com/en-us/azure/cosmos-db/notebooks-faq>.

~> **NOTE:** However, CosmosDb Notebook feature no longer uses the permanent notebook workspace being referred to the public surface in the RP (have since moved to temporary notebooks workspaces which are short-lived <1 hour).

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermCosmosdbAccountExample =
      new azurerm.cosmosdbAccount.CosmosdbAccount(this, "example_1", {
        consistencyPolicy: {
          consistencyLevel: "BoundedStaleness",
        },
        geoLocation: [
          {
            failoverPriority: 0,
            location: cdktf.Token.asString(
              azurermResourceGroupExample.location
            ),
          },
        ],
        kind: "GlobalDocumentDB",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-cosmosdb-account",
        offerType: "Standard",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermCosmosdbAccountExample.overrideLogicalId("example");
    const azurermCosmosdbNotebookWorkspaceExample =
      new azurerm.cosmosdbNotebookWorkspace.CosmosdbNotebookWorkspace(
        this,
        "example_2",
        {
          accountName: cdktf.Token.asString(azurermCosmosdbAccountExample.name),
          name: "default",
          resourceGroupName: cdktf.Token.asString(
            azurermCosmosdbAccountExample.resourceGroupName
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermCosmosdbNotebookWorkspaceExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this SQL Notebook Workspace. Possible value is `default`. Changing this forces a new SQL Notebook Workspace to be created.

* `resourceGroupName` - (Required) The name of the Resource Group where the SQL Notebook Workspace should exist. Changing this forces a new SQL Notebook Workspace to be created.

* `accountName` - (Required) The name of the Cosmos DB Account to create the SQL Notebook Workspace within. Changing this forces a new SQL Notebook Workspace to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the SQL Notebook Workspace.

* `serverEndpoint` - Specifies the endpoint of Notebook server.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the =SQL Notebook Workspace.
* `read` - (Defaults to 5 minutes) Used when retrieving the =SQL Notebook Workspace.
* `delete` - (Defaults to 30 minutes) Used when deleting the =SQL Notebook Workspace.

## Import

=SQL Notebook Workspaces can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_cosmosdb_notebook_workspace.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DocumentDB/databaseAccounts/account1/notebookWorkspaces/notebookWorkspace1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-11e4ca9c3dea908baa8c8b47ea817e00eefb386c87174ca5662712bf6590d085 -->