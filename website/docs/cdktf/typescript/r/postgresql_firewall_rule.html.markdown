---
subcategory: "Database"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_postgresql_firewall_rule"
description: |-
  Manages a Firewall Rule for a PostgreSQL Server.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_postgresql_firewall_rule

Manages a Firewall Rule for a PostgreSQL Server

## Example Usage (Single IP Address)

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "api-rg-pro",
      }
    );
    const azurermPostgresqlServerExample =
      new azurerm.postgresqlServer.PostgresqlServer(this, "example_1", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-postgre-server",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        skuName: "GP_Gen5_2",
        sslEnforcementEnabled: true,
        version: "11",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermPostgresqlServerExample.overrideLogicalId("example");
    const azurermPostgresqlFirewallRuleExample =
      new azurerm.postgresqlFirewallRule.PostgresqlFirewallRule(
        this,
        "example_2",
        {
          endIpAddress: "40.112.8.12",
          name: "office",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          serverName: cdktf.Token.asString(azurermPostgresqlServerExample.name),
          startIpAddress: "40.112.8.12",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermPostgresqlFirewallRuleExample.overrideLogicalId("example");
  }
}

```

## Example Usage (IP Range)

```hcl
resource "azurerm_resource_group" "example" {
  name     = "api-rg-pro"
  location = "West Europe"
}

resource "azurerm_postgresql_server" "example" {
  # ...
}

resource "azurerm_postgresql_firewall_rule" "example" {
  name                = "office"
  resource_group_name = azurerm_resource_group.example.name
  server_name         = azurerm_postgresql_server.example.name
  start_ip_address    = "40.112.0.0"
  end_ip_address      = "40.112.255.255"
}
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the PostgreSQL Firewall Rule. Changing this forces a new resource to be created.

* `serverName` - (Required) Specifies the name of the PostgreSQL Server. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the resource group in which the PostgreSQL Server exists. Changing this forces a new resource to be created.

* `startIpAddress` - (Required) Specifies the Start IP Address associated with this Firewall Rule. Changing this forces a new resource to be created.

* `endIpAddress` - (Required) Specifies the End IP Address associated with this Firewall Rule. Changing this forces a new resource to be created.

-> **NOTE:** The Azure feature `Allow access to Azure services` can be enabled by setting `startIpAddress` and `endIpAddress` to `0000` which ([is documented in the Azure API Docs](https://docs.microsoft.com/rest/api/sql/firewallrules/createorupdate)).

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the PostgreSQL Firewall Rule.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the PostgreSQL Firewall Rule.
* `update` - (Defaults to 30 minutes) Used when updating the PostgreSQL Firewall Rule.
* `read` - (Defaults to 5 minutes) Used when retrieving the PostgreSQL Firewall Rule.
* `delete` - (Defaults to 30 minutes) Used when deleting the PostgreSQL Firewall Rule.

## Import

PostgreSQL Firewall Rule's can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_postgresql_firewall_rule.rule1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.DBforPostgreSQL/servers/server1/firewallRules/rule1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-9258aa005cd6394ee0749071c117fcc6d9368f4e7fee1f7497371ec9b618d5cd -->