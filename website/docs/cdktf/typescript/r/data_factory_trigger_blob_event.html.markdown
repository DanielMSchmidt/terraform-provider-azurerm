---
subcategory: "Data Factory"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_data_factory_trigger_blob_event"
description: |-
  Manages a Blob Event Trigger inside an Azure Data Factory.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_data_factory_trigger_blob_event

Manages a Blob Event Trigger inside an Azure Data Factory.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermStorageAccountExample =
      new azurerm.storageAccount.StorageAccount(this, "example_1", {
        accountReplicationType: "LRS",
        accountTier: "Standard",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageAccountExample.overrideLogicalId("example");
    const azurermDataFactoryExample = new azurerm.dataFactory.DataFactory(
      this,
      "example_2",
      {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataFactoryExample.overrideLogicalId("example");
    const azurermDataFactoryPipelineExample =
      new azurerm.dataFactoryPipeline.DataFactoryPipeline(this, "example_3", {
        dataFactoryId: cdktf.Token.asString(azurermDataFactoryExample.id),
        name: "example",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataFactoryPipelineExample.overrideLogicalId("example");
    const azurermDataFactoryTriggerBlobEventExample =
      new azurerm.dataFactoryTriggerBlobEvent.DataFactoryTriggerBlobEvent(
        this,
        "example_4",
        {
          activated: true,
          additionalProperties: {
            bar: "bar2",
            foo: "foo1",
          },
          annotations: ["test1", "test2", "test3"],
          blobPathEndsWith: ".txt",
          dataFactoryId: cdktf.Token.asString(azurermDataFactoryExample.id),
          description: "example description",
          events: [
            "Microsoft.Storage.BlobCreated",
            "Microsoft.Storage.BlobDeleted",
          ],
          ignoreEmptyBlobs: true,
          name: "example",
          pipeline: [
            {
              name: cdktf.Token.asString(
                azurermDataFactoryPipelineExample.name
              ),
              parameters: {
                Env: "Prod",
              },
            },
          ],
          storageAccountId: cdktf.Token.asString(
            azurermStorageAccountExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataFactoryTriggerBlobEventExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Data Factory Blob Event Trigger. Changing this forces a new resource to be created.

* `dataFactoryId` - (Required) The ID of Data Factory in which to associate the Trigger with. Changing this forces a new resource.

* `storageAccountId` - (Required) The ID of Storage Account in which blob event will be listened. Changing this forces a new resource.

* `events` - (Required) List of events that will fire this trigger. Possible values are `microsoftStorageBlobCreated` and `microsoftStorageBlobDeleted`.

* `pipeline` - (Required) One or more `pipeline` blocks as defined below.

* `activated` - (Optional) Specifies if the Data Factory Blob Event Trigger is activated. Defaults to `true`.

* `additionalProperties` - (Optional) A map of additional properties to associate with the Data Factory Blob Event Trigger.

* `annotations` - (Optional) List of tags that can be used for describing the Data Factory Blob Event Trigger.

* `blobPathBeginsWith` - (Optional) The pattern that blob path starts with for trigger to fire.

* `blobPathEndsWith` - (Optional) The pattern that blob path ends with for trigger to fire.

~> **Note:** At least one of `blobPathBeginsWith` and `blobPathEndsWith` must be set.

* `description` - (Optional) The description for the Data Factory Blob Event Trigger.

* `ignoreEmptyBlobs` - (Optional) are blobs with zero bytes ignored?

---

A `pipeline` block supports the following:

* `name` - (Required) The Data Factory Pipeline name that the trigger will act on.

* `parameters` - (Optional) The Data Factory Pipeline parameters that the trigger will act on.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Data Factory Blob Event Trigger.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Data Factory Blob Event Trigger.
* `update` - (Defaults to 30 minutes) Used when updating the Data Factory Blob Event Trigger.
* `read` - (Defaults to 5 minutes) Used when retrieving the Data Factory Blob Event Trigger.
* `delete` - (Defaults to 30 minutes) Used when deleting the Data Factory Blob Event Trigger.

## Import

Data Factory Blob Event Trigger can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_data_factory_trigger_blob_event.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.DataFactory/factories/example/triggers/example
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-9c87ea8d7c0cf47bb0fb31d33bfcd5de637af5172c132593d32d627450778313 -->