---
subcategory: "Digital Twins"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_digital_twins_endpoint_eventhub"
description: |-
  Manages a Digital Twins Event Hub Endpoint.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_digital_twins_endpoint_eventhub

Manages a Digital Twins Event Hub Endpoint.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new azurerm.provider.AzurermProvider(this, "azurerm", {
      features: {},
    });
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example_resources",
      }
    );
    const azurermDigitalTwinsInstanceExample =
      new azurerm.digitalTwinsInstance.DigitalTwinsInstance(this, "example_2", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-DT",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDigitalTwinsInstanceExample.overrideLogicalId("example");
    const azurermEventhubNamespaceExample =
      new azurerm.eventhubNamespace.EventhubNamespace(this, "example_3", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-eh-ns",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        sku: "Standard",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermEventhubNamespaceExample.overrideLogicalId("example");
    const azurermEventhubExample = new azurerm.eventhub.Eventhub(
      this,
      "example_4",
      {
        messageRetention: 1,
        name: "example-eh",
        namespaceName: cdktf.Token.asString(
          azurermEventhubNamespaceExample.name
        ),
        partitionCount: 2,
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermEventhubExample.overrideLogicalId("example");
    const azurermEventhubAuthorizationRuleExample =
      new azurerm.eventhubAuthorizationRule.EventhubAuthorizationRule(
        this,
        "example_5",
        {
          eventhubName: cdktf.Token.asString(azurermEventhubExample.name),
          listen: false,
          manage: false,
          name: "example-ar",
          namespaceName: cdktf.Token.asString(
            azurermEventhubNamespaceExample.name
          ),
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          send: true,
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermEventhubAuthorizationRuleExample.overrideLogicalId("example");
    const azurermDigitalTwinsEndpointEventhubExample =
      new azurerm.digitalTwinsEndpointEventhub.DigitalTwinsEndpointEventhub(
        this,
        "example_6",
        {
          digitalTwinsId: cdktf.Token.asString(
            azurermDigitalTwinsInstanceExample.id
          ),
          eventhubPrimaryConnectionString: cdktf.Token.asString(
            azurermEventhubAuthorizationRuleExample.primaryConnectionString
          ),
          eventhubSecondaryConnectionString: cdktf.Token.asString(
            azurermEventhubAuthorizationRuleExample.secondaryConnectionString
          ),
          name: "example-EH",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDigitalTwinsEndpointEventhubExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Digital Twins Event Hub Endpoint. Changing this forces a new Digital Twins Event Hub Endpoint to be created.

* `digitalTwinsId` - (Required) The resource ID of the Digital Twins Instance. Changing this forces a new Digital Twins Event Hub Endpoint to be created.

* `eventhubPrimaryConnectionString` - (Required) The primary connection string of the Event Hub Authorization Rule with a minimum of `send` permission.

* `eventhubSecondaryConnectionString` - (Required) The secondary connection string of the Event Hub Authorization Rule with a minimum of `send` permission.

* `deadLetterStorageSecret` - (Optional) The storage secret of the dead-lettering, whose format is `https://<storageAccountname>BlobCoreWindowsNet/<containerName>?<sasToken>`. When an endpoint can't deliver an event within a certain time period or after trying to deliver the event a certain number of times, it can send the undelivered event to a storage account.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Digital Twins Event Hub Endpoint.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Digital Twins Eventhub Endpoint.
* `read` - (Defaults to 5 minutes) Used when retrieving the Digital Twins Eventhub Endpoint.
* `update` - (Defaults to 30 minutes) Used when updating the Digital Twins Eventhub Endpoint.
* `delete` - (Defaults to 30 minutes) Used when deleting the Digital Twins Eventhub Endpoint.

## Import

Digital Twins Eventhub Endpoints can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_digital_twins_endpoint_eventhub.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DigitalTwins/digitalTwinsInstances/dt1/endpoints/ep1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-a41fd11e480c7844f7f2ed7d89c0623bb5784b318f1ee7b5e48bd66bb3314014 -->