---
subcategory: "Management"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_management_group_subscription_association"
description: |-
  Manages a Management Group Subscription Association.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_management_group_subscription_association

Manages a Management Group Subscription Association.

!> **Note:** When using this resource, configuring `subscriptionIds` on the `azurermManagementGroup` resource is not supported.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAzurermManagementGroupExample =
      new azurerm.dataAzurermManagementGroup.DataAzurermManagementGroup(
        this,
        "example",
        {
          name: "exampleManagementGroup",
        }
      );
    const dataAzurermSubscriptionExample =
      new azurerm.dataAzurermSubscription.DataAzurermSubscription(
        this,
        "example_1",
        {
          subscriptionId: "12345678-1234-1234-1234-123456789012",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    dataAzurermSubscriptionExample.overrideLogicalId("example");
    const azurermManagementGroupSubscriptionAssociationExample =
      new azurerm.managementGroupSubscriptionAssociation.ManagementGroupSubscriptionAssociation(
        this,
        "example_2",
        {
          managementGroupId: cdktf.Token.asString(
            dataAzurermManagementGroupExample.id
          ),
          subscriptionId: cdktf.Token.asString(
            dataAzurermSubscriptionExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermManagementGroupSubscriptionAssociationExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Arguments Reference

The following arguments are supported:

* `managementGroupId` - (Required) The ID of the Management Group to associate the Subscription with. Changing this forces a new Management to be created.

* `subscriptionId` - (Required) The ID of the Subscription to be associated with the Management Group. Changing this forces a new Management to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Management Group Subscription Association.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 5 minutes) Used when creating the Management.
* `read` - (Defaults to 5 minutes) Used when retrieving the Management.
* `delete` - (Defaults to 5 minutes) Used when deleting the Management.

## Import

Managements can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_management_group_subscription_association.example /managementGroup/MyManagementGroup/subscription/12345678-1234-1234-1234-123456789012
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-b2a12d09ee8aee1ae14899880daa564aee9fc7ea61cf6c164ca651c73cbfaec7 -->