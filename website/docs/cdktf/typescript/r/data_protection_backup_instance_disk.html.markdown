---
subcategory: "DataProtection"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_data_protection_backup_instance_disk"
description: |-
  Manages a Backup Instance to back up Disk.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_data_protection_backup_instance_disk

Manages a Backup Instance to back up Disk.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermDataProtectionBackupVaultExample =
      new azurerm.dataProtectionBackupVault.DataProtectionBackupVault(
        this,
        "example_1",
        {
          datastoreType: "VaultStore",
          identity: {
            type: "SystemAssigned",
          },
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "example-backup-vault",
          redundancy: "LocallyRedundant",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataProtectionBackupVaultExample.overrideLogicalId("example");
    const azurermManagedDiskExample = new azurerm.managedDisk.ManagedDisk(
      this,
      "example_2",
      {
        createOption: "Empty",
        diskSizeGb: cdktf.Token.asNumber("1"),
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-disk",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        storageAccountType: "Standard_LRS",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermManagedDiskExample.overrideLogicalId("example");
    new azurerm.roleAssignment.RoleAssignment(this, "example1", {
      principalId: cdktf.Token.asString(
        cdktf.propertyAccess(azurermDataProtectionBackupVaultExample.identity, [
          "0",
          "principal_id",
        ])
      ),
      roleDefinitionName: "Disk Snapshot Contributor",
      scope: cdktf.Token.asString(azurermResourceGroupExample.id),
    });
    new azurerm.roleAssignment.RoleAssignment(this, "example2", {
      principalId: cdktf.Token.asString(
        cdktf.propertyAccess(azurermDataProtectionBackupVaultExample.identity, [
          "0",
          "principal_id",
        ])
      ),
      roleDefinitionName: "Disk Backup Reader",
      scope: cdktf.Token.asString(azurermManagedDiskExample.id),
    });
    const azurermDataProtectionBackupPolicyDiskExample =
      new azurerm.dataProtectionBackupPolicyDisk.DataProtectionBackupPolicyDisk(
        this,
        "example_5",
        {
          backupRepeatingTimeIntervals: ["R/2021-05-19T06:33:16+00:00/PT4H"],
          defaultRetentionDuration: "P7D",
          name: "example-backup-policy",
          vaultId: cdktf.Token.asString(
            azurermDataProtectionBackupVaultExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataProtectionBackupPolicyDiskExample.overrideLogicalId("example");
    const azurermDataProtectionBackupInstanceDiskExample =
      new azurerm.dataProtectionBackupInstanceDisk.DataProtectionBackupInstanceDisk(
        this,
        "example_6",
        {
          backupPolicyId: cdktf.Token.asString(
            azurermDataProtectionBackupPolicyDiskExample.id
          ),
          diskId: cdktf.Token.asString(azurermManagedDiskExample.id),
          location: cdktf.Token.asString(
            azurermDataProtectionBackupVaultExample.location
          ),
          name: "example-backup-instance",
          snapshotResourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          vaultId: cdktf.Token.asString(
            azurermDataProtectionBackupVaultExample.id
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermDataProtectionBackupInstanceDiskExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Backup Instance Disk. Changing this forces a new Backup Instance Disk to be created.

* `location` - (Required) The Azure Region where the Backup Instance Disk should exist. Changing this forces a new Backup Instance Disk to be created.

* `vaultId` - (Required) The ID of the Backup Vault within which the Backup Instance Disk should exist. Changing this forces a new Backup Instance Disk to be created.

* `diskId` - (Required) The ID of the source Disk. Changing this forces a new Backup Instance Disk to be created.

* `snapshotResourceGroupName` - (Required) The name of the Resource Group where snapshots are stored. Changing this forces a new Backup Instance Disk to be created.

* `backupPolicyId` - (Required) The ID of the Backup Policy.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Backup Instance Disk.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Backup Instance Disk.
* `read` - (Defaults to 5 minutes) Used when retrieving the Backup Instance Disk.
* `update` - (Defaults to 30 minutes) Used when updating the Backup Instance Disk.
* `delete` - (Defaults to 30 minutes) Used when deleting the Backup Instance Disk.

## Import

Backup Instance Disks can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_data_protection_backup_instance_disk.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1/backupInstances/backupInstance1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-233b3b21ba1a55addb06d601b7d7477ac8b5b74cda73f5b509619af8e68b45d7 -->