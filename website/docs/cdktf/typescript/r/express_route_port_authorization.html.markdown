---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_express_route_port_authorization"
description: |-
  Manages an ExpressRoute Port Authorization.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_express_route_port_authorization

Manages an ExpressRoute Port Authorization.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "exprtTest",
      }
    );
    const azurermExpressRoutePortExample =
      new azurerm.expressRoutePort.ExpressRoutePort(this, "example_1", {
        bandwidthInGbps: 10,
        encapsulation: "Dot1Q",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "port1",
        peeringLocation: "Airtel-Chennai-CLS",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermExpressRoutePortExample.overrideLogicalId("example");
    const azurermExpressRoutePortAuthorizationExample =
      new azurerm.expressRoutePortAuthorization.ExpressRoutePortAuthorization(
        this,
        "example_2",
        {
          expressRoutePortName: cdktf.Token.asString(
            azurermExpressRoutePortExample.name
          ),
          name: "exampleERCAuth",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermExpressRoutePortAuthorizationExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the ExpressRoute Port. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the resource group in which to create the ExpressRoute Port. Changing this forces a new resource to be created. 

* `expressRoutePortName` - (Required) The name of the Express Route Port in which to create the Authorization. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the ExpressRoute Port Authorization.

* `authorizationKey` - The Authorization Key.

* `authorizationUseStatus` - The authorization use status.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the ExpressRoute Port Authorization.
* `update` - (Defaults to 30 minutes) Used when updating the ExpressRoute Port Authorization.
* `read` - (Defaults to 5 minutes) Used when retrieving the ExpressRoute Port Authorization.
* `delete` - (Defaults to 30 minutes) Used when deleting the ExpressRoute Port Authorization.

## Import

ExpressRoute Port Authorizations can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_express_route_port_authorization.auth1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/expressRoutePorts/myExpressPort/authorizations/auth1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-ac2c020dcbe3c6428c3860795f09eaa43a60e440cc362a8d0e99335b836b1127 -->