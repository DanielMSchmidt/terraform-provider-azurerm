---
subcategory: "Storage"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_storage_queue"
description: |-
  Manages a Queue within an Azure Storage Account.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_storage_queue

Manages a Queue within an Azure Storage Account.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermStorageAccountExample =
      new azurerm.storageAccount.StorageAccount(this, "example_1", {
        accountReplicationType: "LRS",
        accountTier: "Standard",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "examplestorageacc",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageAccountExample.overrideLogicalId("example");
    const azurermStorageQueueExample = new azurerm.storageQueue.StorageQueue(
      this,
      "example_2",
      {
        name: "mysamplequeue",
        storageAccountName: cdktf.Token.asString(
          azurermStorageAccountExample.name
        ),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageQueueExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Queue which should be created within the Storage Account. Must be unique within the storage account the queue is located. Changing this forces a new resource to be created.

* `storageAccountName` - (Required) Specifies the Storage Account in which the Storage Queue should exist. Changing this forces a new resource to be created.

* `metadata` - (Optional) A mapping of MetaData which should be assigned to this Storage Queue.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Storage Queue.

* `resourceManagerId` - The Resource Manager ID of this Storage Queue.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Storage Queue.
* `update` - (Defaults to 30 minutes) Used when updating the Storage Queue.
* `read` - (Defaults to 5 minutes) Used when retrieving the Storage Queue.
* `delete` - (Defaults to 30 minutes) Used when deleting the Storage Queue.

## Import

Storage Queue's can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_storage_queue.queue1 https://example.queue.core.windows.net/queue1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-e9cfff89c8df1aeec8da2da6183cd2512535610315c0f06ca839cf83b47ad90e -->