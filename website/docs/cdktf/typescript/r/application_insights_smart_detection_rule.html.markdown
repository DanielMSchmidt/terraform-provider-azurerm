---
subcategory: "Application Insights"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_application_insights_smart_detection_rule"
description: |-
  Manages an Application Insights Smart Detection Rule.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_application_insights_smart_detection_rule

Manages an Application Insights Smart Detection Rule.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "tf-test",
      }
    );
    const azurermApplicationInsightsExample =
      new azurerm.applicationInsights.ApplicationInsights(this, "example_1", {
        applicationType: "web",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "tf-test-appinsights",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermApplicationInsightsExample.overrideLogicalId("example");
    const azurermApplicationInsightsSmartDetectionRuleExample =
      new azurerm.applicationInsightsSmartDetectionRule.ApplicationInsightsSmartDetectionRule(
        this,
        "example_2",
        {
          applicationInsightsId: cdktf.Token.asString(
            azurermApplicationInsightsExample.id
          ),
          enabled: false,
          name: "Slow server response time",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermApplicationInsightsSmartDetectionRuleExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Application Insights Smart Detection Rule. Valid values include `Slow page load time`, `Slow server response time`, `Long dependency duration`, `Degradation in server response time`, `Degradation in dependency duration`, `Degradation in trace severity ratio`, `Abnormal rise in exception volume`, `Potential memory leak detected`, `Potential security issue detected` and `Abnormal rise in daily data volume`, `Long dependency duration`, `Degradation in server response time`, `Degradation in dependency duration`, `Degradation in trace severity ratio`, `Abnormal rise in exception volume`, `Potential memory leak detected`, `Potential security issue detected`, `Abnormal rise in daily data volume`. Changing this forces a new resource to be created.

* `applicationInsightsId` - (Required) The ID of the Application Insights component on which the Smart Detection Rule operates. Changing this forces a new resource to be created.

* `enabled` - (Optional) Is the Application Insights Smart Detection Rule enabled? Defaults to `true`.

* `sendEmailsToSubscriptionOwners` - (Optional) Do emails get sent to subscription owners? Defaults to `true`.

* `additionalEmailRecipients` - (Optional) Specifies a list of additional recipients that will be sent emails on this Application Insights Smart Detection Rule.

-> **Note:** At least one read or write permission must be defined.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Application Insights Smart Detection Rule.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Application Insights Smart Detection Rule
* `update` - (Defaults to 30 minutes) Used when updating the Application Insights Smart Detection Rule.
* `read` - (Defaults to 5 minutes) Used when retrieving the Application Insights Smart Detection Rule.
* `delete` - (Defaults to 30 minutes) Used when deleting the Application Insights Smart Detection Rule.

## Import

Application Insights Smart Detection Rules can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_application_insights_smart_detection_rule.rule1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Insights/components/mycomponent1/smartDetectionRule/myrule1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-98c37b43a7242c0ae28bdd96a25842e67efa3969db6e4e6dc022fa18c1ea43a6 -->