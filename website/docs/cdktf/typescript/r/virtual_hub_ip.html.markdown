---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_virtual_hub_ip"
description: |-
  Manages a Virtual Hub IP. This resource is also known as a Route Server.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_virtual_hub_ip

Manages a Virtual Hub IP. This resource is also known as a Route Server.

~> **NOTE** Virtual Hub IP only supports Standard Virtual Hub without Virtual Wan.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermVirtualHubExample = new azurerm.virtualHub.VirtualHub(
      this,
      "example_1",
      {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-vhub",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        sku: "Standard",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualHubExample.overrideLogicalId("example");
    const azurermVirtualNetworkExample =
      new azurerm.virtualNetwork.VirtualNetwork(this, "example_2", {
        addressSpace: ["10.5.0.0/16"],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-vnet",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualNetworkExample.overrideLogicalId("example");
    const azurermPublicIpExample = new azurerm.publicIp.PublicIp(
      this,
      "example_3",
      {
        allocationMethod: "Static",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-pip",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        sku: "Standard",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermPublicIpExample.overrideLogicalId("example");
    const azurermSubnetExample = new azurerm.subnet.Subnet(this, "example_4", {
      addressPrefixes: ["10.5.1.0/24"],
      name: "RouteServerSubnet",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      virtualNetworkName: cdktf.Token.asString(
        azurermVirtualNetworkExample.name
      ),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSubnetExample.overrideLogicalId("example");
    const azurermVirtualHubIpExample = new azurerm.virtualHubIp.VirtualHubIp(
      this,
      "example_5",
      {
        name: "example-vhubipconfig",
        privateIpAddress: "10.5.1.18",
        privateIpAllocationMethod: "Static",
        publicIpAddressId: cdktf.Token.asString(azurermPublicIpExample.id),
        subnetId: cdktf.Token.asString(azurermSubnetExample.id),
        virtualHubId: cdktf.Token.asString(azurermVirtualHubExample.id),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualHubIpExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Virtual Hub IP. Changing this forces a new resource to be created.

* `virtualHubId` - (Required) The ID of the Virtual Hub within which this IP configuration should be created. Changing this forces a new resource to be created.

* `subnetId` - (Required) The ID of the Subnet that the IP will reside. Changing this forces a new resource to be created.

* `privateIpAddress` - (Optional) The private IP address of the IP configuration.

* `privateIpAllocationMethod` - (Optional) The private IP address allocation method. Possible values are `static` and `dynamic` is allowed. Defaults to `dynamic`.

* `publicIpAddressId` - (Required) The ID of the Public IP Address. This option is required since September 1st 2021. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Virtual Hub IP.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 60 minutes) Used when creating the Virtual Hub IP.
* `read` - (Defaults to 5 minutes) Used when retrieving the Virtual Hub IP.
* `update` - (Defaults to 60 minutes) Used when updating the Virtual Hub IP.
* `delete` - (Defaults to 60 minutes) Used when deleting the Virtual Hub IP.

## Import

Virtual Hub IPs can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_virtual_hub_ip.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/virtualHubs/virtualHub1/ipConfigurations/ipConfig1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-03278b7baad52d5c4ba404ceda3bb46f81460d2cc7a835ac39f64a89b81f1612 -->