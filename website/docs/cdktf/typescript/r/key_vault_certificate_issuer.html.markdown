---
subcategory: "Key Vault"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_key_vault_certificate_issuer"
description: |-
  Manages a Key Vault Certificate Issuer.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_key_vault_certificate_issuer

Manages a Key Vault Certificate Issuer.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const dataAzurermClientConfigCurrent =
      new azurerm.dataAzurermClientConfig.DataAzurermClientConfig(
        this,
        "current",
        {}
      );
    const azurermKeyVaultExample = new azurerm.keyVault.KeyVault(
      this,
      "example_2",
      {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "examplekeyvault",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        skuName: "standard",
        tenantId: cdktf.Token.asString(dataAzurermClientConfigCurrent.tenantId),
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermKeyVaultExample.overrideLogicalId("example");
    const azurermKeyVaultCertificateIssuerExample =
      new azurerm.keyVaultCertificateIssuer.KeyVaultCertificateIssuer(
        this,
        "example_3",
        {
          accountId: "0000",
          keyVaultId: cdktf.Token.asString(azurermKeyVaultExample.id),
          name: "example-issuer",
          orgId: "ExampleOrgName",
          password: "example-password",
          providerName: "DigiCert",
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermKeyVaultCertificateIssuerExample.overrideLogicalId("example");
  }
}

```

## Arguments Reference

The following arguments are supported:

* `keyVaultId` - (Required) The ID of the Key Vault in which to create the Certificate Issuer. Changing this forces a new resource to be created.

* `name` - (Required) The name which should be used for this Key Vault Certificate Issuer. Changing this forces a new Key Vault Certificate Issuer to be created.

* `providerName` - (Required) The name of the third-party Certificate Issuer. Possible values are: `digiCert`, `globalSign`, `oneCertV2PrivateCa`, `oneCertV2PublicCa` and `sslAdminV2`.

* `orgId` - (Optional) The ID of the organization as provided to the issuer.

* `accountId` - (Optional) The account number with the third-party Certificate Issuer.

* `admin` - (Optional) One or more `admin` blocks as defined below.

* `password` - (Optional) The password associated with the account and organization ID at the third-party Certificate Issuer. If not specified, will not overwrite any previous value.

---

An `admin` block supports the following:

* `emailAddress` - (Required) E-mail address of the admin.

* `firstName` - (Optional) First name of the admin.

* `lastName` - (Optional) Last name of the admin.

* `phone` - (Optional) Phone number of the admin.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Key Vault Certificate Issuer.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `read` - (Defaults to 5 minutes) Used when retrieving the Key Vault Certificate Issuer.
* `create` - (Defaults to 30 minutes) Used when creating the Key Vault Certificate Issuer.
* `update` - (Defaults to 30 minutes) Used when updating the Key Vault Certificate Issuer.
* `delete` - (Defaults to 30 minutes) Used when deleting the Key Vault Certificate Issuer.

## Import

Key Vault Certificate Issuers can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_key_vault_certificate_issuer.example "https://key-vault-name.vault.azure.net/certificates/issuers/example"
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-398c6a38bbe47d3818dbcf32951ef280660b6c2accd2d8ea6ecbf218068cb1b7 -->