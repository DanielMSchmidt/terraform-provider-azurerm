---
subcategory: "Time Series Insights"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_iot_time_series_insights_event_source_iothub"
description: |-
  Manages an Azure IoT Time Series Insights IoTHub Event Source.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_time_series_insights_event_source_iothub

Manages an Azure IoT Time Series Insights IoTHub Event Source.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example",
      }
    );
    const azurermStorageAccountStorage =
      new azurerm.storageAccount.StorageAccount(this, "storage", {
        accountReplicationType: "LRS",
        accountTier: "Standard",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    const azurermIotTimeSeriesInsightsGen2EnvironmentExample =
      new azurerm.iotTimeSeriesInsightsGen2Environment.IotTimeSeriesInsightsGen2Environment(
        this,
        "example_2",
        {
          idProperties: ["id"],
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "example",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
          skuName: "L1",
          storage: {
            key: cdktf.Token.asString(
              azurermStorageAccountStorage.primaryAccessKey
            ),
            name: cdktf.Token.asString(azurermStorageAccountStorage.name),
          },
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermIotTimeSeriesInsightsGen2EnvironmentExample.overrideLogicalId(
      "example"
    );
    const azurermIothubExample = new azurerm.iothub.Iothub(this, "example_3", {
      location: cdktf.Token.asString(azurermResourceGroupExample.location),
      name: "example",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      sku: {
        capacity: cdktf.Token.asNumber("1"),
        name: "B1",
      },
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermIothubExample.overrideLogicalId("example");
    const azurermIothubConsumerGroupExample =
      new azurerm.iothubConsumerGroup.IothubConsumerGroup(this, "example_4", {
        eventhubEndpointName: "events",
        iothubName: cdktf.Token.asString(azurermIothubExample.name),
        name: "example",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermIothubConsumerGroupExample.overrideLogicalId("example");
    const azurermIotTimeSeriesInsightsEventSourceIothubExample =
      new azurerm.iotTimeSeriesInsightsEventSourceIothub.IotTimeSeriesInsightsEventSourceIothub(
        this,
        "example_5",
        {
          consumerGroupName: cdktf.Token.asString(
            azurermIothubConsumerGroupExample.name
          ),
          environmentId: cdktf.Token.asString(
            azurermIotTimeSeriesInsightsGen2EnvironmentExample.id
          ),
          eventSourceResourceId: cdktf.Token.asString(azurermIothubExample.id),
          iothubName: cdktf.Token.asString(azurermIothubExample.name),
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "example",
          sharedAccessKey: cdktf.Token.asString(
            cdktf.propertyAccess(azurermIothubExample.sharedAccessPolicy, [
              "0",
              "primary_key",
            ])
          ),
          sharedAccessKeyName: cdktf.Token.asString(
            cdktf.propertyAccess(azurermIothubExample.sharedAccessPolicy, [
              "0",
              "key_name",
            ])
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermIotTimeSeriesInsightsEventSourceIothubExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Azure IoT Time Series Insights IoTHub Event Source. Changing this forces a new resource to be created. Must be globally unique.

* `environmentId` - (Required) Specifies the id of the IoT Time Series Insights Environment that the Event Source should be associated with. Changing this forces a new resource to created.

* `location` - (Required) Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.

* `iothubName` - (Required) Specifies the name of the IotHub which will be associated with this resource.

* `consumerGroupName` - (Required) Specifies the name of the IotHub Consumer Group that holds the partitions from which events will be read.

* `eventSourceResourceId` - (Required) Specifies the resource id where events will be coming from.

* `sharedAccessKeyName` - (Required) Specifies the name of the Shared Access key that grants the Event Source access to the IotHub.

* `sharedAccessKey` - (Required) Specifies the value of the Shared Access Policy key that grants the Time Series Insights service read access to the IotHub.

* `timestampPropertyName` - (Optional) Specifies the value that will be used as the event source's timestamp. This value defaults to the event creation time.

* `tags` - (Optional) A mapping of tags to assign to the resource.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the IoT Time Series Insights IoTHub Event Source.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the IoT Time Series Insights IoTHub Event Source.
* `update` - (Defaults to 30 minutes) Used when updating the IoT Time Series Insights IoTHub Event Source.
* `read` - (Defaults to 5 minutes) Used when retrieving the IoT Time Series Insights IoTHub Event Source.
* `delete` - (Defaults to 30 minutes) Used when deleting the IoT Time Series Insights IoTHub Event Source.

## Import

Azure IoT Time Series Insights IoTHub Event Source can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_iot_time_series_insights_event_source_iothub.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.TimeSeriesInsights/environments/environment1/eventSources/example
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-ff763cd0ed42ba213f306e6ab410281dcc2d805cc76d002accec199c87c275cb -->