---
subcategory: "Portal"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_portal_dashboard"
description: |-
  Manages a shared dashboard in the Azure Portal.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_portal_dashboard

Manages a shared dashboard in the Azure Portal.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    /*Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
    You can read more about this at https://cdk.tf/variables*/
    const mdContent = new cdktf.TerraformVariable(this, "md_content", {
      default: "# Hello all :)",
      description: "Content for the MD tile",
    });
    const videoLink = new cdktf.TerraformVariable(this, "video_link", {
      default: "https://www.youtube.com/watch?v=......",
      description: "Link to a video",
    });
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "mygroup",
      }
    );
    const dataAzurermSubscriptionCurrent =
      new azurerm.dataAzurermSubscription.DataAzurermSubscription(
        this,
        "current",
        {}
      );
    new azurerm.portalDashboard.PortalDashboard(this, "my-board", {
      dashboardProperties:
        '{\n   "lenses": {\n        "0": {\n            "order": 0,\n            "parts": {\n                "0": {\n                    "position": {\n                        "x": 0,\n                        "y": 0,\n                        "rowSpan": 2,\n                        "colSpan": 3\n                    },\n                    "metadata": {\n                        "inputs": [],\n                        "type": "Extension/HubsExtension/PartType/MarkdownPart",\n                        "settings": {\n                            "content": {\n                                "settings": {\n                                    "content": "${' +
        mdContent.value +
        '}",\n                                    "subtitle": "",\n                                    "title": ""\n                                }\n                            }\n                        }\n                    }\n                },               \n                "1": {\n                    "position": {\n                        "x": 5,\n                        "y": 0,\n                        "rowSpan": 4,\n                        "colSpan": 6\n                    },\n                    "metadata": {\n                        "inputs": [],\n                        "type": "Extension/HubsExtension/PartType/VideoPart",\n                        "settings": {\n                            "content": {\n                                "settings": {\n                                    "title": "Important Information",\n                                    "subtitle": "",\n                                    "src": "${' +
        videoLink.value +
        '}",\n                                    "autoplay": true\n                                }\n                            }\n                        }\n                    }\n                },\n                "2": {\n                    "position": {\n                        "x": 0,\n                        "y": 4,\n                        "rowSpan": 4,\n                        "colSpan": 6\n                    },\n                    "metadata": {\n                        "inputs": [\n                            {\n                                "name": "ComponentId",\n                                "value": "/subscriptions/${' +
        dataAzurermSubscriptionCurrent.subscriptionId +
        '}/resourceGroups/myRG/providers/microsoft.insights/components/myWebApp"\n                            }\n                        ],\n                        "type": "Extension/AppInsightsExtension/PartType/AppMapGalPt",\n                        "settings": {},\n                        "asset": {\n                            "idInputName": "ComponentId",\n                            "type": "ApplicationInsights"\n                        }\n                    }\n                }              \n            }\n        }\n    },\n    "metadata": {\n        "model": {\n            "timeRange": {\n                "value": {\n                    "relative": {\n                        "duration": 24,\n                        "timeUnit": 1\n                    }\n                },\n                "type": "MsPortalFx.Composition.Configuration.ValueTypes.TimeRange"\n            },\n            "filterLocale": {\n                "value": "en-us"\n            },\n            "filters": {\n                "value": {\n                    "MsPortalFx_TimeRange": {\n                        "model": {\n                            "format": "utc",\n                            "granularity": "auto",\n                            "relative": "24h"\n                        },\n                        "displayCache": {\n                            "name": "UTC Time",\n                            "value": "Past 24 hours"\n                        },\n                        "filteredPartIds": [\n                            "StartboardPart-UnboundPart-ae44fef5-76b8-46b0-86f0-2b3f47bad1c7"\n                        ]\n                    }\n                }\n            }\n        }\n    }\n}\n',
      location: cdktf.Token.asString(azurermResourceGroupExample.location),
      name: "my-cool-dashboard",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      tags: {
        source: "terraform",
      },
    });
  }
}

```

It is recommended to follow the steps outlined
[here](https://docs.microsoft.com/azure/azure-portal/azure-portal-dashboards-create-programmatically#fetch-the-json-representation-of-the-dashboard) to create a Dashboard in the Portal and extract the relevant JSON to use in this resource. From the extracted JSON, the contents of the `properties: {}` object can used. Variables can be injected as needed - see above example.

### Using a `templateFile` data source or the `templatefile` function

Since the contents of the dashboard JSON can be quite lengthy, use a template file to improve readability:

`dashTpl`:

```JSON
{
    "lenses": {
         "0": {
             "order": 0,
             "parts": {
                 "0": {
                     "position": {
                         "x": 0,
                         "y": 0,
                         "rowSpan": 2,
                         "colSpan": 3
                     },
                     "metadata": {
                         "inputs": [],
                         "type": "Extension/HubsExtension/PartType/MarkdownPart",
                         "settings": {
                             "content": {
                                 "settings": {
                                     "content": "${md_content}", // <-- note the 'var.' is dropped
                                     "subtitle": "",
                                     "title": ""
                                 }
                             }
                         }
                     }
                 },  
                 ...
                 ...
```

This is then referenced in the `tf` file by using a [`templateFile`](https://www.terraform.io/docs/providers/template/d/file.html) data source (terraform 0.11 or earlier), or the [`templatefile`](https://www.terraform.io/docs/configuration/functions/templatefile.html) function (terraform 0.12+).

`mainTf` (terraform 0.11 or earlier):

```hcl
data "template_file" "dash-template" {
  template = "${file("${path.module}/dash.tpl")}"
  vars = {
    md_content = "Variable content here!"
    video_link = "https://www.youtube.com/watch?v=......"
    sub_id     = data.azurerm_subscription.current.subscription_id
  }
}

#...

resource "azurerm_dashboard" "my-board" {
  name                = "my-cool-dashboard"
  resource_group_name = azurerm_resource_group.example.name
  location            = azurerm_resource_group.example.location
  tags = {
    source = "terraform"
  }
  dashboard_properties = data.template_file.dash-template.rendered
}

```

`mainTf` (terraform 0.12+)

```hcl
resource "azurerm_dashboard" "my-board" {
  name                = "my-cool-dashboard"
  resource_group_name = azurerm_resource_group.example.name
  location            = azurerm_resource_group.example.location
  tags = {
    source = "terraform"
  }
  dashboard_properties = templatefile("dash.tpl",
    {
      md_content = "Variable content here!",
      video_link = "https://www.youtube.com/watch?v=......",
      sub_id     = data.azurerm_subscription.current.subscription_id
  })
}
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Shared Dashboard. Changing this forces a new resource to be created.

-> **Note**: You can specify a tag with the key `hiddenTitle` to set a more user-friendly title for this Dashboard.  

* `resourceGroupName` - (Required) The name of the resource group in which to create the dashboard. Changing this forces a new resource to be created.

* `location` - (Required) Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.

* `dashboardProperties` - (Required) JSON data representing dashboard body. See above for details on how to obtain this from the Portal.

* `tags` - (Optional) A mapping of tags to assign to the resource.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Dashboard.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Dashboard.
* `update` - (Defaults to 30 minutes) Used when updating the Dashboard.
* `read` - (Defaults to 5 minutes) Used when retrieving the Dashboard.
* `delete` - (Defaults to 30 minutes) Used when deleting the Dashboard.

## Import

Dashboards can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_portal_dashboard.my-board /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/rg1/providers/Microsoft.Portal/dashboards/00000000-0000-0000-0000-000000000000
```

Note the URI in the above sample can be found using the Resource Explorer tool in the Azure Portal.

<!-- cache-key: cdktf-0.17.0-pre.15 input-894e3dc53dd3ff3c099fee0b92feda5bd34f403ec600ecc4a7dac5149f425838 -->