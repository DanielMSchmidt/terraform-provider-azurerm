---
subcategory: "Automation"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_automation_dsc_nodeconfiguration"
description: |-
  Manages a Automation DSC Node Configuration.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_automation_dsc_nodeconfiguration

Manages a Automation DSC Node Configuration.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermAutomationAccountExample =
      new azurerm.automationAccount.AutomationAccount(this, "example_1", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "account1",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        skuName: "Basic",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermAutomationAccountExample.overrideLogicalId("example");
    const azurermAutomationDscConfigurationExample =
      new azurerm.automationDscConfiguration.AutomationDscConfiguration(
        this,
        "example_2",
        {
          automationAccountName: cdktf.Token.asString(
            azurermAutomationAccountExample.name
          ),
          contentEmbedded: "configuration test {}",
          location: cdktf.Token.asString(azurermResourceGroupExample.location),
          name: "test",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermAutomationDscConfigurationExample.overrideLogicalId("example");
    const azurermAutomationDscNodeconfigurationExample =
      new azurerm.automationDscNodeconfiguration.AutomationDscNodeconfiguration(
        this,
        "example_3",
        {
          automationAccountName: cdktf.Token.asString(
            azurermAutomationAccountExample.name
          ),
          contentEmbedded:
            'instance of MSFT_FileDirectoryConfiguration as $MSFT_FileDirectoryConfiguration1ref\n{\n  ResourceID = "[File]bla";\n  Ensure = "Present";\n  Contents = "bogus Content";\n  DestinationPath = "c:\\\\bogus.txt";\n  ModuleName = "PSDesiredStateConfiguration";\n  SourceInfo = "::3::9::file";\n  ModuleVersion = "1.0";\n  ConfigurationName = "bla";\n};\ninstance of OMI_ConfigurationDocument\n{\n  Version="2.0.0";\n  MinimumCompatibleVersion = "1.0.0";\n  CompatibleVersionAdditionalProperties= {"Omi_BaseResource:ConfigurationName"};\n  Author="bogusAuthor";\n  GenerationDate="06/15/2018 14:06:24";\n  GenerationHost="bogusComputer";\n  Name="test";\n};\n',
          dependsOn: [azurermAutomationDscConfigurationExample],
          name: "test.localhost",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermAutomationDscNodeconfigurationExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the DSC Node Configuration. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the resource group in which the DSC Node Configuration is created. Changing this forces a new resource to be created.

* `automationAccountName` - (Required) The name of the automation account in which the DSC Node Configuration is created. Changing this forces a new resource to be created.

* `contentEmbedded` - (Required) The PowerShell DSC Node Configuration (mof content).

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The DSC Node Configuration ID.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Automation DSC Node Configuration.
* `update` - (Defaults to 30 minutes) Used when updating the Automation DSC Node Configuration.
* `read` - (Defaults to 5 minutes) Used when retrieving the Automation DSC Node Configuration.
* `delete` - (Defaults to 30 minutes) Used when deleting the Automation DSC Node Configuration.

## Import

Automation DSC Node Configuration's can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_automation_dsc_nodeconfiguration.configuration1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1/nodeConfigurations/configuration1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-bfb000ddad10fef529327aa24d194b610313a761788d0a665f730e30e6840565 -->