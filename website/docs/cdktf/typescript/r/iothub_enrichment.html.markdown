---
subcategory: "Messaging"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_iothub_enrichment"
description: |-
  Manages an IotHub Enrichment
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_iothub_enrichment

Manages an IotHub Enrichment

~> **NOTE:** Enrichment can be defined either directly on the `azurermIothub` resource, or using the `azurermIothubEnrichment` resources - but the two cannot be used together. If both are used against the same IoTHub, spurious changes will occur.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermStorageAccountExample =
      new azurerm.storageAccount.StorageAccount(this, "example_1", {
        accountReplicationType: "LRS",
        accountTier: "Standard",
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "examplestorageaccount",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageAccountExample.overrideLogicalId("example");
    const azurermStorageContainerExample =
      new azurerm.storageContainer.StorageContainer(this, "example_2", {
        containerAccessType: "private",
        name: "example",
        storageAccountName: cdktf.Token.asString(
          azurermStorageAccountExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermStorageContainerExample.overrideLogicalId("example");
    const azurermIothubExample = new azurerm.iothub.Iothub(this, "example_3", {
      location: cdktf.Token.asString(azurermResourceGroupExample.location),
      name: "exampleIothub",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      sku: {
        capacity: cdktf.Token.asNumber("1"),
        name: "S1",
      },
      tags: {
        purpose: "testing",
      },
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermIothubExample.overrideLogicalId("example");
    const azurermIothubEndpointStorageContainerExample =
      new azurerm.iothubEndpointStorageContainer.IothubEndpointStorageContainer(
        this,
        "example_4",
        {
          batchFrequencyInSeconds: 60,
          connectionString: cdktf.Token.asString(
            azurermStorageAccountExample.primaryBlobConnectionString
          ),
          containerName: cdktf.Token.asString(
            azurermStorageContainerExample.name
          ),
          encoding: "Avro",
          fileNameFormat: "{iothub}/{partition}_{YYYY}_{MM}_{DD}_{HH}_{mm}",
          iothubId: cdktf.Token.asString(azurermIothubExample.id),
          maxChunkSizeInBytes: 10485760,
          name: "example",
          resourceGroupName: cdktf.Token.asString(
            azurermResourceGroupExample.name
          ),
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermIothubEndpointStorageContainerExample.overrideLogicalId("example");
    const azurermIothubEnrichmentExample =
      new azurerm.iothubEnrichment.IothubEnrichmentA(this, "example_5", {
        endpointNames: [
          cdktf.Token.asString(
            azurermIothubEndpointStorageContainerExample.name
          ),
        ],
        iothubName: cdktf.Token.asString(azurermIothubExample.name),
        key: "example",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        value: "my value",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermIothubEnrichmentExample.overrideLogicalId("example");
    const azurermIothubRouteExample = new azurerm.iothubRoute.IothubRouteA(
      this,
      "example_6",
      {
        condition: "true",
        enabled: true,
        endpointNames: [
          cdktf.Token.asString(
            azurermIothubEndpointStorageContainerExample.name
          ),
        ],
        iothubName: cdktf.Token.asString(azurermIothubExample.name),
        name: "example",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        source: "DeviceMessages",
      }
    );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermIothubRouteExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `iothubName` - (Required) The IoTHub name of the enrichment. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the resource group under which the IoTHub resource is created. Changing this forces a new resource to be created.

* `key` - (Required) The key of the enrichment. Changing this forces a new resource to be created.

* `value` - (Required) The value of the enrichment. Value can be any static string, the name of the IoT hub sending the message (use `$iothubname`) or information from the device twin (ex: `$twinTagsLatitude`)

* `endpointNames` - (Required) The list of endpoints which will be enriched.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the IoTHub Enrichment.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the IotHub Enrichment.
* `update` - (Defaults to 30 minutes) Used when updating the IotHub Enrichment.
* `read` - (Defaults to 5 minutes) Used when retrieving the IotHub Enrichment.
* `delete` - (Defaults to 30 minutes) Used when deleting the IotHub Enrichment.

## Import

IoTHub Enrichment can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_iothub_enrichment.enrichment1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Devices/iotHubs/hub1/enrichments/enrichment1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-befd282faa1f5b3bdf006e355001eccbbe525dbd954ac8f58803e450a50fde4d -->