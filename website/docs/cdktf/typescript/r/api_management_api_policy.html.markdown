---
subcategory: "API Management"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_api_management_api_policy"
description: |-
  Manages an API Management API Policy
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_api_management_api_policy

Manages an API Management API Policy

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const dataAzurermApiManagementApiExample =
      new azurerm.dataAzurermApiManagementApi.DataAzurermApiManagementApi(
        this,
        "example",
        {
          apiManagementName: "example-apim",
          name: "my-api",
          resourceGroupName: "search-service",
          revision: "2",
        }
      );
    const azurermApiManagementApiPolicyExample =
      new azurerm.apiManagementApiPolicy.ApiManagementApiPolicy(
        this,
        "example_1",
        {
          apiManagementName: cdktf.Token.asString(
            dataAzurermApiManagementApiExample.apiManagementName
          ),
          apiName: cdktf.Token.asString(
            dataAzurermApiManagementApiExample.name
          ),
          resourceGroupName: cdktf.Token.asString(
            dataAzurermApiManagementApiExample.resourceGroupName
          ),
          xmlContent:
            '<policies>\n  <inbound>\n    <find-and-replace from="xyz" to="abc" />\n  </inbound>\n</policies>\n',
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermApiManagementApiPolicyExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `apiName` - (Required) The ID of the API Management API within the API Management Service. Changing this forces a new resource to be created.

* `apiManagementName` - (Required) The name of the API Management Service. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.

* `xmlContent` - (Optional) The XML Content for this Policy as a string. An XML file can be used here with Terraform's [file function](https://www.terraform.io/docs/configuration/functions/file.html) that is similar to Microsoft's `policyFilePath` option.

* `xmlLink` - (Optional) A link to a Policy XML Document, which must be publicly available.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the API Management API Policy.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the API Management API Policy.
* `update` - (Defaults to 30 minutes) Used when updating the API Management API Policy.
* `read` - (Defaults to 5 minutes) Used when retrieving the API Management API Policy.
* `delete` - (Defaults to 30 minutes) Used when deleting the API Management API Policy.

## Import

API Management API Policy can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_api_management_api_policy.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ApiManagement/service/service1/apis/exampleId/policies/policy
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-0befedbba7087b0c58372c6c7f793b352f27332438a2869b3bbd7d4982571be7 -->