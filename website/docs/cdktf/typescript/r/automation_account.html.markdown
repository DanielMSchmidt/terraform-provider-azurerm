---
subcategory: "Automation"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_automation_account"
description: |-
  Manages a Automation Account.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_automation_account

Manages a Automation Account.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermAutomationAccountExample =
      new azurerm.automationAccount.AutomationAccount(this, "example_1", {
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-account",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        skuName: "Basic",
        tags: {
          environment: "development",
        },
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermAutomationAccountExample.overrideLogicalId("example");
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Automation Account. Changing this forces a new resource to be created.

* `resourceGroupName` - (Required) The name of the resource group in which the Automation Account is created. Changing this forces a new resource to be created.

* `location` - (Required) Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.

* `skuName` - (Required) The SKU of the account. Possible values are `basic` and `free`.

---

* `localAuthenticationEnabled` - (Optional) Whether requests using non-AAD authentication are blocked. Defaults to `true`.

* `publicNetworkAccessEnabled` - (Optional) Whether public network access is allowed for the automation account. Defaults to `true`.

---

An `encryption` block supports the following:

* `keyVaultKeyId` - (Required) The ID of the Key Vault Key which should be used to Encrypt the data in this Automation Account.

* `userAssignedIdentityId` - (Optional) The User Assigned Managed Identity ID to be used for accessing the Customer Managed Key for encryption.

---

* `identity` - (Optional) An `identity` block as defined below.

* `tags` - (Optional) A mapping of tags to assign to the resource.

* `encryption` - (Optional) An `encryption` block as defined below.

---

An `identity` block supports the following:

* `type` - (Required) The type of identity used for this Automation Account. Possible values are `systemAssigned`, `userAssigned` and `SystemAssigned, UserAssigned`.

* `identityIds` - (Optional) The ID of the User Assigned Identity which should be assigned to this Automation Account.

-> **Note:** `identityIds` is required when `type` is set to `userAssigned` or `SystemAssigned, UserAssigned`.

---

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Automation Account.

* `identity` - An `identity` block as defined below.

* `dscServerEndpoint` - The DSC Server Endpoint associated with this Automation Account.

* `dscPrimaryAccessKey` - The Primary Access Key for the DSC Endpoint associated with this Automation Account.

* `dscSecondaryAccessKey` - The Secondary Access Key for the DSC Endpoint associated with this Automation Account.

* `hybridServiceUrl` - The URL of automation hybrid service which is used for hybrid worker on-boarding With this Automation Account.

---

An `identity` block exports the following:

* `principalId` - The Principal ID associated with this Managed Service Identity.

* `tenantId` - The Tenant ID associated with this Managed Service Identity.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Automation Account.
* `update` - (Defaults to 30 minutes) Used when updating the Automation Account.
* `read` - (Defaults to 5 minutes) Used when retrieving the Automation Account.
* `delete` - (Defaults to 30 minutes) Used when deleting the Automation Account.

## Import

Automation Accounts can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_automation_account.account1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Automation/automationAccounts/account1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-e162620b05b2ee2bd9583e40ae75421f074effea73188f0333902083b5f5126b -->