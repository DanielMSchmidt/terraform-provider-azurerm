---
subcategory: "Messaging"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_servicebus_namespace_network_rule_set"
description: |-
  Manages a ServiceBus Namespace Network Rule Set.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_servicebus_namespace_network_rule_set

Manages a ServiceBus Namespace Network Rule Set.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new azurerm.provider.AzurermProvider(this, "azurerm", {
      features: {},
    });
    const azurermResourceGroupExample = new azurerm.resourceGroup.ResourceGroup(
      this,
      "example",
      {
        location: "West Europe",
        name: "example-resources",
      }
    );
    const azurermServicebusNamespaceExample =
      new azurerm.servicebusNamespace.ServicebusNamespace(this, "example_2", {
        capacity: 1,
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-sb-namespace",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
        sku: "Premium",
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermServicebusNamespaceExample.overrideLogicalId("example");
    const azurermVirtualNetworkExample =
      new azurerm.virtualNetwork.VirtualNetwork(this, "example_3", {
        addressSpace: ["172.17.0.0/16"],
        dnsServers: ["10.0.0.4", "10.0.0.5"],
        location: cdktf.Token.asString(azurermResourceGroupExample.location),
        name: "example-vnet",
        resourceGroupName: cdktf.Token.asString(
          azurermResourceGroupExample.name
        ),
      });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermVirtualNetworkExample.overrideLogicalId("example");
    const azurermSubnetExample = new azurerm.subnet.Subnet(this, "example_4", {
      addressPrefixes: ["172.17.0.0/24"],
      name: "default",
      resourceGroupName: cdktf.Token.asString(azurermResourceGroupExample.name),
      serviceEndpoints: ["Microsoft.ServiceBus"],
      virtualNetworkName: cdktf.Token.asString(
        azurermVirtualNetworkExample.name
      ),
    });
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermSubnetExample.overrideLogicalId("example");
    const azurermServicebusNamespaceNetworkRuleSetExample =
      new azurerm.servicebusNamespaceNetworkRuleSet.ServicebusNamespaceNetworkRuleSet(
        this,
        "example_5",
        {
          defaultAction: "Deny",
          ipRules: ["1.1.1.1"],
          namespaceId: cdktf.Token.asString(
            azurermServicebusNamespaceExample.id
          ),
          networkRules: [
            {
              ignoreMissingVnetServiceEndpoint: false,
              subnetId: cdktf.Token.asString(azurermSubnetExample.id),
            },
          ],
          publicNetworkAccessEnabled: true,
        }
      );
    /*This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.*/
    azurermServicebusNamespaceNetworkRuleSetExample.overrideLogicalId(
      "example"
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `namespaceId` - (Required) Specifies the ServiceBus Namespace ID to which to attach the ServiceBus Namespace Network Rule Set. Changing this forces a new resource to be created.

~> **NOTE:** The ServiceBus Namespace must be `premium` in order to attach a ServiceBus Namespace Network Rule Set.

* `defaultAction` - (Optional) Specifies the default action for the ServiceBus Namespace Network Rule Set. Possible values are `allow` and `deny`. Defaults to `deny`.

* `publicNetworkAccessEnabled` - (Optional) Whether to allow traffic over public network. Possible values are `true` and `false`. Defaults to `true`.

* `trustedServicesAllowed` - (Optional) If True, then Azure Services that are known and trusted for this resource type are allowed to bypass firewall configuration. See [Trusted Microsoft Services](https://github.com/MicrosoftDocs/azure-docs/blob/master/articles/service-bus-messaging/includes/service-bus-trusted-services.md) 

* `ipRules` - (Optional) One or more IP Addresses, or CIDR Blocks which should be able to access the ServiceBus Namespace.

* `networkRules` - (Optional) One or more `networkRules` blocks as defined below.

---

A `networkRules` block supports the following:

* `subnetId` - (Required) The Subnet ID which should be able to access this ServiceBus Namespace.

* `ignoreMissingVnetServiceEndpoint` - (Optional) Should the ServiceBus Namespace Network Rule Set ignore missing Virtual Network Service Endpoint option in the Subnet? Defaults to `false`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the ServiceBus Namespace Network Rule Set.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the ServiceBus Namespace Network Rule Set.
* `update` - (Defaults to 30 minutes) Used when updating the ServiceBus Namespace Network Rule Set.
* `read` - (Defaults to 5 minutes) Used when retrieving the ServiceBus Namespace Network Rule Set.
* `delete` - (Defaults to 30 minutes) Used when deleting the ServiceBus Namespace Network Rule Set.

## Import

Service Bus Namespace can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_servicebus_namespace_network_rule_set.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ServiceBus/namespaces/sbns1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-2d5caead791a3cfbbeed692c117906d402ccf60c45c9b1c2822d5a025ff6e87c -->