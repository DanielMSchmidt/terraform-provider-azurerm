---
subcategory: "Storage"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_storage_container"
description: |-
  Gets information about an existing Storage Container.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: azurerm_storage_container

Use this data source to access information about an existing Storage Container.

## Example Usage

```typescript
import * as constructs from "constructs";
import * as cdktf from "cdktf";
/*Provider bindings are generated by running cdktf get.
See https://cdk.tf/provider-generation for more details.*/
import * as azurerm from "./.gen/providers/azurerm";
class MyConvertedCode extends cdktf.TerraformStack {
  constructor(scope: constructs.Construct, name: string) {
    super(scope, name);
    new azurerm.dataAzurermStorageContainer.DataAzurermStorageContainer(
      this,
      "example",
      {
        name: "example-container-name",
        storageAccountName: "example-storage-account-name",
      }
    );
  }
}

```

## Argument Reference

The following arguments are supported:

* `name` - The name of the Container.

* `storageAccountName` - The name of the Storage Account where the Container exists.

## Attributes Reference

* `containerAccessType` - The Access Level configured for this Container.

* `hasImmutabilityPolicy` - Is there an Immutability Policy configured on this Storage Container?

* `hasLegalHold` - Is there a Legal Hold configured on this Storage Container?

* `metadata`  - A mapping of MetaData for this Container.

* `resourceManagerId` - The Resource Manager ID of this Storage Container.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `read` - (Defaults to 5 minutes) Used when retrieving the Storage Container.

<!-- cache-key: cdktf-0.17.0-pre.15 input-a14ac476caa803a3c1c28b06f02624e4807c10884af865bed71c309783eb00c0 -->