---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_express_route_circuit"
description: |-
  Gets information about an existing ExpressRoute circuit.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: azurerm_express_route_circuit

Use this data source to access information about an existing ExpressRoute circuit.

## Example Usage

```hcl
data "azurerm_express_route_circuit" "example" {
  resource_group_name = azurerm_resource_group.example.name
  name                = azurerm_express_route_circuit.example.name
}

output "express_route_circuit_id" {
  value = data.azurerm_express_route_circuit.example.id
}

output "service_key" {
  value = data.azurerm_express_route_circuit.example.service_key
}
```

## Argument Reference

* `name` - The name of the ExpressRoute circuit.
* `resourceGroupName` - The Name of the Resource Group where the ExpressRoute circuit exists.

## Attributes Reference

* `id` - The ID of the ExpressRoute circuit.

* `location` - The Azure location where the ExpressRoute circuit exists

* `peerings` - A `peerings` block for the ExpressRoute circuit as documented below

* `serviceProviderProvisioningState` - The ExpressRoute circuit provisioning state from your chosen service provider. Possible values are `notProvisioned`, `provisioning`, `provisioned`, and `deprovisioning`.

* `serviceKey` - The string needed by the service provider to provision the ExpressRoute circuit.

* `serviceProviderProperties` - A `serviceProviderProperties` block for the ExpressRoute circuit as documented below

* `sku` - A `sku` block for the ExpressRoute circuit as documented below.

---

`serviceProviderProperties` supports the following:

* `serviceProviderName` - The name of the ExpressRoute Service Provider.
* `peeringLocation` - The name of the peering location and **not** the Azure resource location.
* `bandwidthInMbps` - The bandwidth in Mbps of the ExpressRoute circuit.

`peerings` supports the following:

* `peeringType` - The type of the ExpressRoute Circuit Peering. Acceptable values include `azurePrivatePeering`, `azurePublicPeering` and `microsoftPeering`. Changing this forces a new resource to be created.

~> **Note:** only one Peering of each Type can be created per ExpressRoute circuit.

* `primaryPeerAddressPrefix` - A `/30` subnet for the primary link.
* `secondaryPeerAddressPrefix` - A `/30` subnet for the secondary link.
* `vlanId` - A valid VLAN ID to establish this peering on.
* `sharedKey` - The shared key. Can be a maximum of 25 characters.
* `azureAsn` - The Either a 16-bit or a 32-bit ASN for Azure.
* `peerAsn` - The Either a 16-bit or a 32-bit ASN. Can either be public or private.

`sku` supports the following:

* `tier` - The service tier. Possible values are `basic`, `local`, `standard` or `premium`.
* `family` - The billing mode for bandwidth. Possible values are `meteredData` or `unlimitedData`.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `read` - (Defaults to 5 minutes) Used when retrieving the ExpressRoute circuit.

<!-- cache-key: cdktf-0.17.0-pre.15 input-24ceb6f1355e3bba9a397a3e418a87c25f377f6cacad7a3eb299a8f7f8401338 -->