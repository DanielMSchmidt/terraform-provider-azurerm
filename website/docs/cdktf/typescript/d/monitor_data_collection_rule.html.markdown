---
subcategory: "Monitor"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_monitor_data_collection_rule"
description: |-
  Get information about the specified Data Collection Rule.

---


<!-- Please do not edit this file, it is generated. -->
# Data Source: azurerm_monitor_data_collection_rule

Use this data source to access information about an existing Data Collection Rule.

## Example Usage

```hcl
data "azurerm_monitor_data_collection_rule" "example" {
  name                = "example-rule"
  resource_group_name = azurerm_resource_group.example.name
}

output "rule_id" {
  value = data.azurerm_monitor_data_collection_rule.example.id
}
```

## Argument Reference

* `name` - Specifies the name of the Data Collection Rule.

* `resourceGroupName` - Specifies the name of the resource group the Data Collection Rule is located in.

## Attributes Reference

* `id` - The ID of the Resource.

* `dataCollectionEndpointId` - The resource ID of the Data Collection Endpoint that this rule can be used with.

* `dataFlow` - One or more `dataFlow` blocks as defined below.

* `destinations` - A `destinations` block as defined below.

* `location` - The Azure Region where the Data Collection Rule should exist. Changing this forces a new Data Collection Rule to be created.

* `dataSources` - A `dataSources` block as defined below. This property is optional and can be omitted if the rule is meant to be used via direct calls to the provisioned endpoint.

* `description` - The description of the Data Collection Rule.

* `identity` - An `identity` block as defined below.

* `kind` - The kind of the Data Collection Rule. Possible values are `linux`, `windows`,and `agentDirectToStore`. A rule of kind `linux` does not allow for `windowsEventLog` data sources. And a rule of kind `windows` does not allow for `syslog` data sources. If kind is not specified, all kinds of data sources are allowed.

* `streamDeclaration` - A `streamDeclaration` block as defined below.
 
* `tags` - A mapping of tags which should be assigned to the Data Collection Rule.

---

A `azureMonitorMetrics` block exports the following:

* `name` - The name which should be used for this destination. This name should be unique across all destinations regardless of type within the Data Collection Rule.

---

A `column` block exports the following:

* `name` - The name of the column.

* `type` - The type of the column data. Possible values are `string`, `int`, `long`, `real`, `boolean`, `datetime`,and `dynamic`.

---

A `dataImport` block exports the following:

* `eventHubDataSource` - An `eventHubDataSource` block as defined below.

---

A `dataFlow` block exports the following:

* `destinations` - Specifies a list of destination names. A `azureMonitorMetrics` data source only allows for stream of kind `microsoftInsightsMetrics`.

* `streams` - Specifies a list of streams. Possible values include but not limited to `microsoftEvent`, `microsoftInsightsMetrics`, `microsoftPerf`, `microsoftSyslog`,and `microsoftWindowsEvent`.

* `builtInTransform` - The built-in transform to transform stream data.

* `outputStream` - The output stream of the transform. Only required if the data flow changes data to a different stream.

* `transformKql` - The KQL query to transform stream data.

---

A `dataSources` block exports the following:

* `dataImport` - A `dataImport` block as defined above.

* `extension` - One or more `extension` blocks as defined below.

* `iisLog` - One or more `iisLog` blocks as defined below.

* `logFile` - One or more `logFile` blocks as defined below.

* `performanceCounter` - One or more `performanceCounter` blocks as defined below.

* `platformTelemetry` - One or more `platformTelemetry` blocks as defined below.

* `prometheusForwarder` - One or more `prometheusForwarder` blocks as defined below.

* `syslog` - One or more `syslog` blocks as defined below.

* `windowsEventLog` - One or more `windowsEventLog` blocks as defined below.

* `windowsFirewallLog` - One or more `windowsFirewallLog` blocks as defined below.
 
---

A `destinations` block exports the following:

* `azureMonitorMetrics` - A `azureMonitorMetrics` block as defined above.

* `eventHub` - One or more `eventHub` blocks as defined below.

* `eventHubDirect` - One or more `eventHubDirect` blocks as defined below.

* `logAnalytics` - One or more `logAnalytics` blocks as defined below.

* `monitorAccount` - One or more `monitorAccount` blocks as defined below.

* `storageBlob` - One or more `storageBlob` blocks as defined below.

* `storageBlobDirect` - One or more `storageBlobDirect` blocks as defined below.

* `storageTableDirect` - One or more `storageTableDirect` blocks as defined below.

---

An `eventHubDataSource` block exports the following:

* `name` - The name which should be used for this data source. This name should be unique across all data sources regardless of type within the Data Collection Rule.

* `stream` - The stream to collect from Event Hub. Possible value should be a custom stream name.

* `consumerGroup` - The Event Hub consumer group name.

---

An `eventHub` block exports the following:

* `eventHubId` - The resource ID of the Event Hub.

* `name` - The name which should be used for this destination. This name should be unique across all destinations regardless of type within the Data Collection Rule.

---

An `eventHubDirect` block exports the following:

* `eventHubId` - The resource ID of the Event Hub.

* `name` - The name which should be used for this destination. This name should be unique across all destinations regardless of type within the Data Collection Rule.

---

A `extension` block exports the following:

* `extensionName` - The name of the VM extension.

* `name` - The name which should be used for this data source. This name should be unique across all data sources regardless of type within the Data Collection Rule.

* `streams` - Specifies a list of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to. Possible values include but not limited to `microsoftEvent`, `microsoftInsightsMetrics`, `microsoftPerf`, `microsoftSyslog`,and `microsoftWindowsEvent`.

* `extensionJson` - A JSON String which specifies the extension setting.

* `inputDataSources` - Specifies a list of data sources this extension needs data from. An item should be a name of a supported data source which produces only one stream. Supported data sources type: `performanceCounter`, `windowsEventLog`,and `syslog`.

---

An `iisLog` block exports the following:

* `name` - The name which should be used for this data source. This name should be unique across all data sources regardless of type within the Data Collection Rule.

* `streams` - Specifies a list of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to. Possible value is `microsoftW3CiisLog`.

* `logDirectories` - Specifies a list of absolute paths where the log files are located.

---

An `identity` block exports the following:

* `type` - cSpecifies the type of Managed Service Identity that should be configured on this Data Collection Rule. Possible values are `systemAssigned` and `userAssigned`.

* `identityIds` - A list of User Assigned Managed Identity IDs to be assigned to this Data Collection Rule. Currently, up to 1 identity is supported.

* `principalId` - The Principal ID associated with this Managed Service Identity.

* `tenantId` - The Tenant ID associated with this Managed Service Identity.

---

A `labelIncludeFilter` block exports the following:

* `label` - The label of the filter. This label should be unique across all `labelIncludeFileter` block. Possible value is `microsoftMetricsIncludeLabel`.

* `value` - The value of the filter.

---

An `logFile` block exports the following:

* `name` - The name which should be used for this data source. This name should be unique across all data sources regardless of type within the Data Collection Rule.

* `streams` - Specifies a list of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to. Possible value should be custom stream names.

* `filePatterns` - Specifies a list of file patterns where the log files are located. For example, `c:\\javaLogs\\*Log`.

* `format` - The data format of the log files. possible value is `text`.

* `settings` - A `settings` block as defined below.

---

A `monitorAccount` block exports the following:

* `monitorAccountId` - The resource ID of the Monitor Account.

* `name` - The name which should be used for this destination. This name should be unique across all destinations regardless of type within the Data Collection Rule.

---
A `logAnalytics` block exports the following:

* `name` - The name which should be used for this destination. This name should be unique across all destinations regardless of type within the Data Collection Rule.

* `workspaceResourceId` - The ID of a Log Analytic Workspace resource.

---

A `performanceCounter` block exports the following:

* `counterSpecifiers` - Specifies a list of specifier names of the performance counters you want to collect. Use a wildcard `*` to collect counters for all instances. To get a list of performance counters on Windows, run the command `typeperf`.

* `name` - The name which should be used for this data source. This name should be unique across all data sources regardless of type within the Data Collection Rule.

* `samplingFrequencyInSeconds` - The number of seconds between consecutive counter measurements (samples). The value should be integer between `1` and `300` inclusive.

* `streams` - Specifies a list of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to. Possible values include but not limited to `microsoftInsightsMetrics`,and `microsoftPerf`.

---

A `platformTelemetry` block exports the following:

* `name` - The name which should be used for this data source. This name should be unique across all data sources regardless of type within the Data Collection Rule.

* `streams` - Specifies a list of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to. Possible values include but not limited to `microsoftCache/redis:metricsGroupAll`.

---

A `prometheusForwarder` block exports the following:

* `name` - The name which should be used for this data source. This name should be unique across all data sources regardless of type within the Data Collection Rule.

* `streams` - Specifies a list of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to. Possible value is `microsoftPrometheusMetrics`.

* `labelIncludeFilter` - One or more `labelIncludeFilter` blocks as defined above.

---

A `settings` block within the `logFile` block exports the following:

* `text` - A `text` block as defined below.

---

A `storageBlob` block exports the following:

* `containerName` - The Storage Container name.

* `name` - The name which should be used for this destination. This name should be unique across all destinations regardless of type within the Data Collection Rule.

* `storageAccountId` - The resource ID of the Storage Account.

---

A `storageBlobDirect` block exports the following:

* `containerName` - The Storage Container name.

* `name` - The name which should be used for this destination. This name should be unique across all destinations regardless of type within the Data Collection Rule.

* `storageAccountId` - The resource ID of the Storage Account.

---

A `storageTableDirect` block exports the following:

* `tableName` - The Storage Table name.

* `name` - The name which should be used for this destination. This name should be unique across all destinations regardless of type within the Data Collection Rule.

* `storageAccountId` - The resource ID of the Storage Account.

---

A `streamDeclaration` block exports the following:

* `streamName` - The name of the custom stream. This name should be unique across all `streamDeclaration` blocks.

* `column` - One or more `column` blocks as defined above.

---

A `syslog` block exports the following:

* `facilityNames` - Specifies a list of facility names. Use a wildcard `*` to collect logs for all facility names. Possible values are `auth`, `authpriv`, `cron`, `daemon`, `kern`, `lpr`, `mail`, `mark`, `news`, `syslog`, `user`, `uucp`, `local0`, `local1`, `local2`, `local3`, `local4`, `local5`, `local6`, `local7`,and `*`.

* `logLevels` - Specifies a list of log levels. Use a wildcard `*` to collect logs for all log levels. Possible values are `debug`,  `info`, `notice`, `warning`, `error`, `critical`, `alert`, `emergency`,and `*`.

* `name` - The name which should be used for this data source. This name should be unique across all data sources regardless of type within the Data Collection Rule.

* `streams` - Specifies a list of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to. Possible values include but not limited to `microsoftSyslog`,and `microsoftCiscoAsa`, and `microsoftCommonSecurityLog`.

---

A `text` block within the `logFileSettings` block exports the following:

* `recordStartTimestampFormat` - The timestamp format of the text log files. Possible values are `ISO 8601`, `YYYY-MM-DD HH:MM:SS`, `M/D/YYYY HH:MM:SS AM/PM`, `Mon DD, YYYY HH:MM:SS`, `yyMMdd HH:mm:ss`, `ddMMyy HH:mm:ss`, `MMM d hh:mm:ss`, `dd/MMM/yyyy:HH:mm:ss zzz`,and `yyyyMmDdThh:mm:ssK`.

---

A `windowsEventLog` block exports the following:

* `name` - The name which should be used for this data source. This name should be unique across all data sources regardless of type within the Data Collection Rule.

* `streams` - Specifies a list of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to. Possible values include but not limited to `microsoftEvent`,and `microsoftWindowsEvent`, `microsoftRomeDetectionEvent`, and `microsoftSecurityEvent`.

* `xPathQueries` - Specifies a list of Windows Event Log queries in XPath expression.

---

A `windowsFirewallLog` block exports the following:

* `name` - The name which should be used for this data source. This name should be unique across all data sources regardless of type within the Data Collection Rule.

* `streams` - Specifies a list of streams that this data source will be sent to. A stream indicates what schema will be used for this data and usually what table in Log Analytics the data will be sent to.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `read` - (Defaults to 5 minutes) Used when retrieving the Data Collection Rule.

<!-- cache-key: cdktf-0.17.0-pre.15 input-07b13ca71c87976a8d02f4bba6aaaa8f98645db5c55af61df5b6ec994703cd01 -->