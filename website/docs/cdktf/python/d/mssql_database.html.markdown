---
subcategory: "Database"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_mssql_database"
description: |-
  Gets information about an existing SQL database.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: azurerm_mssql_database

Use this data source to access information about an existing SQL database.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_mssql_server_example = azurerm.mssql_server.MssqlServer(self, "example_1",
            administrator_login="4dm1n157r470r",
            administrator_login_password="4-v3ry-53cr37-p455w0rd",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            version="12.0"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_mssql_server_example.override_logical_id("example")
        data_azurerm_mssql_database_example =
        azurerm.data_azurerm_mssql_database.DataAzurermMssqlDatabase(self, "example_2",
            name="example-mssql-db",
            server_id=cdktf.Token.as_string(azurerm_mssql_server_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_azurerm_mssql_database_example.override_logical_id("example")
        cdktf.TerraformOutput(self, "database_id",
            value=data_azurerm_mssql_database_example.id
        )
```

## Argument Reference

* `name` - The name of the MS SQL Database.

* `server_id` - The id of the MS SQL Server on which to create the database.

## Attributes Reference

* `collation` - The collation of the database.

* `elastic_pool_id` - The id of the elastic pool containing this database.

* `license_type` - The license type to apply for this database.

* `max_size_gb` - The max size of the database in gigabytes.

* `read_replica_count` - The number of readonly secondary replicas associated with the database to which readonly application intent connections may be routed.

* `read_scale` - If enabled, connections that have application intent set to readonly in their connection string may be routed to a readonly secondary replica.

* `sku_name` - The name of the SKU of the database.

* `storage_account_type` - The storage account type used to store backups for this database.

* `zone_redundant` - Whether or not this database is zone redundant, which means the replicas of this database will be spread across multiple availability zones.

* `tags` -  A mapping of tags to assign to the resource.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `read` - (Defaults to 5 minutes) Used when retrieving the SQL database.

<!-- cache-key: cdktf-0.17.0-pre.15 input-50501ce173d07cf628f84980b1435fa7f0bd28819d1a0559a123306c2917e402 -->