---
subcategory: "Storage"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_storage_container"
description: |-
  Gets information about an existing Storage Container.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: azurerm_storage_container

Use this data source to access information about an existing Storage Container.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm.data_azurerm_storage_container.DataAzurermStorageContainer(self, "example",
            name="example-container-name",
            storage_account_name="example-storage-account-name"
        )
```

## Argument Reference

The following arguments are supported:

* `name` - The name of the Container.

* `storage_account_name` - The name of the Storage Account where the Container exists.

## Attributes Reference

* `container_access_type` - The Access Level configured for this Container.

* `has_immutability_policy` - Is there an Immutability Policy configured on this Storage Container?

* `has_legal_hold` - Is there a Legal Hold configured on this Storage Container?

* `metadata`  - A mapping of MetaData for this Container.

* `resource_manager_id` - The Resource Manager ID of this Storage Container.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `read` - (Defaults to 5 minutes) Used when retrieving the Storage Container.

<!-- cache-key: cdktf-0.17.0-pre.15 input-a14ac476caa803a3c1c28b06f02624e4807c10884af865bed71c309783eb00c0 -->