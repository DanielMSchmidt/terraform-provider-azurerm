---
subcategory: "API Management"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_api_management_identity_provider_aadb2c"
description: |-
  Manages an API Management Azure AD B2C Identity Provider.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_api_management_identity_provider_aadb2c

Manages an API Management Azure AD B2C Identity Provider.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azuread as azuread
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # The following providers are missing schema information and might need manual adjustments to synthesize correctly: azuread.
        #     For a more precise conversion please use the --provider flag in convert.
        azuread_application_example = azuread.application.Application(self, "example",
            display_name="acctestam-example"
        )
        azuread_application_password_example =
        azuread.application_password.ApplicationPassword(self, "example_1",
            application_object_id=azuread_application_example.object_id,
            end_date_relative="36h"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azuread_application_password_example.override_logical_id("example")
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example_2",
            location="West Europe",
            name="example-resources"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_resource_group_example.override_logical_id("example")
        azurerm_api_management_example = azurerm.api_management.ApiManagement(self, "example_3",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-apim",
            publisher_email="company@terraform.io",
            publisher_name="My Company",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="Developer_1"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_api_management_example.override_logical_id("example")
        azurerm_api_management_identity_provider_aadb2_cExample =
        azurerm.api_management_identity_provider_aadb2_c.ApiManagementIdentityProviderAadb2C(self, "example_4",
            allowed_tenant="myb2ctenant.onmicrosoft.com",
            api_management_name=cdktf.Token.as_string(azurerm_api_management_example.name),
            authority="myb2ctenant.b2clogin.com",
            client_id=cdktf.Token.as_string(azuread_application_example.application_id),
            client_secret="P@55w0rD!",
            depends_on=[azuread_application_password_example],
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            signin_policy="B2C_1_Login",
            signin_tenant="myb2ctenant.onmicrosoft.com",
            signup_policy="B2C_1_Signup"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_api_management_identity_provider_aadb2_cExample.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `api_management_name` - (Required) The Name of the API Management Service where this AAD Identity Provider should be created. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) The Name of the Resource Group where the API Management Service exists. Changing this forces a new resource to be created.

* `client_id` - (Required) Client ID of the Application in your B2C tenant.

* `client_secret` - (Required) Client secret of the Application in your B2C tenant.

* `allowed_tenant` - (Required) The allowed AAD tenant, usually your B2C tenant domain.

* `signin_tenant` - (Required) The tenant to use instead of Common when logging into Active Directory, usually your B2C tenant domain.

* `authority` - (Required) OpenID Connect discovery endpoint hostname, usually your b2clogin.com domain.

* `signin_policy` - (Required) Signin Policy Name.

* `signup_policy` - (Required) Signup Policy Name.

---

* `password_reset_policy` - (Optional) Password reset Policy Name.

* `profile_editing_policy` - (Optional) Profile editing Policy Name.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the API Management Azure AD B2C Identity Provider Resource.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the API Management Azure AD B2C Identity Provider.
* `read` - (Defaults to 5 minutes) Used when retrieving the API Management Azure AD B2C Identity Provider.
* `update` - (Defaults to 30 minutes) Used when updating the API Management Azure AD B2C Identity Provider.
* `delete` - (Defaults to 30 minutes) Used when deleting the API Management Azure AD B2C Identity Provider.

## Import

API Management Azure AD B2C Identity Providers can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_api_management_identity_provider_aadb2c.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.ApiManagement/service/service1/identityProviders/aadB2C
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-aed52a31f3069440d3394c555592adfd65c4570ee2781c4c40489a1fc94f60d1 -->