---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_virtual_hub"
description: |-
  Manages a Virtual Hub within a Virtual WAN.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_virtual_hub

Manages a Virtual Hub within a Virtual WAN.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_virtual_wan_example = azurerm.virtual_wan.VirtualWan(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-virtualwan",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_wan_example.override_logical_id("example")
        azurerm_virtual_hub_example = azurerm.virtual_hub.VirtualHub(self, "example_2",
            address_prefix="10.0.0.0/23",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-virtualhub",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_wan_id=cdktf.Token.as_string(azurerm_virtual_wan_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_hub_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Virtual Hub. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) Specifies the name of the Resource Group where the Virtual Hub should exist. Changing this forces a new resource to be created.

* `location` - (Required) Specifies the supported Azure location where the Virtual Hub should exist. Changing this forces a new resource to be created.

---

* `address_prefix` - (Optional) The Address Prefix which should be used for this Virtual Hub. Changing this forces a new resource to be created. [The address prefix subnet cannot be smaller than a `/24`. Azure recommends using a `/23`](https://docs.microsoft.com/azure/virtual-wan/virtual-wan-faq#what-is-the-recommended-hub-address-space-during-hub-creation).

* `hub_routing_preference` - (Optional) The hub routing preference. Possible values are `ExpressRoute`, `ASPath` and `VpnGateway`. Defaults to `ExpressRoute`.

* `route` - (Optional) One or more `route` blocks as defined below.

* `sku` - (Optional) The SKU of the Virtual Hub. Possible values are `Basic` and `Standard`. Changing this forces a new resource to be created.

* `virtual_wan_id` - (Optional) The ID of a Virtual WAN within which the Virtual Hub should be created. Changing this forces a new resource to be created.

* `tags` - (Optional) A mapping of tags to assign to the Virtual Hub.

---

The `route` block supports the following:

* `address_prefixes` - (Required) A list of Address Prefixes.

* `next_hop_ip_address` - (Required) The IP Address that Packets should be forwarded to as the Next Hop.

---

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Virtual Hub.

* `default_route_table_id` - The ID of the default Route Table in the Virtual Hub.

* `virtual_router_asn` - The Autonomous System Number of the Virtual Hub BGP router.

* `virtual_router_ips` - The IP addresses of the Virtual Hub BGP router.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 60 minutes) Used when creating the Virtual Hub.
* `update` - (Defaults to 60 minutes) Used when updating the Virtual Hub.
* `read` - (Defaults to 5 minutes) Used when retrieving the Virtual Hub.
* `delete` - (Defaults to 60 minutes) Used when deleting the Virtual Hub.

## Import

Virtual Hub's can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_virtual_hub.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/virtualHubs/hub1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-246cc79d286ab3ed534e2578516c14fb4b4332824dc4d060f8ccbb9d63478d8a -->