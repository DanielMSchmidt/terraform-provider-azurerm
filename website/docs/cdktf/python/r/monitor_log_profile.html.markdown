---
subcategory: "Monitor"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_monitor_log_profile"
description: |-
  Manages a Log Profile.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_monitor_log_profile

Manages a [Log Profile](https://docs.microsoft.com/azure/monitoring-and-diagnostics/monitoring-overview-activity-logs#export-the-activity-log-with-a-log-profile). A Log Profile configures how Activity Logs are exported.

-> **NOTE:** It's only possible to configure one Log Profile per Subscription. If you are trying to create more than one Log Profile, an error with `StatusCode=409` will occur.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="logprofiletest-rg"
        )
        azurerm_storage_account_example =
        azurerm.storage_account.StorageAccount(self, "example_1",
            account_replication_type="GRS",
            account_tier="Standard",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="afscsdfytw",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_example.override_logical_id("example")
        azurerm_eventhub_namespace_example =
        azurerm.eventhub_namespace.EventhubNamespace(self, "example_2",
            capacity=2,
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="logprofileeventhub",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku="Standard"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_eventhub_namespace_example.override_logical_id("example")
        azurerm_monitor_log_profile_example =
        azurerm.monitor_log_profile.MonitorLogProfile(self, "example_3",
            categories=["Action", "Delete", "Write"],
            locations=["westus", "global"],
            name="default",
            retention_policy=MonitorLogProfileRetentionPolicy(
                days=7,
                enabled=True
            ),
            servicebus_rule_id="${" + azurerm_eventhub_namespace_example.id + "}/authorizationrules/RootManageSharedAccessKey",
            storage_account_id=cdktf.Token.as_string(azurerm_storage_account_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_monitor_log_profile_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Log Profile. Changing this forces a new resource to be created.

* `categories` - (Required) List of categories of the logs.

* `locations` - (Required) List of regions for which Activity Log events are stored or streamed.

* `storage_account_id` - (Optional) The resource ID of the storage account in which the Activity Log is stored. At least one of `storage_account_id` or `servicebus_rule_id` must be set.

* `servicebus_rule_id` - (Optional) The service bus (or event hub) rule ID of the service bus (or event hub) namespace in which the Activity Log is streamed to. At least one of `storage_account_id` or `servicebus_rule_id` must be set.

* `retention_policy` - (Required) A `retention_policy` block as documented below. A retention policy for how long Activity Logs are retained in the storage account.

---

The `retention_policy` block supports:

* `enabled` - (Required) A boolean value to indicate whether the retention policy is enabled.

* `days` - (Optional) The number of days for the retention policy. Defaults to `0`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Log Profile.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Log Profile.
* `update` - (Defaults to 30 minutes) Used when updating the Log Profile.
* `read` - (Defaults to 5 minutes) Used when retrieving the Log Profile.
* `delete` - (Defaults to 30 minutes) Used when deleting the Log Profile.

## Import

A Log Profile can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_monitor_log_profile.example /subscriptions/00000000-0000-0000-0000-000000000000/providers/Microsoft.Insights/logProfiles/test
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-3d36110091f7e5bd7802a8cdbebb8b5b1db2dbd3008b4498baff7e343702c232 -->