---
subcategory: "Load Balancer"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_lb_backend_address_pool"
description: |-
  Manages a Load Balancer Backend Address Pool.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_lb_backend_address_pool

Manages a Load Balancer Backend Address Pool.

~> **NOTE:** When using this resource, the Load Balancer needs to have a FrontEnd IP Configuration Attached

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="LoadBalancerRG"
        )
        azurerm_public_ip_example = azurerm.public_ip.PublicIp(self, "example_1",
            allocation_method="Static",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="PublicIPForLB",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_public_ip_example.override_logical_id("example")
        azurerm_lb_example = azurerm.lb.Lb(self, "example_2",
            frontend_ip_configuration=[LbFrontendIpConfiguration(
                name="PublicIPAddress",
                public_ip_address_id=cdktf.Token.as_string(azurerm_public_ip_example.id)
            )
            ],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="TestLoadBalancer",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_lb_example.override_logical_id("example")
        azurerm_lb_backend_address_pool_example =
        azurerm.lb_backend_address_pool.LbBackendAddressPool(self, "example_3",
            loadbalancer_id=cdktf.Token.as_string(azurerm_lb_example.id),
            name="BackEndAddressPool"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_lb_backend_address_pool_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Backend Address Pool. Changing this forces a new resource to be created.
  
* `loadbalancer_id` - (Required) The ID of the Load Balancer in which to create the Backend Address Pool. Changing this forces a new resource to be created.

* `tunnel_interface` - (Optional) One or more `tunnel_interface` blocks as defined below.

* `virtual_network_id` - (Optional) The ID of the Virtual Network within which the Backend Address Pool should exist.

---

The `tunnel_interface` block supports the following:

* `identifier` - (Required) The unique identifier of this Gateway Lodbalancer Tunnel Interface.

* `type` - (Required) The traffic type of this Gateway Lodbalancer Tunnel Interface. Possible values are `None`, `Internal` and `External`.

* `protocol` - (Required) The protocol used for this Gateway Lodbalancer Tunnel Interface. Possible values are `None`, `Native` and `VXLAN`.

* `port` - (Required) The port number that this Gateway Lodbalancer Tunnel Interface listens to.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Backend Address Pool.
  
* `backend_ip_configurations` - The Backend IP Configurations associated with this Backend Address Pool.

* `load_balancing_rules` - The Load Balancing Rules associated with this Backend Address Pool.

* `inbound_nat_rules` - An array of the Load Balancing Inbound NAT Rules associated with this Backend Address Pool.

* `outbound_rules` - An array of the Load Balancing Outbound Rules associated with this Backend Address Pool.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Load Balancer Backend Address Pool.
* `update` - (Defaults to 30 minutes) Used when updating the Load Balancer Backend Address Pool.
* `read` - (Defaults to 5 minutes) Used when retrieving the Load Balancer Backend Address Pool.
* `delete` - (Defaults to 30 minutes) Used when deleting the Load Balancer Backend Address Pool.

## Import

Load Balancer Backend Address Pools can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_lb_backend_address_pool.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/loadBalancers/lb1/backendAddressPools/pool1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-70f84301309f4159e7b353bc17fa0131ece763f96ee60afd3508f4992451fcff -->