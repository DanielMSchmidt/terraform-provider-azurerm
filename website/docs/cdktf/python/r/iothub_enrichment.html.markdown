---
subcategory: "Messaging"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_iothub_enrichment"
description: |-
  Manages an IotHub Enrichment
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_iothub_enrichment

Manages an IotHub Enrichment

~> **NOTE:** Enrichment can be defined either directly on the `azurerm_iothub` resource, or using the `azurerm_iothub_enrichment` resources - but the two cannot be used together. If both are used against the same IoTHub, spurious changes will occur.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_storage_account_example =
        azurerm.storage_account.StorageAccount(self, "example_1",
            account_replication_type="LRS",
            account_tier="Standard",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplestorageaccount",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_example.override_logical_id("example")
        azurerm_storage_container_example =
        azurerm.storage_container.StorageContainer(self, "example_2",
            container_access_type="private",
            name="example",
            storage_account_name=cdktf.Token.as_string(azurerm_storage_account_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_container_example.override_logical_id("example")
        azurerm_iothub_example = azurerm.iothub.Iothub(self, "example_3",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="exampleIothub",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku=IothubSku(
                capacity=cdktf.Token.as_number("1"),
                name="S1"
            ),
            tags={
                "purpose": "testing"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_iothub_example.override_logical_id("example")
        azurerm_iothub_endpoint_storage_container_example =
        azurerm.iothub_endpoint_storage_container.IothubEndpointStorageContainer(self, "example_4",
            batch_frequency_in_seconds=60,
            connection_string=cdktf.Token.as_string(azurerm_storage_account_example.primary_blob_connection_string),
            container_name=cdktf.Token.as_string(azurerm_storage_container_example.name),
            encoding="Avro",
            file_name_format="{iothub}/{partition}_{YYYY}_{MM}_{DD}_{HH}_{mm}",
            iothub_id=cdktf.Token.as_string(azurerm_iothub_example.id),
            max_chunk_size_in_bytes=10485760,
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_iothub_endpoint_storage_container_example.override_logical_id("example")
        azurerm_iothub_enrichment_example =
        azurerm.iothub_enrichment.IothubEnrichmentA(self, "example_5",
            endpoint_names=[
                cdktf.Token.as_string(azurerm_iothub_endpoint_storage_container_example.name)
            ],
            iothub_name=cdktf.Token.as_string(azurerm_iothub_example.name),
            key="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            value="my value"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_iothub_enrichment_example.override_logical_id("example")
        azurerm_iothub_route_example = azurerm.iothub_route.IothubRouteA(self, "example_6",
            condition="true",
            enabled=True,
            endpoint_names=[
                cdktf.Token.as_string(azurerm_iothub_endpoint_storage_container_example.name)
            ],
            iothub_name=cdktf.Token.as_string(azurerm_iothub_example.name),
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            source="DeviceMessages"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_iothub_route_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `iothub_name` - (Required) The IoTHub name of the enrichment. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) The name of the resource group under which the IoTHub resource is created. Changing this forces a new resource to be created.

* `key` - (Required) The key of the enrichment. Changing this forces a new resource to be created.

* `value` - (Required) The value of the enrichment. Value can be any static string, the name of the IoT hub sending the message (use `$iothubname`) or information from the device twin (ex: `$twin.tags.latitude`)

* `endpoint_names` - (Required) The list of endpoints which will be enriched.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the IoTHub Enrichment.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the IotHub Enrichment.
* `update` - (Defaults to 30 minutes) Used when updating the IotHub Enrichment.
* `read` - (Defaults to 5 minutes) Used when retrieving the IotHub Enrichment.
* `delete` - (Defaults to 30 minutes) Used when deleting the IotHub Enrichment.

## Import

IoTHub Enrichment can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_iothub_enrichment.enrichment1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Devices/iotHubs/hub1/enrichments/enrichment1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-befd282faa1f5b3bdf006e355001eccbbe525dbd954ac8f58803e450a50fde4d -->