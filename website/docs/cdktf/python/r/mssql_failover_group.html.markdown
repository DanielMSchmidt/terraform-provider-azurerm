---
subcategory: "Database"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_mssql_failover_group"
description: |-
  Manages a Microsoft Azure SQL Failover Group.

---


<!-- Please do not edit this file, it is generated. -->
# azurerm_mssql_failover_group

Manages a Microsoft Azure SQL Failover Group.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm.provider.AzurermProvider(self, "azurerm",
            features=AzurermProviderFeatures()
        )
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="database-rg"
        )
        azurerm_mssql_server_primary = azurerm.mssql_server.MssqlServer(self, "primary",
            administrator_login="missadministrator",
            administrator_login_password="thisIsKat11",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="mssqlserver-primary",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            version="12.0"
        )
        azurerm_mssql_server_secondary = azurerm.mssql_server.MssqlServer(self, "secondary",
            administrator_login="missadministrator",
            administrator_login_password="thisIsKat12",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="mssqlserver-secondary",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            version="12.0"
        )
        azurerm_mssql_database_example = azurerm.mssql_database.MssqlDatabase(self, "example_4",
            collation="SQL_Latin1_General_CP1_CI_AS",
            max_size_gb=cdktf.Token.as_number("200"),
            name="exampledb",
            server_id=cdktf.Token.as_string(azurerm_mssql_server_primary.id),
            sku_name="S1"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_mssql_database_example.override_logical_id("example")
        azurerm_mssql_failover_group_example =
        azurerm.mssql_failover_group.MssqlFailoverGroup(self, "example_5",
            databases=[cdktf.Token.as_string(azurerm_mssql_database_example.id)],
            name="example",
            partner_server=[MssqlFailoverGroupPartnerServer(
                id=cdktf.Token.as_string(azurerm_mssql_server_secondary.id)
            )
            ],
            read_write_endpoint_failover_policy=MssqlFailoverGroupReadWriteEndpointFailoverPolicy(
                grace_minutes=80,
                mode="Automatic"
            ),
            server_id=cdktf.Token.as_string(azurerm_mssql_server_primary.id),
            tags={
                "database": "example",
                "environment": "prod"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_mssql_failover_group_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Failover Group. Changing this forces a new resource to be created.

* `server_id` - (Required) The ID of the primary SQL Server on which to create the failover group. Changing this forces a new resource to be created.

* `partner_server` - (Required) A `partner_server` block as defined below.

* `databases` - (Optional) A set of database names to include in the failover group.

* `readonly_endpoint_failover_policy_enabled` - (Optional) Whether failover is enabled for the readonly endpoint. Defaults to `false`.

* `read_write_endpoint_failover_policy` - (Required) A `read_write_endpoint_failover_policy` block as defined below.

* `tags` - (Optional) A mapping of tags to assign to the resource.

---

A `partner_server` block supports the following:

* `id` - (Required) The ID of a partner SQL server to include in the failover group.

---

The `read_write_endpoint_failover_policy` block supports the following:

* `mode` - (Required) The failover policy of the read-write endpoint for the failover group. Possible values are `Automatic` or `Manual`.

* `grace_minutes` - (Optional) The grace period in minutes, before failover with data loss is attempted for the read-write endpoint. Required when `mode` is `Automatic`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Failover Group.

* `partner_server` - A `partner_server` block as defined below.

---

A `partner_server` block exports the following:

* `location` - The location of the partner server.

* `role` - The replication role of the partner server. Possible values include `Primary` or `Secondary`.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Failover Group.
* `update` - (Defaults to 30 minutes) Used when updating the Failover Group.
* `read` - (Defaults to 5 minutes) Used when retrieving the Failover Group.
* `delete` - (Defaults to 30 minutes) Used when deleting the Failover Group.

## Import

Failover Groups can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_mssql_failover_group.example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Sql/servers/server1/failoverGroups/failoverGroup1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-2cb6bd6f88da650bf79338328cdc0beca1467a5256eb60b56b2f7bd67892b559 -->