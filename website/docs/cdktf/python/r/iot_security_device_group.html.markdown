---
subcategory: "Security Center"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_iot_security_device_group"
description: |-
  Manages a Iot Security Device Group.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_iot_security_device_group

Manages a Iot Security Device Group.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_iothub_example = azurerm.iothub.Iothub(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-IoTHub",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku=IothubSku(
                capacity=cdktf.Token.as_number("1"),
                name="S1"
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_iothub_example.override_logical_id("example")
        azurerm_iot_security_solution_example =
        azurerm.iot_security_solution.IotSecuritySolution(self, "example_2",
            display_name="Iot Security Solution",
            iothub_ids=[cdktf.Token.as_string(azurerm_iothub_example.id)],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-Iot-Security-Solution",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_iot_security_solution_example.override_logical_id("example")
        azurerm_iot_security_device_group_example =
        azurerm.iot_security_device_group.IotSecurityDeviceGroup(self, "example_3",
            allow_rule=IotSecurityDeviceGroupAllowRule(
                connection_to_ips_not_allowed=["10.0.0.0/24"]
            ),
            depends_on=[azurerm_iot_security_solution_example],
            iothub_id=cdktf.Token.as_string(azurerm_iothub_example.id),
            name="example-device-security-group",
            range_rule=[IotSecurityDeviceGroupRangeRule(
                duration="PT5M",
                max=30,
                min=0,
                type="ActiveConnectionsNotInAllowedRange"
            )
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_iot_security_device_group_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Device Security Group. Changing this forces a new resource to be created.

* `iothub_id` - (Required) The ID of the IoT Hub which to link the Security Device Group to. Changing this forces a new resource to be created.

* `allow_rule` - (Optional) an `allow_rule` blocks as defined below.

* `range_rule` - (Optional) One or more `range_rule` blocks as defined below.

---

An `allow_rule` block supports the following:

* `connection_from_ips_not_allowed` - (Optional) Specifies which IP is not allowed to be connected to in current device group for inbound connection.

* `connection_to_ips_not_allowed` - (Optional) Specifies which IP is not allowed to be connected to in current device group for outbound connection.

* `local_users_not_allowed` - (Optional) Specifies which local user is not allowed to login in current device group.

* `processes_not_allowed` - (Optional) Specifies which process is not allowed to be executed in current device group.

---

An `range_rule` block supports the following:

* `duration` - (Required) Specifies the time range. represented in ISO 8601 duration format.

* `max` - (Required) The maximum threshold in the given time window.

* `min` - (Required) The minimum threshold in the given time window.

* `type` - (Required) The type of supported rule type. Possible Values are `ActiveConnectionsNotInAllowedRange`, `AmqpC2DMessagesNotInAllowedRange`, `MqttC2DMessagesNotInAllowedRange`, `HttpC2DMessagesNotInAllowedRange`, `AmqpC2DRejectedMessagesNotInAllowedRange`, `MqttC2DRejectedMessagesNotInAllowedRange`, `HttpC2DRejectedMessagesNotInAllowedRange`, `AmqpD2CMessagesNotInAllowedRange`, `MqttD2CMessagesNotInAllowedRange`, `HttpD2CMessagesNotInAllowedRange`, `DirectMethodInvokesNotInAllowedRange`, `FailedLocalLoginsNotInAllowedRange`, `FileUploadsNotInAllowedRange`, `QueuePurgesNotInAllowedRange`, `TwinUpdatesNotInAllowedRange` and `UnauthorizedOperationsNotInAllowedRange`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Iot Security Device Group resource.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Iot Security Device Group.
* `update` - (Defaults to 30 minutes) Used when updating the Iot Security Device Group.
* `read` - (Defaults to 5 minutes) Used when retrieving the Iot Security Device Group.
* `delete` - (Defaults to 30 minutes) Used when deleting the Iot Security Device Group.

## Import

Iot Security Device Group can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_iot_security_device_group.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Devices/iotHubs/hub1/providers/Microsoft.Security/deviceSecurityGroups/group1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-ab61cff6e768ff3965b9c68a3450c537a2c8afeda5d28d97b1fdee0d83af85a5 -->