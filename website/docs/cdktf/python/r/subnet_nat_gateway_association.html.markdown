---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_subnet_nat_gateway_association"
description: |-
  Associates a [NAT Gateway](nat_gateway.html) with a [Subnet](subnet.html) within a [Virtual Network](virtual_network.html).
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_subnet_nat_gateway_association

Associates a [NAT Gateway](nat_gateway.html) with a [Subnet](subnet.html) within a [Virtual Network](virtual_network.html).

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-nat-gateway-rg"
        )
        azurerm_virtual_network_example =
        azurerm.virtual_network.VirtualNetwork(self, "example_1",
            address_space=["10.0.0.0/16"],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-network",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_example.override_logical_id("example")
        azurerm_nat_gateway_example = azurerm.nat_gateway.NatGateway(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-natgateway",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_nat_gateway_example.override_logical_id("example")
        azurerm_subnet_example = azurerm.subnet.Subnet(self, "example_3",
            address_prefixes=["10.0.2.0/24"],
            name="example-subnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_network_name=cdktf.Token.as_string(azurerm_virtual_network_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_subnet_example.override_logical_id("example")
        azurerm_subnet_nat_gateway_association_example =
        azurerm.subnet_nat_gateway_association.SubnetNatGatewayAssociation(self, "example_4",
            nat_gateway_id=cdktf.Token.as_string(azurerm_nat_gateway_example.id),
            subnet_id=cdktf.Token.as_string(azurerm_subnet_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_subnet_nat_gateway_association_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `nat_gateway_id` - (Required) The ID of the NAT Gateway which should be associated with the Subnet. Changing this forces a new resource to be created.

* `subnet_id` - (Required) The ID of the Subnet. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Subnet.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Subnet NAT Gateway Association.
* `update` - (Defaults to 30 minutes) Used when updating the Subnet NAT Gateway Association.
* `read` - (Defaults to 5 minutes) Used when retrieving the Subnet NAT Gateway Association.
* `delete` - (Defaults to 30 minutes) Used when deleting the Subnet NAT Gateway Association.

## Import

Subnet NAT Gateway Associations can be imported using the `resource id` of the Subnet, e.g.

```shell
terraform import azurerm_subnet_nat_gateway_association.association1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/virtualNetworks/myvnet1/subnets/mysubnet1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-d043f6c81c92306cc1aa67d8049bd4f255d6dc1210d730f9eb129bb336922407 -->