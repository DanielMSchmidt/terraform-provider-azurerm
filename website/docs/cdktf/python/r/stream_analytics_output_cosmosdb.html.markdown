---
subcategory: "Stream Analytics"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_stream_analytics_output_cosmosdb"
description: |-
  Manages a Stream Analytics Output to CosmosDB.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_stream_analytics_output_cosmosdb

Manages a Stream Analytics Output to CosmosDB.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="rg-example"
        )
        data_azurerm_stream_analytics_job_example =
        azurerm.data_azurerm_stream_analytics_job.DataAzurermStreamAnalyticsJob(self, "example_1",
            name="example-job",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_azurerm_stream_analytics_job_example.override_logical_id("example")
        azurerm_cosmosdb_account_example =
        azurerm.cosmosdb_account.CosmosdbAccount(self, "example_2",
            consistency_policy=CosmosdbAccountConsistencyPolicy(
                consistency_level="BoundedStaleness",
                max_interval_in_seconds=10,
                max_staleness_prefix=200
            ),
            geo_location=[CosmosdbAccountGeoLocation(
                failover_priority=0,
                location=cdktf.Token.as_string(azurerm_resource_group_example.location)
            )
            ],
            kind="GlobalDocumentDB",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="exampledb",
            offer_type="Standard",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_cosmosdb_account_example.override_logical_id("example")
        azurerm_cosmosdb_sql_database_example =
        azurerm.cosmosdb_sql_database.CosmosdbSqlDatabase(self, "example_3",
            account_name=cdktf.Token.as_string(azurerm_cosmosdb_account_example.name),
            name="cosmos-sql-db",
            resource_group_name=cdktf.Token.as_string(azurerm_cosmosdb_account_example.resource_group_name),
            throughput=400
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_cosmosdb_sql_database_example.override_logical_id("example")
        azurerm_cosmosdb_sql_container_example =
        azurerm.cosmosdb_sql_container.CosmosdbSqlContainer(self, "example_4",
            account_name=cdktf.Token.as_string(azurerm_cosmosdb_account_example.name),
            database_name=cdktf.Token.as_string(azurerm_cosmosdb_sql_database_example.name),
            name="examplecontainer",
            partition_key_path="foo",
            resource_group_name=cdktf.Token.as_string(azurerm_cosmosdb_account_example.resource_group_name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_cosmosdb_sql_container_example.override_logical_id("example")
        azurerm_stream_analytics_output_cosmosdb_example =
        azurerm.stream_analytics_output_cosmosdb.StreamAnalyticsOutputCosmosdb(self, "example_5",
            container_name=cdktf.Token.as_string(azurerm_cosmosdb_sql_container_example.name),
            cosmosdb_account_key=cdktf.Token.as_string(azurerm_cosmosdb_account_example.primary_key),
            cosmosdb_sql_database_id=cdktf.Token.as_string(azurerm_cosmosdb_sql_database_example.id),
            document_id="exampledocumentid",
            name="output-to-cosmosdb",
            stream_analytics_job_id=cdktf.Token.as_string(data_azurerm_stream_analytics_job_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_stream_analytics_output_cosmosdb_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name of the Stream Analytics Output. Changing this forces a new resource to be created.

* `stream_analytics_job_id` - (Required) The ID of the Stream Analytics Job. Changing this forces a new resource to be created.

* `cosmosdb_account_key` - (Required) The account key for the CosmosDB database.

* `cosmosdb_sql_database_id` - (Required) The ID of the CosmosDB database.

* `container_name` - (Required) The name of the CosmosDB container.

* `document_id` - (Optional) The name of the field in output events used to specify the primary key which insert or update operations are based on.

* `partition_key` - (Optional) The name of the field in output events used to specify the key for partitioning output across collections. If `container_name` contains `{partition}` token, this property is required to be specified.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Stream Analytics Output for CosmosDB.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Stream Analytics Output for CosmosDB.
* `read` - (Defaults to 5 minutes) Used when retrieving the Stream Analytics Output for CosmosDB.
* `update` - (Defaults to 30 minutes) Used when updating the Stream Analytics Output for CosmosDB.
* `delete` - (Defaults to 30 minutes) Used when deleting the Stream Analytics Output for CosmosDB.

## Import

Stream Analytics Outputs for CosmosDB can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_stream_analytics_output_cosmosdb.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingJobs/job1/outputs/output1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-b738567caf782d6a5f6a13627d51fd831a554da2bf9f802327ddd0bd01669297 -->