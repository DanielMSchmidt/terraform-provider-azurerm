---
subcategory: "Database"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_mssql_database_extended_auditing_policy"
description: |-
  Manages a MS SQL Database Extended Auditing Policy.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_mssql_database_extended_auditing_policy

Manages a MS SQL Database Extended Auditing Policy.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm.provider.AzurermProvider(self, "azurerm",
            features=AzurermProviderFeatures()
        )
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_storage_account_example =
        azurerm.storage_account.StorageAccount(self, "example_2",
            account_replication_type="LRS",
            account_tier="Standard",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplesa",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_example.override_logical_id("example")
        azurerm_mssql_server_example = azurerm.mssql_server.MssqlServer(self, "example_3",
            administrator_login="missadministrator",
            administrator_login_password="AdminPassword123!",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-sqlserver",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            version="12.0"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_mssql_server_example.override_logical_id("example")
        azurerm_mssql_database_example = azurerm.mssql_database.MssqlDatabase(self, "example_4",
            name="example-db",
            server_id=cdktf.Token.as_string(azurerm_mssql_server_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_mssql_database_example.override_logical_id("example")
        azurerm_mssql_database_extended_auditing_policy_example =
        azurerm.mssql_database_extended_auditing_policy.MssqlDatabaseExtendedAuditingPolicy(self, "example_5",
            database_id=cdktf.Token.as_string(azurerm_mssql_database_example.id),
            retention_in_days=6,
            storage_account_access_key=cdktf.Token.as_string(azurerm_storage_account_example.primary_access_key),
            storage_account_access_key_is_secondary=False,
            storage_endpoint=cdktf.Token.as_string(azurerm_storage_account_example.primary_blob_endpoint)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_mssql_database_extended_auditing_policy_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `database_id` - (Required) The ID of the SQL database to set the extended auditing policy. Changing this forces a new resource to be created.

* `enabled` - (Optional) Whether to enable the extended auditing policy. Possible values are `true` and `false`. Defaults to `true`.

->**NOTE:**  If `enabled` is `true`, `storage_endpoint` or `log_monitoring_enabled` are required.

* `storage_endpoint` - (Optional) The blob storage endpoint (e.g. <https://example.blob.core.windows.net>). This blob storage will hold all extended auditing logs.

* `retention_in_days` - (Optional) The number of days to retain logs for in the storage account. Defaults to `0`.

* `storage_account_access_key` - (Optional) The access key to use for the auditing storage account.

* `storage_account_access_key_is_secondary` - (Optional) Is `storage_account_access_key` value the storage's secondary key?

* `log_monitoring_enabled` - (Optional) Enable audit events to Azure Monitor? Defaults to `true`.

~> **NOTE:** To enable sending audit events to Log Analytics, please refer to the example which can be found in [the `./examples/sql-azure/sql_auditing_log_analytics` directory within the GitHub Repository](https://github.com/hashicorp/terraform-provider-azurerm/tree/main/examples/sql-azure/sql_auditing_log_analytics).  To enable sending server audit events to Log Analytics, please enable the master database to send audit events to Log Analytics.
To enable audit events to Eventhub, please refer to the example which can be found in [the `./examples/sql-azure/sql_auditing_eventhub` directory within the GitHub Repository](https://github.com/hashicorp/terraform-provider-azurerm/tree/main/examples/sql-azure/sql_auditing_eventhub).

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the MS SQL Database Extended Auditing Policy.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the MS SQL Database Extended Auditing Policy.
* `read` - (Defaults to 5 minutes) Used when retrieving the MS SQL Database Extended Auditing Policy.
* `update` - (Defaults to 30 minutes) Used when updating the MS SQL Database Extended Auditing Policy.
* `delete` - (Defaults to 30 minutes) Used when deleting the MS SQL Database Extended Auditing Policy.

## Import

MS SQL Database Extended Auditing Policies can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_mssql_database_extended_auditing_policy.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Sql/servers/sqlServer1/databases/db1/extendedAuditingSettings/default
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-16e262b364b2658510e35f52209516f00041f9776bc8a7e7f43c8c034d88daee -->