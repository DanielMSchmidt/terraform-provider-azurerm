---
subcategory: "Monitor"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_monitor_data_collection_rule_association"
description: |-
  Manages a Data Collection Rule Association.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_monitor_data_collection_rule_association

Manages a Data Collection Rule Association.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_virtual_network_example =
        azurerm.virtual_network.VirtualNetwork(self, "example_1",
            address_space=["10.0.0.0/16"],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="virtualnetwork",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_example.override_logical_id("example")
        azurerm_monitor_data_collection_endpoint_example =
        azurerm.monitor_data_collection_endpoint.MonitorDataCollectionEndpoint(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-dce",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_monitor_data_collection_endpoint_example.override_logical_id("example")
        azurerm_monitor_data_collection_rule_example =
        azurerm.monitor_data_collection_rule.MonitorDataCollectionRule(self, "example_3",
            data_flow=[MonitorDataCollectionRuleDataFlow(
                destinations=["example-destination-metrics"],
                streams=["Microsoft-InsightsMetrics"]
            )
            ],
            destinations=MonitorDataCollectionRuleDestinations(
                azure_monitor_metrics=MonitorDataCollectionRuleDestinationsAzureMonitorMetrics(
                    name="example-destination-metrics"
                )
            ),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-dcr",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_monitor_data_collection_rule_example.override_logical_id("example")
        azurerm_subnet_example = azurerm.subnet.Subnet(self, "example_4",
            address_prefixes=["10.0.2.0/24"],
            name="subnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_network_name=cdktf.Token.as_string(azurerm_virtual_network_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_subnet_example.override_logical_id("example")
        azurerm_network_interface_example =
        azurerm.network_interface.NetworkInterface(self, "example_5",
            ip_configuration=[NetworkInterfaceIpConfiguration(
                name="internal",
                private_ip_address_allocation="Dynamic",
                subnet_id=cdktf.Token.as_string(azurerm_subnet_example.id)
            )
            ],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="nic",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_network_interface_example.override_logical_id("example")
        azurerm_linux_virtual_machine_example =
        azurerm.linux_virtual_machine.LinuxVirtualMachine(self, "example_6",
            admin_password="example-Password@7890",
            admin_username="adminuser",
            disable_password_authentication=False,
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="machine",
            network_interface_ids=[
                cdktf.Token.as_string(azurerm_network_interface_example.id)
            ],
            os_disk=LinuxVirtualMachineOsDisk(
                caching="ReadWrite",
                storage_account_type="Standard_LRS"
            ),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            size="Standard_B1ls",
            source_image_reference=LinuxVirtualMachineSourceImageReference(
                offer="UbuntuServer",
                publisher="Canonical",
                sku="20.04-LTS",
                version="latest"
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_linux_virtual_machine_example.override_logical_id("example")
        azurerm.monitor_data_collection_rule_association.MonitorDataCollectionRuleAssociation(self, "example1",
            data_collection_rule_id=cdktf.Token.as_string(azurerm_monitor_data_collection_rule_example.id),
            description="example",
            name="example1-dcra",
            target_resource_id=cdktf.Token.as_string(azurerm_linux_virtual_machine_example.id)
        )
        azurerm.monitor_data_collection_rule_association.MonitorDataCollectionRuleAssociation(self, "example2",
            data_collection_endpoint_id=cdktf.Token.as_string(azurerm_monitor_data_collection_endpoint_example.id),
            description="example",
            target_resource_id=cdktf.Token.as_string(azurerm_linux_virtual_machine_example.id)
        )
```

## Arguments Reference

The following arguments are supported:

* `target_resource_id` - (Required) The ID of the Azure Resource which to associate to a Data Collection Rule or a Data Collection Endpoint. Changing this forces a new resource to be created.

---

* `name` - (Optional) The name which should be used for this Data Collection Rule Association. Changing this forces a new Data Collection Rule Association to be created. Defaults to `configurationAccessEndpoint`.

-> **NOTE** `name` is required when `data_collection_rule_id` is specified. And when `data_collection_endpoint_id` is specified, the `name` is populated with `configurationAccessEndpoint`.

* `data_collection_endpoint_id` - (Optional) The ID of the Data Collection Endpoint which will be associated to the target resource.

* `data_collection_rule_id` - (Optional) The ID of the Data Collection Rule which will be associated to the target resource.

-> **NOTE** Exactly one of `data_collection_endpoint_id` and `data_collection_rule_id` blocks must be specified.

* `description` - (Optional) The description of the Data Collection Rule Association.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Data Collection Rule Association.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Data Collection Rule Association.
* `read` - (Defaults to 5 minutes) Used when retrieving the Data Collection Rule Association.
* `update` - (Defaults to 30 minutes) Used when updating the Data Collection Rule Association.
* `delete` - (Defaults to 30 minutes) Used when deleting the Data Collection Rule Association.

## Import

Data Collection Rules Association can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_monitor_data_collection_rule_association.example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/rg1/providers/Microsoft.Compute/virtualMachines/vm1/providers/Microsoft.Insights/dataCollectionRuleAssociations/dca1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-c41cbae7922c9528adab26ae3adc9965a54b453d9264ce5cc2f2f17a75677e91 -->