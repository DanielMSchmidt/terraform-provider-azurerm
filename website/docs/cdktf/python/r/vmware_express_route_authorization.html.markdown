---
subcategory: "VMware (AVS)"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_vmware_express_route_authorization"
description: |-
  Manages an Express Route VMware Authorization.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_vmware_express_route_authorization

Manages an Express Route VMware Authorization.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm.provider.AzurermProvider(self, "azurerm",
            disable_correlation_request_id=True,
            features=AzurermProviderFeatures()
        )
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_vmware_private_cloud_example =
        azurerm.vmware_private_cloud.VmwarePrivateCloud(self, "example_2",
            internet_connection_enabled=False,
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            management_cluster=VmwarePrivateCloudManagementCluster(
                size=3
            ),
            name="example-vmware-private-cloud",
            network_subnet_cidr="192.168.48.0/22",
            nsxt_password="QazWsx13$Edc",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="av36",
            vcenter_password="WsxEdc23$Rfv"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_vmware_private_cloud_example.override_logical_id("example")
        azurerm_vmware_express_route_authorization_example =
        azurerm.vmware_express_route_authorization.VmwareExpressRouteAuthorization(self, "example_3",
            name="example-authorization",
            private_cloud_id=cdktf.Token.as_string(azurerm_vmware_private_cloud_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_vmware_express_route_authorization_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Express Route VMware Authorization. Changing this forces a new VMware Authorization to be created.

* `private_cloud_id` - (Required) The ID of the VMware Private Cloud in which to create this Express Route VMware Authorization. Changing this forces a new VMware Authorization to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the VMware Authorization.

* `express_route_authorization_id` - The ID of the Express Route Circuit Authorization.

* `express_route_authorization_key` - The key of the Express Route Circuit Authorization.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the VMware Authorization.
* `read` - (Defaults to 5 minutes) Used when retrieving the VMware Authorization.
* `delete` - (Defaults to 30 minutes) Used when deleting the VMware Authorization.

## Import

VMware Authorizations can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_vmware_express_route_authorization.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.AVS/privateClouds/privateCloud1/authorizations/authorization1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-3587e733f03dbaaa90fb3fdff6e6035bc872c59d5a022166b195ff80a363ddcb -->