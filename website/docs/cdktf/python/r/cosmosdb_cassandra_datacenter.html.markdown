---
subcategory: "CosmosDB (DocumentDB)"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_cosmosdb_cassandra_datacenter"
description: |-
  Manages a Cassandra Datacenter.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_cosmosdb_cassandra_datacenter

Manages a Cassandra Datacenter.

~> **NOTE:** In order for the `Azure Managed Instances for Apache Cassandra` to work properly the product requires the `Azure Cosmos DB` Application ID to be present and working in your tenant. If the `Azure Cosmos DB` Application ID is missing in your environment you will need to have an administrator of your tenant run the following command to add the `Azure Cosmos DB` Application ID to your tenant:

```powershell
New-AzADServicePrincipal -ApplicationId a232010e-820c-4083-83bb-3ace5fc29d0b
```

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
import ...gen.providers.azuread as azuread
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # The following providers are missing schema information and might need manual adjustments to synthesize correctly: azuread.
        #     For a more precise conversion please use the --provider flag in convert.
        azurerm.provider.AzurermProvider(self, "azurerm",
            features=AzurermProviderFeatures()
        )
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="accexample-rg"
        )
        azurerm_virtual_network_example =
        azurerm.virtual_network.VirtualNetwork(self, "example_2",
            address_space=["10.0.0.0/16"],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_example.override_logical_id("example")
        data_azuread_service_principal_example =
        azuread.data_azuread_service_principal.DataAzureadServicePrincipal(self, "example_3",
            display_name="Azure Cosmos DB"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_azuread_service_principal_example.override_logical_id("example")
        azurerm_role_assignment_example =
        azurerm.role_assignment.RoleAssignment(self, "example_4",
            principal_id=cdktf.Token.as_string(data_azuread_service_principal_example.object_id),
            role_definition_name="Network Contributor",
            scope=cdktf.Token.as_string(azurerm_virtual_network_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_role_assignment_example.override_logical_id("example")
        azurerm_subnet_example = azurerm.subnet.Subnet(self, "example_5",
            address_prefixes=["10.0.1.0/24"],
            name="example-subnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_network_name=cdktf.Token.as_string(azurerm_virtual_network_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_subnet_example.override_logical_id("example")
        azurerm_cosmosdb_cassandra_cluster_example =
        azurerm.cosmosdb_cassandra_cluster.CosmosdbCassandraCluster(self, "example_6",
            default_admin_password="Password1234",
            delegated_management_subnet_id=cdktf.Token.as_string(azurerm_subnet_example.id),
            depends_on=[azurerm_role_assignment_example],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-cluster",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_cosmosdb_cassandra_cluster_example.override_logical_id("example")
        azurerm_cosmosdb_cassandra_datacenter_example =
        azurerm.cosmosdb_cassandra_datacenter.CosmosdbCassandraDatacenter(self, "example_7",
            availability_zones_enabled=False,
            cassandra_cluster_id=cdktf.Token.as_string(azurerm_cosmosdb_cassandra_cluster_example.id),
            delegated_management_subnet_id=cdktf.Token.as_string(azurerm_subnet_example.id),
            disk_count=4,
            location=cdktf.Token.as_string(azurerm_cosmosdb_cassandra_cluster_example.location),
            name="example-datacenter",
            node_count=3,
            sku_name="Standard_DS14_v2"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_cosmosdb_cassandra_datacenter_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Cassandra Datacenter. Changing this forces a new Cassandra Datacenter to be created.

* `location` - (Required) The Azure Region where the Cassandra Datacenter should exist. Changing this forces a new Cassandra Datacenter to be created.

* `cassandra_cluster_id` - (Required) The ID of the Cassandra Cluster. Changing this forces a new Cassandra Datacenter to be created.

* `delegated_management_subnet_id` - (Required) The ID of the delegated management subnet for this Cassandra Datacenter. Changing this forces a new Cassandra Datacenter to be created.

* `node_count` - (Optional) The number of nodes the Cassandra Datacenter should have. The number should be equal or greater than `3`. Defaults to `3`.

---

* `backup_storage_customer_key_uri` - (Optional) The key URI of the customer key to use for the encryption of the backup Storage Account.

* `base64_encoded_yaml_fragment` - (Optional) The fragment of the cassandra.yaml configuration file to be included in the cassandra.yaml for all nodes in this Cassandra Datacenter. The fragment should be Base64 encoded and only a subset of keys is allowed.

* `disk_sku` - (Optional) The Disk SKU that is used for this Cassandra Datacenter. Defaults to `P30`.

* `managed_disk_customer_key_uri` - (Optional) The key URI of the customer key to use for the encryption of the Managed Disk.

* `sku_name` - (Optional) Determines the selected sku.

* `disk_count` - (Optional) Determines the number of p30 disks that are attached to each node.

* `availability_zones_enabled` - (Optional) Determines whether availability zones are enabled. Defaults to `true`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Cassandra Datacenter.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 60 minutes) Used when creating the Cassandra Datacenter.
* `read` - (Defaults to 5 minutes) Used when retrieving the Cassandra Datacenter.
* `update` - (Defaults to 60 minutes) Used when updating the Cassandra Datacenter.
* `delete` - (Defaults to 60 minutes) Used when deleting the Cassandra Datacenter.

## Import

Cassandra Datacenters can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_cosmosdb_cassandra_datacenter.example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.DocumentDB/cassandraClusters/cluster1/dataCenters/dc1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-fbb1294dfccb73bd7890ab3bb6b41f9e855799f386d556399b9c17371f7bc049 -->