---
subcategory: "Management"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_management_lock"
description: |-
  Manages a Management Lock which is scoped to a Subscription, Resource Group or Resource.

---


<!-- Please do not edit this file, it is generated. -->
# azurerm_management_lock

Manages a Management Lock which is scoped to a Subscription, Resource Group or Resource.

## Example Usage (Subscription Level Lock)

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        data_azurerm_subscription_current =
        azurerm.data_azurerm_subscription.DataAzurermSubscription(self, "current")
        azurerm.management_lock.ManagementLock(self, "subscription-level",
            lock_level="CanNotDelete",
            name="subscription-level",
            notes="Items can't be deleted in this subscription!",
            scope=cdktf.Token.as_string(data_azurerm_subscription_current.id)
        )
```

## Example Usage (Resource Group Level Lock)

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="locked-resource-group"
        )
        azurerm.management_lock.ManagementLock(self, "resource-group-level",
            lock_level="ReadOnly",
            name="resource-group-level",
            notes="This Resource Group is Read-Only",
            scope=cdktf.Token.as_string(azurerm_resource_group_example.id)
        )
```

## Example Usage (Resource Level Lock)

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="locked-resource-group"
        )
        azurerm_public_ip_example = azurerm.public_ip.PublicIp(self, "example_1",
            allocation_method="Static",
            idle_timeout_in_minutes=30,
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="locked-publicip",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_public_ip_example.override_logical_id("example")
        azurerm.management_lock.ManagementLock(self, "public-ip",
            lock_level="CanNotDelete",
            name="resource-ip",
            notes="Locked because it's needed by a third-party",
            scope=cdktf.Token.as_string(azurerm_public_ip_example.id)
        )
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Management Lock. Changing this forces a new resource to be created.

* `scope` - (Required) Specifies the scope at which the Management Lock should be created. Changing this forces a new resource to be created.

* `lock_level` - (Required) Specifies the Level to be used for this Lock. Possible values are `CanNotDelete` and `ReadOnly`. Changing this forces a new resource to be created.

~> **Note:** `CanNotDelete` means authorized users are able to read and modify the resources, but not delete. `ReadOnly` means authorized users can only read from a resource, but they can't modify or delete it.

* `notes` - (Optional) Specifies some notes about the lock. Maximum of 512 characters. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Management Lock

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Management Lock.
* `update` - (Defaults to 30 minutes) Used when updating the Management Lock.
* `read` - (Defaults to 5 minutes) Used when retrieving the Management Lock.
* `delete` - (Defaults to 30 minutes) Used when deleting the Management Lock.

## Import

Management Locks can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_management_lock.lock1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Authorization/locks/lock1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-fd7d0dd8b83f8aea43c04f685b242059df625d171bb70b7721f0d120007484d4 -->