---
subcategory: "Private DNS Resolver"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_private_dns_resolver"
description: |-
  Manages a Private DNS Resolver.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_private_dns_resolver

Manages a Private DNS Resolver.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_virtual_network_example =
        azurerm.virtual_network.VirtualNetwork(self, "example_1",
            address_space=["10.0.0.0/16"],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_example.override_logical_id("example")
        azurerm.private_dns_resolver.PrivateDnsResolver(self, "test",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_network_id=cdktf.Token.as_string(azurerm_virtual_network_example.id)
        )
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) Specifies the name which should be used for this Private DNS Resolver. Changing this forces a new Private DNS Resolver to be created.

* `resource_group_name` - (Required) Specifies the name of the Resource Group where the Private DNS Resolver should exist. Changing this forces a new Private DNS Resolver to be created.

* `location` - (Required) Specifies the Azure Region where the Private DNS Resolver should exist. Changing this forces a new Private DNS Resolver to be created.

* `virtual_network_id` - (Required) The ID of the Virtual Network that is linked to the Private DNS Resolver. Changing this forces a new Private DNS Resolver to be created.

* `tags` - (Optional) A mapping of tags which should be assigned to the Private DNS Resolver.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the DNS Resolver.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Private DNS Resolver.
* `read` - (Defaults to 5 minutes) Used when retrieving the Private DNS Resolver.
* `update` - (Defaults to 30 minutes) Used when updating the Private DNS Resolver.
* `delete` - (Defaults to 30 minutes) Used when deleting the Private DNS Resolver.

## Import

DNS Resolver can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_private_dns_resolver.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/dnsResolvers/dnsResolver1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-e87b3054c8c328fd7ad2359dcd543181b374a855b2b9c439f57ba1a208a50277 -->