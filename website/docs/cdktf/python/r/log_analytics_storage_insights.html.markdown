---
subcategory: "Log Analytics"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_log_analytics_storage_insights"
description: |-
  Manages a Log Analytics Storage Insights resource.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_log_analytics_storage_insights

Manages a Log Analytics Storage Insights resource.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_storage_account_example =
        azurerm.storage_account.StorageAccount(self, "example_1",
            account_replication_type="LRS",
            account_tier="Standard",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplestoracc",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_example.override_logical_id("example")
        azurerm_log_analytics_workspace_example =
        azurerm.log_analytics_workspace.LogAnalyticsWorkspace(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="exampleworkspace",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            retention_in_days=30,
            sku="PerGB2018"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_log_analytics_workspace_example.override_logical_id("example")
        azurerm_log_analytics_storage_insights_example =
        azurerm.log_analytics_storage_insights.LogAnalyticsStorageInsights(self, "example_3",
            name="example-storageinsightconfig",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            storage_account_id=cdktf.Token.as_string(azurerm_storage_account_example.id),
            storage_account_key=cdktf.Token.as_string(azurerm_storage_account_example.primary_access_key),
            workspace_id=cdktf.Token.as_string(azurerm_log_analytics_workspace_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_log_analytics_storage_insights_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Log Analytics Storage Insights. Changing this forces a new Log Analytics Storage Insights to be created.

* `resource_group_name` - (Required) The name of the Resource Group where the Log Analytics Storage Insights should exist. Changing this forces a new Log Analytics Storage Insights to be created.

* `workspace_id` - (Required) The ID of the Log Analytics Workspace within which the Storage Insights should exist. Changing this forces a new Log Analytics Storage Insights to be created.

* `storage_account_id` - (Required) The ID of the Storage Account used by this Log Analytics Storage Insights.

* `storage_account_key` - (Required) The storage access key to be used to connect to the storage account.

* `blob_container_names` - (Optional) The names of the blob containers that the workspace should read.

* `table_names` - (Optional) The names of the Azure tables that the workspace should read.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Log Analytics Storage Insights.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Log Analytics Storage Insights.
* `read` - (Defaults to 5 minutes) Used when retrieving the Log Analytics Storage Insights.
* `update` - (Defaults to 30 minutes) Used when updating the Log Analytics Storage Insights.
* `delete` - (Defaults to 30 minutes) Used when deleting the Log Analytics Storage Insights.

## Import

Log Analytics Storage Insight Configs can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_log_analytics_storage_insights.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.OperationalInsights/workspaces/workspace1/storageInsightConfigs/storageInsight1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-2087a3bcef48a18cffa6e2ece3d44cba6ddbfed54d946723117c40a4aea728ab -->