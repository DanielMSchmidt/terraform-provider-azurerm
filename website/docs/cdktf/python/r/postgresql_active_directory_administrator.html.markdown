---
subcategory: "Database"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_postgresql_active_directory_administrator"
description: |-
  Manages an Active Directory administrator on a PostgreSQL server
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_postgresql_active_directory_administrator

Allows you to set a user or group as the AD administrator for an PostgreSQL server in Azure

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        data_azurerm_client_config_current =
        azurerm.data_azurerm_client_config.DataAzurermClientConfig(self, "current")
        azurerm_postgresql_server_example =
        azurerm.postgresql_server.PostgresqlServer(self, "example_2",
            administrator_login="4dm1n157r470r",
            administrator_login_password="4-v3ry-53cr37-p455w0rd",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-psqlserver",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="GP_Gen5_2",
            ssl_enforcement_enabled=True,
            version="9.6"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_postgresql_server_example.override_logical_id("example")
        azurerm_postgresql_active_directory_administrator_example =
        azurerm.postgresql_active_directory_administrator.PostgresqlActiveDirectoryAdministrator(self, "example_3",
            login="sqladmin",
            object_id=cdktf.Token.as_string(data_azurerm_client_config_current.object_id),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            server_name=cdktf.Token.as_string(azurerm_postgresql_server_example.name),
            tenant_id=cdktf.Token.as_string(data_azurerm_client_config_current.tenant_id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_postgresql_active_directory_administrator_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `server_name` - (Required) The name of the PostgreSQL Server on which to set the administrator. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) The name of the resource group for the PostgreSQL server. Changing this forces a new resource to be created.

* `login` - (Required) The login name of the principal to set as the server administrator

* `object_id` - (Required) The ID of the principal to set as the server administrator. For a managed identity this should be the Client ID of the identity.

* `tenant_id` - (Required) The Azure Tenant ID

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the PostgreSQL Active Directory Administrator.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the PostgreSQL Active Directory Administrator.
* `update` - (Defaults to 30 minutes) Used when updating the PostgreSQL Active Directory Administrator.
* `read` - (Defaults to 5 minutes) Used when retrieving the PostgreSQL Active Directory Administrator.
* `delete` - (Defaults to 30 minutes) Used when deleting the PostgreSQL Active Directory Administrator.

## Import

A PostgreSQL Active Directory Administrator can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_postgresql_active_directory_administrator.administrator /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.DBforPostgreSQL/servers/myserver
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-6e3651add616394555bfbf47e9a2bc7f4d64f32fe4b168daddb624686ef688be -->