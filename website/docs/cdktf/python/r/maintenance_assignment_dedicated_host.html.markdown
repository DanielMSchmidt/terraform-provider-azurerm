---
subcategory: "Maintenance"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_maintenance_assignment_dedicated_host"
description: |-
  Manages a Maintenance Assignment to Dedicated Host.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_maintenance_assignment_dedicated_host

Manages a maintenance assignment to Dedicated Host.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm.provider.AzurermProvider(self, "azurerm",
            features=AzurermProviderFeatures()
        )
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_dedicated_host_group_example =
        azurerm.dedicated_host_group.DedicatedHostGroup(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-host-group",
            platform_fault_domain_count=2,
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_dedicated_host_group_example.override_logical_id("example")
        azurerm_maintenance_configuration_example =
        azurerm.maintenance_configuration.MaintenanceConfiguration(self, "example_3",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-mc",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            scope="Host"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_maintenance_configuration_example.override_logical_id("example")
        azurerm_dedicated_host_example = azurerm.dedicated_host.DedicatedHost(self, "example_4",
            dedicated_host_group_id=cdktf.Token.as_string(azurerm_dedicated_host_group_example.id),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-host",
            platform_fault_domain=1,
            sku_name="DSv3-Type1"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_dedicated_host_example.override_logical_id("example")
        azurerm_maintenance_assignment_dedicated_host_example =
        azurerm.maintenance_assignment_dedicated_host.MaintenanceAssignmentDedicatedHost(self, "example_5",
            dedicated_host_id=cdktf.Token.as_string(azurerm_dedicated_host_example.id),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            maintenance_configuration_id=cdktf.Token.as_string(azurerm_maintenance_configuration_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_maintenance_assignment_dedicated_host_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `location` - (Required) Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.

* `maintenance_configuration_id` - (Required) Specifies the ID of the Maintenance Configuration Resource. Changing this forces a new resource to be created.

* `dedicated_host_id` - (Required) Specifies the Dedicated Host ID to which the Maintenance Configuration will be assigned. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Maintenance Assignment.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Maintenance Assignment.
* `read` - (Defaults to 5 minutes) Used when retrieving the Maintenance Assignment.
* `delete` - (Defaults to 30 minutes) Used when deleting the Maintenance Assignment.

## Import

Maintenance Assignment can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_maintenance_assignment_dedicated_host.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Compute/hostGroups/group1/hosts/host1/providers/Microsoft.Maintenance/configurationAssignments/assign1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-bde3c84f1dde898802898a1931f25fc70fd8cec4e2f73d33cb558a56b30206dc -->