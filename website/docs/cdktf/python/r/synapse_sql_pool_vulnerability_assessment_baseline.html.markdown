---
subcategory: "Synapse"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_synapse_sql_pool_vulnerability_assessment_baseline"
description: |-
  Manages a Vulnerability Assessment Rule Baseline for Synapse SQL Pool.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_synapse_sql_pool_vulnerability_assessment_baseline

Manages a Synapse SQL Pool Vulnerability Assessment Rule Baseline.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm.provider.AzurermProvider(self, "azurerm",
            features=AzurermProviderFeatures()
        )
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="west europe",
            name="example"
        )
        azurerm_storage_account_example =
        azurerm.storage_account.StorageAccount(self, "example_2",
            account_kind="BlobStorage",
            account_replication_type="LRS",
            account_tier="Standard",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_example.override_logical_id("example")
        azurerm_storage_container_example =
        azurerm.storage_container.StorageContainer(self, "example_3",
            container_access_type="private",
            name="example",
            storage_account_name=cdktf.Token.as_string(azurerm_storage_account_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_container_example.override_logical_id("example")
        azurerm_storage_data_lake_gen2_filesystem_example =
        azurerm.storage_data_lake_gen2_filesystem.StorageDataLakeGen2Filesystem(self, "example_4",
            name="example",
            storage_account_id=cdktf.Token.as_string(azurerm_storage_account_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_data_lake_gen2_filesystem_example.override_logical_id("example")
        azurerm_synapse_workspace_example =
        azurerm.synapse_workspace.SynapseWorkspace(self, "example_5",
            identity=SynapseWorkspaceIdentity(
                type="SystemAssigned"
            ),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sql_administrator_login="sqladminuser",
            sql_administrator_login_password="H@Sh1CoR3!",
            storage_data_lake_gen2_filesystem_id=cdktf.Token.as_string(azurerm_storage_data_lake_gen2_filesystem_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_synapse_workspace_example.override_logical_id("example")
        azurerm_synapse_sql_pool_example =
        azurerm.synapse_sql_pool.SynapseSqlPool(self, "example_6",
            create_mode="Default",
            name="example",
            sku_name="DW100c",
            synapse_workspace_id=cdktf.Token.as_string(azurerm_synapse_workspace_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_synapse_sql_pool_example.override_logical_id("example")
        azurerm_synapse_sql_pool_security_alert_policy_example =
        azurerm.synapse_sql_pool_security_alert_policy.SynapseSqlPoolSecurityAlertPolicy(self, "example_7",
            policy_state="Enabled",
            sql_pool_id=cdktf.Token.as_string(azurerm_synapse_sql_pool_example.id),
            storage_account_access_key=cdktf.Token.as_string(azurerm_storage_account_example.primary_access_key),
            storage_endpoint=cdktf.Token.as_string(azurerm_storage_account_example.primary_blob_endpoint)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_synapse_sql_pool_security_alert_policy_example.override_logical_id("example")
        azurerm_synapse_sql_pool_vulnerability_assessment_example =
        azurerm.synapse_sql_pool_vulnerability_assessment.SynapseSqlPoolVulnerabilityAssessment(self, "example_8",
            sql_pool_security_alert_policy_id=cdktf.Token.as_string(azurerm_synapse_sql_pool_security_alert_policy_example.id),
            storage_account_access_key=cdktf.Token.as_string(azurerm_storage_account_example.primary_access_key),
            storage_container_path="${" + azurerm_storage_account_example.primary_blob_endpoint + "${" + azurerm_storage_container_example.name + "}/"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_synapse_sql_pool_vulnerability_assessment_example.override_logical_id("example")
        azurerm_synapse_sql_pool_vulnerability_assessment_baseline_example =
        azurerm.synapse_sql_pool_vulnerability_assessment_baseline.SynapseSqlPoolVulnerabilityAssessmentBaseline(self, "example_9",
            baseline=[SynapseSqlPoolVulnerabilityAssessmentBaselineBaseline(
                result=["userA", "SELECT"]
            ), SynapseSqlPoolVulnerabilityAssessmentBaselineBaseline(
                result=["userB", "SELECT"]
            )
            ],
            name="default",
            rule_name="VA1017",
            sql_pool_vulnerability_assessment_id=cdktf.Token.as_string(azurerm_synapse_sql_pool_vulnerability_assessment_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_synapse_sql_pool_vulnerability_assessment_baseline_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Synapse SQL Pool Vulnerability Assessment Rule Baseline.

* `rule_name` - (Required) The ID of the vulnerability assessment rule.

* `sql_pool_vulnerability_assessment_id` - (Required) The ID of the Synapse SQL Pool Vulnerability Assessment. Changing this forces a new Synapse SQL Pool Vulnerability Assessment Rule Baseline to be created.

---

* `baseline` - (Optional) One or more `baseline` blocks as defined below.

---

A `baseline` block supports the following:

* `result` - (Required) Specifies a list of rule baseline result.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Synapse SQL Pool Vulnerability Assessment Rule Baseline.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Synapse SQL Pool Vulnerability Assessment Rule Baseline.
* `read` - (Defaults to 5 minutes) Used when retrieving the Synapse SQL Pool Vulnerability Assessment Rule Baseline.
* `update` - (Defaults to 30 minutes) Used when updating the Synapse SQL Pool Vulnerability Assessment Rule Baseline.
* `delete` - (Defaults to 30 minutes) Used when deleting the Synapse SQL Pool Vulnerability Assessment Rule Baseline.

## Import

Synapse SQL Pool Vulnerability Assessment Rule Baselines can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_synapse_sql_pool_vulnerability_assessment_baseline.example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Synapse/workspaces/workspace1/sqlPools/sqlPool1/vulnerabilityAssessments/default/rules/rule1/baselines/baseline1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-93d0ab9df59c95f95a123749559bc682582671fe89ccb02c8f8bd916ecf32fb1 -->