---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_virtual_hub_route_table_route"
description: |-
  Manages a Route in a Virtual Hub Route Table.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_virtual_hub_route_table_route

Manages a Route in a Virtual Hub Route Table.

~> **Note:** Route table routes can managed with this resource, or in-line with the [virtual_hub_route_table](virtual_hub_route_table.html) resource. Using both is not supported.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_virtual_network_example =
        azurerm.virtual_network.VirtualNetwork(self, "example_1",
            address_space=["10.5.0.0/16"],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_example.override_logical_id("example")
        azurerm_virtual_wan_example = azurerm.virtual_wan.VirtualWan(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vwan",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_wan_example.override_logical_id("example")
        azurerm_network_security_group_example =
        azurerm.network_security_group.NetworkSecurityGroup(self, "example_3",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-nsg",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_network_security_group_example.override_logical_id("example")
        azurerm_subnet_example = azurerm.subnet.Subnet(self, "example_4",
            address_prefixes=["10.5.1.0/24"],
            name="examplesubnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_network_name=cdktf.Token.as_string(azurerm_virtual_network_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_subnet_example.override_logical_id("example")
        azurerm_subnet_network_security_group_association_example =
        azurerm.subnet_network_security_group_association.SubnetNetworkSecurityGroupAssociation(self, "example_5",
            network_security_group_id=cdktf.Token.as_string(azurerm_network_security_group_example.id),
            subnet_id=cdktf.Token.as_string(azurerm_subnet_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_subnet_network_security_group_association_example.override_logical_id("example")
        azurerm_virtual_hub_example = azurerm.virtual_hub.VirtualHub(self, "example_6",
            address_prefix="10.0.2.0/24",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vhub",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_wan_id=cdktf.Token.as_string(azurerm_virtual_wan_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_hub_example.override_logical_id("example")
        azurerm_virtual_hub_route_table_example =
        azurerm.virtual_hub_route_table.VirtualHubRouteTable(self, "example_7",
            labels=["label1"],
            name="example-vhubroutetable",
            virtual_hub_id=cdktf.Token.as_string(azurerm_virtual_hub_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_hub_route_table_example.override_logical_id("example")
        azurerm_virtual_hub_connection_example =
        azurerm.virtual_hub_connection.VirtualHubConnection(self, "example_8",
            name="example-vhubconn",
            remote_virtual_network_id=cdktf.Token.as_string(azurerm_virtual_network_example.id),
            routing=VirtualHubConnectionRouting(
                associated_route_table_id=cdktf.Token.as_string(azurerm_virtual_hub_route_table_example.id)
            ),
            virtual_hub_id=cdktf.Token.as_string(azurerm_virtual_hub_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_hub_connection_example.override_logical_id("example")
        azurerm_virtual_hub_route_table_route_example =
        azurerm.virtual_hub_route_table_route.VirtualHubRouteTableRouteA(self, "example_9",
            destinations=["10.0.0.0/16"],
            destinations_type="CIDR",
            name="example-route",
            next_hop=cdktf.Token.as_string(azurerm_virtual_hub_connection_example.id),
            next_hop_type="ResourceId",
            route_table_id=cdktf.Token.as_string(azurerm_virtual_hub_route_table_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_hub_route_table_route_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `route_table_id` - (Required) The ID of the Virtual Hub Route Table to link this route to. Changing this forces a new resource to be created.

* `name` - (Required) The name which should be used for this route. Changing this forces a new resource to be created.

* `destinations` - (Required) A list of destination addresses for this route.

* `destinations_type` - (Required) The type of destinations. Possible values are `CIDR`, `ResourceId` and `Service`.

* `next_hop` - (Required) The next hop's resource ID.

* `next_hop_type` - (Optional) The type of next hop. Currently the only possible value is `ResourceId`. Defaults to `ResourceId`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Virtual Hub Route Table.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Virtual Hub Route Table.
* `read` - (Defaults to 5 minutes) Used when retrieving the Virtual Hub Route Table.
* `update` - (Defaults to 30 minutes) Used when updating the Virtual Hub Route Table.
* `delete` - (Defaults to 30 minutes) Used when deleting the Virtual Hub Route Table.

## Import

Virtual Hub Route Table Routes can be imported using `<Route Table Resource Id>/routes/<Route Name>`, e.g.

```shell
terraform import azurerm_virtual_hub_route_table_route.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/virtualHubs/virtualHub1/hubRouteTables/routeTable1/routes/routeName
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-47e67f82de150912185b339c1b33d474e81e890bfc44d60af1cac55b6eb10dee -->