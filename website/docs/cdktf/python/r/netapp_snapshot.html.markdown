---
subcategory: "NetApp"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_netapp_snapshot"
description: |-
  Manages a NetApp Snapshot.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_netapp_snapshot

Manages a NetApp Snapshot.

## NetApp Snapshot Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_virtual_network_example =
        azurerm.virtual_network.VirtualNetwork(self, "example_1",
            address_space=["10.0.0.0/16"],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-virtualnetwork",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_example.override_logical_id("example")
        azurerm_netapp_account_example = azurerm.netapp_account.NetappAccount(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-netappaccount",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_netapp_account_example.override_logical_id("example")
        azurerm_netapp_pool_example = azurerm.netapp_pool.NetappPool(self, "example_3",
            account_name=cdktf.Token.as_string(azurerm_netapp_account_example.name),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-netapppool",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            service_level="Premium",
            size_in_tb=cdktf.Token.as_number("4")
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_netapp_pool_example.override_logical_id("example")
        azurerm_subnet_example = azurerm.subnet.Subnet(self, "example_4",
            address_prefixes=["10.0.2.0/24"],
            delegation=[SubnetDelegation(
                name="netapp",
                service_delegation=SubnetDelegationServiceDelegation(
                    actions=["Microsoft.Network/networkinterfaces/*", "Microsoft.Network/virtualNetworks/subnets/join/action"
                    ],
                    name="Microsoft.Netapp/volumes"
                )
            )
            ],
            name="example-subnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_network_name=cdktf.Token.as_string(azurerm_virtual_network_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_subnet_example.override_logical_id("example")
        azurerm_netapp_volume_example = azurerm.netapp_volume.NetappVolume(self, "example_5",
            account_name=cdktf.Token.as_string(azurerm_netapp_account_example.name),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-netappvolume",
            pool_name=cdktf.Token.as_string(azurerm_netapp_pool_example.name),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            service_level="Premium",
            storage_quota_in_gb=cdktf.Token.as_number("100"),
            subnet_id=cdktf.Token.as_string(azurerm_subnet_example.id),
            volume_path="my-unique-file-path"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_netapp_volume_example.override_logical_id("example")
        azurerm_netapp_snapshot_example =
        azurerm.netapp_snapshot.NetappSnapshot(self, "example_6",
            account_name=cdktf.Token.as_string(azurerm_netapp_account_example.name),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-netappsnapshot",
            pool_name=cdktf.Token.as_string(azurerm_netapp_pool_example.name),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            volume_name=cdktf.Token.as_string(azurerm_netapp_volume_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_netapp_snapshot_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the NetApp Snapshot. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) The name of the resource group where the NetApp Snapshot should be created. Changing this forces a new resource to be created.

* `account_name` - (Required) The name of the NetApp account in which the NetApp Pool should be created. Changing this forces a new resource to be created.

* `pool_name` - (Required) The name of the NetApp pool in which the NetApp Volume should be created. Changing this forces a new resource to be created.

* `volume_name` - (Required) The name of the NetApp volume in which the NetApp Snapshot should be created. Changing this forces a new resource to be created.

* `location` - (Required) Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.

---

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the NetApp Snapshot.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the NetApp Snapshot.
* `update` - (Defaults to 30 minutes) Used when updating the NetApp Snapshot.
* `read` - (Defaults to 5 minutes) Used when retrieving the NetApp Snapshot.
* `delete` - (Defaults to 30 minutes) Used when deleting the NetApp Snapshot.

## Import

NetApp Snapshot can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_netapp_snapshot.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.NetApp/netAppAccounts/account1/capacityPools/pool1/volumes/volume1/snapshots/snapshot1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-59e9a0fc489953e9f50ab360ecb8d12233dc95fe218aa8275a8cbcbd98ce4e27 -->