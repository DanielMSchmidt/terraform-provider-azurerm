---
subcategory: "Messaging"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_iothub_endpoint_servicebus_queue"
description: |-
  Manages an IotHub ServiceBus Queue Endpoint
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_iothub_endpoint_servicebus_queue

Manages an IotHub ServiceBus Queue Endpoint

~> **NOTE:** Endpoints can be defined either directly on the `azurerm_iothub` resource, or using the `azurerm_iothub_endpoint_*` resources - but the two ways of defining the endpoints cannot be used together. If both are used against the same IoTHub, spurious changes will occur. Also, defining a `azurerm_iothub_endpoint_*` resource and another endpoint of a different type directly on the `azurerm_iothub` resource is not supported.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_servicebus_namespace_example =
        azurerm.servicebus_namespace.ServicebusNamespace(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="exampleNamespace",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku="Standard"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_servicebus_namespace_example.override_logical_id("example")
        azurerm_servicebus_queue_example =
        azurerm.servicebus_queue.ServicebusQueue(self, "example_2",
            enable_partitioning=True,
            name="exampleQueue",
            namespace_id=cdktf.Token.as_string(azurerm_servicebus_namespace_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_servicebus_queue_example.override_logical_id("example")
        azurerm_servicebus_queue_authorization_rule_example =
        azurerm.servicebus_queue_authorization_rule.ServicebusQueueAuthorizationRule(self, "example_3",
            listen=False,
            manage=False,
            name="exampleRule",
            queue_id=cdktf.Token.as_string(azurerm_servicebus_queue_example.id),
            send=True
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_servicebus_queue_authorization_rule_example.override_logical_id("example")
        azurerm_iothub_example = azurerm.iothub.Iothub(self, "example_4",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="exampleIothub",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku=IothubSku(
                capacity=cdktf.Token.as_number("1"),
                name="B1"
            ),
            tags={
                "purpose": "example"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_iothub_example.override_logical_id("example")
        azurerm_iothub_endpoint_servicebus_queue_example =
        azurerm.iothub_endpoint_servicebus_queue.IothubEndpointServicebusQueue(self, "example_5",
            connection_string=cdktf.Token.as_string(azurerm_servicebus_queue_authorization_rule_example.primary_connection_string),
            iothub_id=cdktf.Token.as_string(azurerm_iothub_example.id),
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_iothub_endpoint_servicebus_queue_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the endpoint. The name must be unique across endpoint types. The following names are reserved: `events`, `operationsMonitoringEvents`, `fileNotifications` and `$default`. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) The name of the resource group under which the Service Bus Queue has been created. Changing this forces a new resource to be created.

* `authentication_type` - (Optional) Type used to authenticate against the Service Bus Queue endpoint. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.

* `identity_id` - (Optional) ID of the User Managed Identity used to authenticate against the Service Bus Queue endpoint.

-> **NOTE:** `identity_id` can only be specified when `authentication_type` is `identityBased`. It must be one of the `identity_ids` of the Iot Hub. If not specified when `authentication_type` is `identityBased`, System Assigned Managed Identity of the Iot Hub will be used.

* `endpoint_uri` - (Optional) URI of the Service Bus endpoint. This attribute can only be specified and is mandatory when `authentication_type` is `identityBased`.

* `entity_path` - (Optional) Name of the Service Bus Queue. This attribute can only be specified and is mandatory when `authentication_type` is `identityBased`.

* `connection_string` - (Optional) The connection string for the endpoint. This attribute can only be specified and is mandatory when `authentication_type` is `keyBased`.

* `iothub_id` - (Required) The IoTHub ID for the endpoint. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the IoTHub ServiceBus Queue Endpoint.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the IotHub ServiceBus Queue Endpoint.
* `update` - (Defaults to 30 minutes) Used when updating the IotHub ServiceBus Queue Endpoint.
* `read` - (Defaults to 5 minutes) Used when retrieving the IotHub ServiceBus Queue Endpoint.
* `delete` - (Defaults to 30 minutes) Used when deleting the IotHub ServiceBus Queue Endpoint.

## Import

IoTHub ServiceBus Queue Endpoint can be imported using the `resource id`, e.g.
g
```shell
terraform import azurerm_iothub_endpoint_servicebus_queue.servicebus_queue1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Devices/iotHubs/hub1/endpoints/servicebusqueue_endpoint1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-9c33ff2d0b545d3f4e4f611cbce3c5e3665c760a1b64be8257bff91ac408fdc1 -->