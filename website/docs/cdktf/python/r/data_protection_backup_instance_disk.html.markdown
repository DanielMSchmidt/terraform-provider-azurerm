---
subcategory: "DataProtection"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_data_protection_backup_instance_disk"
description: |-
  Manages a Backup Instance to back up Disk.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_data_protection_backup_instance_disk

Manages a Backup Instance to back up Disk.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_data_protection_backup_vault_example =
        azurerm.data_protection_backup_vault.DataProtectionBackupVault(self, "example_1",
            datastore_type="VaultStore",
            identity=DataProtectionBackupVaultIdentity(
                type="SystemAssigned"
            ),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-backup-vault",
            redundancy="LocallyRedundant",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_data_protection_backup_vault_example.override_logical_id("example")
        azurerm_managed_disk_example = azurerm.managed_disk.ManagedDisk(self, "example_2",
            create_option="Empty",
            disk_size_gb=cdktf.Token.as_number("1"),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-disk",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            storage_account_type="Standard_LRS"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_managed_disk_example.override_logical_id("example")
        azurerm.role_assignment.RoleAssignment(self, "example1",
            principal_id=cdktf.Token.as_string(
                cdktf.property_access(azurerm_data_protection_backup_vault_example.identity, ["0", "principal_id"
                ])),
            role_definition_name="Disk Snapshot Contributor",
            scope=cdktf.Token.as_string(azurerm_resource_group_example.id)
        )
        azurerm.role_assignment.RoleAssignment(self, "example2",
            principal_id=cdktf.Token.as_string(
                cdktf.property_access(azurerm_data_protection_backup_vault_example.identity, ["0", "principal_id"
                ])),
            role_definition_name="Disk Backup Reader",
            scope=cdktf.Token.as_string(azurerm_managed_disk_example.id)
        )
        azurerm_data_protection_backup_policy_disk_example =
        azurerm.data_protection_backup_policy_disk.DataProtectionBackupPolicyDisk(self, "example_5",
            backup_repeating_time_intervals=["R/2021-05-19T06:33:16+00:00/PT4H"],
            default_retention_duration="P7D",
            name="example-backup-policy",
            vault_id=cdktf.Token.as_string(azurerm_data_protection_backup_vault_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_data_protection_backup_policy_disk_example.override_logical_id("example")
        azurerm_data_protection_backup_instance_disk_example =
        azurerm.data_protection_backup_instance_disk.DataProtectionBackupInstanceDisk(self, "example_6",
            backup_policy_id=cdktf.Token.as_string(azurerm_data_protection_backup_policy_disk_example.id),
            disk_id=cdktf.Token.as_string(azurerm_managed_disk_example.id),
            location=cdktf.Token.as_string(azurerm_data_protection_backup_vault_example.location),
            name="example-backup-instance",
            snapshot_resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            vault_id=cdktf.Token.as_string(azurerm_data_protection_backup_vault_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_data_protection_backup_instance_disk_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Backup Instance Disk. Changing this forces a new Backup Instance Disk to be created.

* `location` - (Required) The Azure Region where the Backup Instance Disk should exist. Changing this forces a new Backup Instance Disk to be created.

* `vault_id` - (Required) The ID of the Backup Vault within which the Backup Instance Disk should exist. Changing this forces a new Backup Instance Disk to be created.

* `disk_id` - (Required) The ID of the source Disk. Changing this forces a new Backup Instance Disk to be created.

* `snapshot_resource_group_name` - (Required) The name of the Resource Group where snapshots are stored. Changing this forces a new Backup Instance Disk to be created.

* `backup_policy_id` - (Required) The ID of the Backup Policy.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Backup Instance Disk.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Backup Instance Disk.
* `read` - (Defaults to 5 minutes) Used when retrieving the Backup Instance Disk.
* `update` - (Defaults to 30 minutes) Used when updating the Backup Instance Disk.
* `delete` - (Defaults to 30 minutes) Used when deleting the Backup Instance Disk.

## Import

Backup Instance Disks can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_data_protection_backup_instance_disk.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1/backupInstances/backupInstance1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-233b3b21ba1a55addb06d601b7d7477ac8b5b74cda73f5b509619af8e68b45d7 -->