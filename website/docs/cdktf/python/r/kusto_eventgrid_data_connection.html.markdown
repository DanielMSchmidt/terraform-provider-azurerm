---
subcategory: "Data Explorer"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_kusto_eventgrid_data_connection"
description: |-
  Manages Kusto / Data Explorer Event Grid Data Connection
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_kusto_eventgrid_data_connection

Manages a Kusto (also known as Azure Data Explorer) Event Grid Data Connection

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_storage_account_example =
        azurerm.storage_account.StorageAccount(self, "example_1",
            account_replication_type="GRS",
            account_tier="Standard",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="storageaccountname",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_example.override_logical_id("example")
        azurerm_eventhub_namespace_example =
        azurerm.eventhub_namespace.EventhubNamespace(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="eventhubnamespace-example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku="Standard"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_eventhub_namespace_example.override_logical_id("example")
        azurerm_kusto_cluster_example = azurerm.kusto_cluster.KustoCluster(self, "example_3",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplekustocluster",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku=KustoClusterSku(
                capacity=2,
                name="Standard_D13_v2"
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_kusto_cluster_example.override_logical_id("example")
        azurerm_kusto_database_example = azurerm.kusto_database.KustoDatabase(self, "example_4",
            cluster_name=cdktf.Token.as_string(azurerm_kusto_cluster_example.name),
            hot_cache_period="P7D",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-kusto-database",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            soft_delete_period="P31D"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_kusto_database_example.override_logical_id("example")
        azurerm_eventhub_example = azurerm.eventhub.Eventhub(self, "example_5",
            message_retention=1,
            name="eventhub-example",
            namespace_name=cdktf.Token.as_string(azurerm_eventhub_namespace_example.name),
            partition_count=1,
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_eventhub_example.override_logical_id("example")
        azurerm_eventhub_consumer_group_example =
        azurerm.eventhub_consumer_group.EventhubConsumerGroup(self, "example_6",
            eventhub_name=cdktf.Token.as_string(azurerm_eventhub_example.name),
            name="consumergroup-example",
            namespace_name=cdktf.Token.as_string(azurerm_eventhub_namespace_example.name),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_eventhub_consumer_group_example.override_logical_id("example")
        azurerm_eventgrid_event_subscription_example =
        azurerm.eventgrid_event_subscription.EventgridEventSubscription(self, "example_7",
            event_delivery_schema="EventGridSchema",
            eventhub_endpoint_id=cdktf.Token.as_string(azurerm_eventhub_example.id),
            included_event_types=["Microsoft.Storage.BlobCreated", "Microsoft.Storage.BlobRenamed"
            ],
            name="eventgrid-example",
            retry_policy=EventgridEventSubscriptionRetryPolicy(
                event_time_to_live=144,
                max_delivery_attempts=10
            ),
            scope=cdktf.Token.as_string(azurerm_storage_account_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_eventgrid_event_subscription_example.override_logical_id("example")
        azurerm_kusto_eventgrid_data_connection_example =
        azurerm.kusto_eventgrid_data_connection.KustoEventgridDataConnection(self, "example_8",
            cluster_name=cdktf.Token.as_string(azurerm_kusto_cluster_example.name),
            data_format="JSON",
            database_name=cdktf.Token.as_string(azurerm_kusto_database_example.name),
            depends_on=[azurerm_eventgrid_event_subscription_example],
            eventhub_consumer_group_name=cdktf.Token.as_string(azurerm_eventhub_consumer_group_example.name),
            eventhub_id=cdktf.Token.as_string(azurerm_eventhub_example.id),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            mapping_rule_name="my-table-mapping",
            name="my-kusto-eventgrid-data-connection",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            storage_account_id=cdktf.Token.as_string(azurerm_storage_account_example.id),
            table_name="my-table"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_kusto_eventgrid_data_connection_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Kusto Event Grid Data Connection to create. Changing this forces a new resource to be created.

* `location` - (Required) The location where the Kusto Database should be created. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) Specifies the Resource Group where the Kusto Database should exist. Changing this forces a new resource to be created.

* `cluster_name` - (Required) Specifies the name of the Kusto Cluster this data connection will be added to. Changing this forces a new resource to be created.

* `database_name` - (Required) Specifies the name of the Kusto Database this data connection will be added to. Changing this forces a new resource to be created.

* `storage_account_id` - (Required) Specifies the resource id of the Storage Account this data connection will use for ingestion. Changing this forces a new resource to be created.

* `eventhub_id` - (Required) Specifies the resource id of the Event Hub this data connection will use for ingestion. Changing this forces a new resource to be created.

* `eventhub_consumer_group_name` - (Required) Specifies the Event Hub consumer group this data connection will use for ingestion. Changing this forces a new resource to be created.

* `blob_storage_event_type` - (Optional) Specifies the blob storage event type that needs to be processed. Possible Values are `Microsoft.Storage.BlobCreated` and `Microsoft.Storage.BlobRenamed`. Defaults to `Microsoft.Storage.BlobCreated`.

* `data_format` - (Optional) Specifies the data format of the EventHub messages. Allowed values: `APACHEAVRO`, `AVRO`, `CSV`, `JSON`, `MULTIJSON`, `ORC`, `PARQUET`, `PSV`, `RAW`, `SCSV`, `SINGLEJSON`, `SOHSV`, `TSV`, `TSVE`, `TXT` and `W3CLOGFILE`.

* `database_routing_type` - (Optional) Indication for database routing information from the data connection, by default only database routing information is allowed. Allowed values: `Single`, `Multi`. Changing this forces a new resource to be created.

* `eventgrid_resource_id` - (Optional) The resource ID of the event grid that is subscribed to the storage account events.

* `managed_identity_resource_id` - (Optional) Empty for non-managed identity based data connection. For system assigned identity, provide cluster resource Id. For user assigned identity (UAI) provide the UAI resource Id.

* `mapping_rule_name` - (Optional) Specifies the mapping rule used for the message ingestion. Mapping rule must exist before resource is created.

* `table_name` - (Optional) Specifies the target table name used for the message ingestion. Table must exist before resource is created.

* `skip_first_record` - (Optional) is the first record of every file ignored? Defaults to `false`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Kusto Event Grid Data Connection.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 60 minutes) Used when creating the Kusto Event Grid Data Connection.
* `update` - (Defaults to 60 minutes) Used when updating the Kusto Event Grid Data Connection.
* `read` - (Defaults to 5 minutes) Used when retrieving the Kusto Event Grid Data Connection.
* `delete` - (Defaults to 60 minutes) Used when deleting the Kusto Event Grid Data Connection.

## Import

Kusto Event Grid Data Connections can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_kusto_eventgrid_data_connection.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Kusto/clusters/cluster1/databases/database1/dataConnections/dataConnection1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-2cda01cd6a696bb6305d4dcf7d1e96144783f72242c38c73cfe496c4d04ec1b9 -->