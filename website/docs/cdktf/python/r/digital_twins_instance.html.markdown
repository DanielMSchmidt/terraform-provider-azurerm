---
subcategory: "Digital Twins"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_digital_twins_instance"
description: |-
  Manages a Digital Twins instance.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_digital_twins_instance

Manages a Digital Twins instance.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm.provider.AzurermProvider(self, "azurerm",
            features=AzurermProviderFeatures()
        )
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example_resources"
        )
        azurerm_digital_twins_instance_example =
        azurerm.digital_twins_instance.DigitalTwinsInstance(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-DT",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            tags={
                "foo": "bar"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_digital_twins_instance_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Digital Twins instance. Changing this forces a new Digital Twins instance to be created.

* `resource_group_name` - (Required) The name of the Resource Group where the Digital Twins instance should exist. Changing this forces a new Digital Twins instance to be created.

* `location` - (Required) The Azure Region where the Digital Twins instance should exist. Changing this forces a new Digital Twins instance to be created.
*
* `identity` - (Optional) An `identity` block as defined below.

* `tags` - (Optional) A mapping of tags which should be assigned to the Digital Twins instance.

---

An `identity` block supports the following:

* `type` - (Required) The type of Managed Service Identity that is configured on this Digital Twins instance. The only possible value is `SystemAssigned`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Digital Twins instance.

* `host_name` - The API endpoint to work with this Digital Twins instance.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Digital Twins instance.
* `read` - (Defaults to 5 minutes) Used when retrieving the Digital Twins instance.
* `update` - (Defaults to 30 minutes) Used when updating the Digital Twins instance.
* `delete` - (Defaults to 30 minutes) Used when deleting the Digital Twins instance.

## Import

Digital Twins instances can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_digital_twins_instance.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DigitalTwins/digitalTwinsInstances/dt1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-85128f03c743f7867cac2f9b7e1a8ca1e3674ddb13a74620f350cd193c204bde -->