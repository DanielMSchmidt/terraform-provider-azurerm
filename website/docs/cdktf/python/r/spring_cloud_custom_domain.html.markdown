---
subcategory: "Spring Cloud"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_spring_cloud_custom_domain"
description: |-
  Manages an Azure Spring Cloud Custom Domain.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_spring_cloud_custom_domain

Manages an Azure Spring Cloud Custom Domain.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm.provider.AzurermProvider(self, "azurerm",
            features=AzurermProviderFeatures()
        )
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="rg-example"
        )
        azurerm_spring_cloud_service_example =
        azurerm.spring_cloud_service.SpringCloudService(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-springcloud",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_spring_cloud_service_example.override_logical_id("example")
        data_azurerm_dns_zone_example =
        azurerm.data_azurerm_dns_zone.DataAzurermDnsZone(self, "example_3",
            name="mydomain.com",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_azurerm_dns_zone_example.override_logical_id("example")
        azurerm_spring_cloud_app_example =
        azurerm.spring_cloud_app.SpringCloudApp(self, "example_4",
            name="example-springcloudapp",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            service_name=cdktf.Token.as_string(azurerm_spring_cloud_service_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_spring_cloud_app_example.override_logical_id("example")
        azurerm_dns_cname_record_example =
        azurerm.dns_cname_record.DnsCnameRecord(self, "example_5",
            name="record1",
            record=cdktf.Token.as_string(azurerm_spring_cloud_app_example.fqdn),
            resource_group_name=cdktf.Token.as_string(data_azurerm_dns_zone_example.resource_group_name),
            ttl=300,
            zone_name=cdktf.Token.as_string(data_azurerm_dns_zone_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_dns_cname_record_example.override_logical_id("example")
        azurerm_spring_cloud_custom_domain_example =
        azurerm.spring_cloud_custom_domain.SpringCloudCustomDomain(self, "example_6",
            name=cdktf.Fn.join(".",
                cdktf.Token.as_list([azurerm_dns_cname_record_example.name, azurerm_dns_cname_record_example.zone_name
                ])),
            spring_cloud_app_id=cdktf.Token.as_string(azurerm_spring_cloud_app_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_spring_cloud_custom_domain_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Spring Cloud Custom Domain. Changing this forces a new resource to be created.

* `spring_cloud_app_id` - (Required) Specifies the resource ID of the Spring Cloud Application. Changing this forces a new resource to be created.

* `certificate_name` - (Optional) Specifies the name of the Spring Cloud Certificate that binds to the Spring Cloud Custom Domain. Required when `thumbprint` is specified

* `thumbprint` - (Optional) Specifies the thumbprint of the Spring Cloud Certificate that binds to the Spring Cloud Custom Domain. Required when `certificate_name` is specified. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Spring Cloud Custom Domain.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Spring Cloud Custom Domain.
* `read` - (Defaults to 5 minutes) Used when retrieving the Spring Cloud Custom Domain.
* `update` - (Defaults to 30 minutes) Used when updating the Spring Cloud Custom Domain.
* `delete` - (Defaults to 30 minutes) Used when deleting the Spring Cloud Custom Domain.

## Import

Spring Cloud Custom Domain can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_spring_cloud_custom_domain.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.AppPlatform/spring/spring1/apps/app1/domains/domain.com
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-65c5a36b3ed9fc0e738689ddba2435a3aa491e2b7834066d0ee9d05d25df6017 -->