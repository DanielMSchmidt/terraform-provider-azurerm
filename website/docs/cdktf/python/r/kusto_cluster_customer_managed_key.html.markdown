---
subcategory: "Data Explorer"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_kusto_cluster_customer_managed_key"
description: |-
  Manages a Customer Managed Key for a Kusto Cluster.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_kusto_cluster_customer_managed_key

Manages a Customer Managed Key for a Kusto Cluster.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        data_azurerm_client_config_current =
        azurerm.data_azurerm_client_config.DataAzurermClientConfig(self, "current")
        azurerm_key_vault_example = azurerm.key_vault.KeyVault(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplekv",
            purge_protection_enabled=True,
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="standard",
            tenant_id=cdktf.Token.as_string(data_azurerm_client_config_current.tenant_id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_key_vault_example.override_logical_id("example")
        azurerm_key_vault_access_policy_client =
        azurerm.key_vault_access_policy.KeyVaultAccessPolicyA(self, "client",
            key_permissions=["Get", "List", "Create", "Delete", "Recover", "GetRotationPolicy"
            ],
            key_vault_id=cdktf.Token.as_string(azurerm_key_vault_example.id),
            object_id=cdktf.Token.as_string(data_azurerm_client_config_current.object_id),
            tenant_id=cdktf.Token.as_string(data_azurerm_client_config_current.tenant_id)
        )
        azurerm_kusto_cluster_example = azurerm.kusto_cluster.KustoCluster(self, "example_4",
            identity=KustoClusterIdentity(
                type="SystemAssigned"
            ),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="kustocluster",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku=KustoClusterSku(
                capacity=2,
                name="Standard_D13_v2"
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_kusto_cluster_example.override_logical_id("example")
        azurerm_key_vault_access_policy_cluster =
        azurerm.key_vault_access_policy.KeyVaultAccessPolicyA(self, "cluster",
            key_permissions=["Get", "UnwrapKey", "WrapKey"],
            key_vault_id=cdktf.Token.as_string(azurerm_key_vault_example.id),
            object_id=cdktf.Token.as_string(
                cdktf.property_access(azurerm_kusto_cluster_example.identity, ["0", "principal_id"
                ])),
            tenant_id=cdktf.Token.as_string(data_azurerm_client_config_current.tenant_id)
        )
        azurerm_key_vault_key_example = azurerm.key_vault_key.KeyVaultKey(self, "example_6",
            depends_on=[azurerm_key_vault_access_policy_client, azurerm_key_vault_access_policy_cluster
            ],
            key_opts=["decrypt", "encrypt", "sign", "unwrapKey", "verify", "wrapKey"
            ],
            key_size=2048,
            key_type="RSA",
            key_vault_id=cdktf.Token.as_string(azurerm_key_vault_example.id),
            name="tfex-key"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_key_vault_key_example.override_logical_id("example")
        azurerm_kusto_cluster_customer_managed_key_example =
        azurerm.kusto_cluster_customer_managed_key.KustoClusterCustomerManagedKey(self, "example_7",
            cluster_id=cdktf.Token.as_string(azurerm_kusto_cluster_example.id),
            key_name=cdktf.Token.as_string(azurerm_key_vault_key_example.name),
            key_vault_id=cdktf.Token.as_string(azurerm_key_vault_example.id),
            key_version=cdktf.Token.as_string(azurerm_key_vault_key_example.version)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_kusto_cluster_customer_managed_key_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `cluster_id` - (Required) The ID of the Kusto Cluster. Changing this forces a new resource to be created.

* `key_vault_id` - (Required) The ID of the Key Vault. 

* `key_name` - (Required) The name of Key Vault Key.

* `key_version` - (Optional) The version of Key Vault Key.

* `user_identity` - (Optional) The user assigned identity that has access to the Key Vault Key. If not specified, system assigned identity will be used.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Kusto Cluster.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Kusto Cluster Customer Managed Key.
* `read` - (Defaults to 5 minutes) Used when retrieving the Kusto Cluster Customer Managed Key.
* `update` - (Defaults to 30 minutes) Used when updating the Kusto Cluster Customer Managed Key.
* `delete` - (Defaults to 30 minutes) Used when deleting the Kusto Cluster Customer Managed Key.

## Import

Customer Managed Keys for a Kusto Cluster can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_kusto_cluster_customer_managed_key.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Kusto/clusters/cluster1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-226ee0cc9db49fdef4a7102b1b5a656cc85811025a8ab4fa4f04f8073746a2ed -->