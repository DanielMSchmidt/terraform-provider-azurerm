---
subcategory: "API Management"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_api_management_logger"
description: |-
  Manages a Logger within an API Management Service.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_api_management_logger

Manages a Logger within an API Management Service.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_api_management_example = azurerm.api_management.ApiManagement(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-apim",
            publisher_email="company@terraform.io",
            publisher_name="My Company",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="Developer_1"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_api_management_example.override_logical_id("example")
        azurerm_application_insights_example =
        azurerm.application_insights.ApplicationInsights(self, "example_2",
            application_type="other",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-appinsights",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_application_insights_example.override_logical_id("example")
        azurerm_api_management_logger_example =
        azurerm.api_management_logger.ApiManagementLogger(self, "example_3",
            api_management_name=cdktf.Token.as_string(azurerm_api_management_example.name),
            application_insights=ApiManagementLoggerApplicationInsights(
                instrumentation_key=cdktf.Token.as_string(azurerm_application_insights_example.instrumentation_key)
            ),
            name="example-logger",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            resource_id=cdktf.Token.as_string(azurerm_application_insights_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_api_management_logger_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of this Logger, which must be unique within the API Management Service. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.

* `api_management_name` - (Required) The name of the API Management Service. Changing this forces a new resource to be created.

* `application_insights` - (Optional) An `application_insights` block as documented below. Changing this forces a new resource to be created.

* `buffered` - (Optional) Specifies whether records should be buffered in the Logger prior to publishing. Defaults to `true`.

* `description` - (Optional) A description of this Logger.

* `eventhub` - (Optional) An `eventhub` block as documented below. Changing this forces a new resource to be created.

* `resource_id` - (Optional) The target resource id which will be linked in the API-Management portal page. Changing this forces a new resource to be created.

---

An `application_insights` block supports the following:

* `instrumentation_key` - (Required) The instrumentation key used to push data to Application Insights.

---

An `eventhub` block supports the following:

* `name` - (Required) The name of an EventHub.

* `connection_string` - (Required) The connection string of an EventHub Namespace.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the API Management Logger.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the API Management Logger.
* `update` - (Defaults to 30 minutes) Used when updating the API Management Logger.
* `read` - (Defaults to 5 minutes) Used when retrieving the API Management Logger.
* `delete` - (Defaults to 30 minutes) Used when deleting the API Management Logger.

## Import

API Management Loggers can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_api_management_logger.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example-rg/providers/Microsoft.ApiManagement/service/example-apim/loggers/example-logger
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-33351da403a05488dd3e57fc7bc9791563a19636c132d8cf13a21d252af03011 -->