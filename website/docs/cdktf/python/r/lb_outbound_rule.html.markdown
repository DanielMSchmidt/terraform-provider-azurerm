---
subcategory: "Load Balancer"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_lb_outbound_rule"
description: |-
  Manages a Load Balancer Outbound Rule.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_lb_outbound_rule

Manages a Load Balancer Outbound Rule.

~> **NOTE** When using this resource, the Load Balancer needs to have a FrontEnd IP Configuration and a Backend Address Pool Attached.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="LoadBalancerRG"
        )
        azurerm_public_ip_example = azurerm.public_ip.PublicIp(self, "example_1",
            allocation_method="Static",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="PublicIPForLB",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_public_ip_example.override_logical_id("example")
        azurerm_lb_example = azurerm.lb.Lb(self, "example_2",
            frontend_ip_configuration=[LbFrontendIpConfiguration(
                name="PublicIPAddress",
                public_ip_address_id=cdktf.Token.as_string(azurerm_public_ip_example.id)
            )
            ],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="TestLoadBalancer",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_lb_example.override_logical_id("example")
        azurerm_lb_backend_address_pool_example =
        azurerm.lb_backend_address_pool.LbBackendAddressPool(self, "example_3",
            loadbalancer_id=cdktf.Token.as_string(azurerm_lb_example.id),
            name="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_lb_backend_address_pool_example.override_logical_id("example")
        azurerm_lb_outbound_rule_example =
        azurerm.lb_outbound_rule.LbOutboundRule(self, "example_4",
            backend_address_pool_id=cdktf.Token.as_string(azurerm_lb_backend_address_pool_example.id),
            frontend_ip_configuration=[LbOutboundRuleFrontendIpConfiguration(
                name="PublicIPAddress"
            )
            ],
            loadbalancer_id=cdktf.Token.as_string(azurerm_lb_example.id),
            name="OutboundRule",
            protocol="Tcp"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_lb_outbound_rule_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Outbound Rule. Changing this forces a new resource to be created.
* `loadbalancer_id` - (Required) The ID of the Load Balancer in which to create the Outbound Rule. Changing this forces a new resource to be created.
* `frontend_ip_configuration` - (Optional) One or more `frontend_ip_configuration` blocks as defined below.
* `backend_address_pool_id` - (Required) The ID of the Backend Address Pool. Outbound traffic is randomly load balanced across IPs in the backend IPs.
* `protocol` - (Required) The transport protocol for the external endpoint. Possible values are `Udp`, `Tcp` or `All`.
* `enable_tcp_reset` - (Optional) Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This element is only used when the protocol is set to TCP.
* `allocated_outbound_ports` - (Optional) The number of outbound ports to be used for NAT. Defaults to `1024`.
* `idle_timeout_in_minutes` - (Optional) The timeout for the TCP idle connection Defaults to `4`.

---

A `frontend_ip_configuration` block supports the following:

* `name` - (Required) The name of the Frontend IP Configuration.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Load Balancer Outbound Rule.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Load Balancer Outbound Rule.
* `update` - (Defaults to 30 minutes) Used when updating the Load Balancer Outbound Rule.
* `read` - (Defaults to 5 minutes) Used when retrieving the Load Balancer Outbound Rule.
* `delete` - (Defaults to 30 minutes) Used when deleting the Load Balancer Outbound Rule.

## Import

Load Balancer Outbound Rules can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_lb_outbound_rule.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/loadBalancers/lb1/outboundRules/rule1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-7ce5d4ba23e7ed070efa79901dd65d97efd2cabd3db4a08d950fb1d77959f9bd -->