---
subcategory: "Data Explorer"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_kusto_attached_database_configuration"
description: |-
  Manages Kusto / Data Explorer Attached Database Configuration
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_kusto_attached_database_configuration

Manages a Kusto (also known as Azure Data Explorer) Attached Database Configuration

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="my-kusto-rg"
        )
        azurerm_kusto_cluster_followed_cluster =
        azurerm.kusto_cluster.KustoCluster(self, "followed_cluster",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="cluster2",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku=KustoClusterSku(
                capacity=1,
                name="Dev(No SLA)_Standard_D11_v2"
            )
        )
        azurerm_kusto_cluster_follower_cluster =
        azurerm.kusto_cluster.KustoCluster(self, "follower_cluster",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="cluster1",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku=KustoClusterSku(
                capacity=1,
                name="Dev(No SLA)_Standard_D11_v2"
            )
        )
        azurerm_kusto_database_example = azurerm.kusto_database.KustoDatabase(self, "example_3",
            cluster_name=cdktf.Token.as_string(azurerm_kusto_cluster_follower_cluster.name),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_kusto_database_example.override_logical_id("example")
        azurerm.kusto_database.KustoDatabase(self, "followed_database",
            cluster_name=cdktf.Token.as_string(azurerm_kusto_cluster_follower_cluster.name),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="my-followed-database",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        azurerm_kusto_attached_database_configuration_example =
        azurerm.kusto_attached_database_configuration.KustoAttachedDatabaseConfiguration(self, "example_5",
            cluster_name=cdktf.Token.as_string(azurerm_kusto_cluster_follower_cluster.name),
            cluster_resource_id=cdktf.Token.as_string(azurerm_kusto_cluster_followed_cluster.id),
            database_name=cdktf.Token.as_string(azurerm_kusto_database_example.name),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="configuration1",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sharing=KustoAttachedDatabaseConfigurationSharing(
                external_tables_to_exclude=["ExternalTable2"],
                external_tables_to_include=["ExternalTable1"],
                materialized_views_to_exclude=["MaterializedViewTable2"],
                materialized_views_to_include=["MaterializedViewTable1"],
                tables_to_exclude=["Table2"],
                tables_to_include=["Table1"]
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_kusto_attached_database_configuration_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Kusto Attached Database Configuration to create. Changing this forces a new resource to be created.

* `location` - (Required) Specifies the location of the Kusto Cluster for which the configuration will be created. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) Specifies the resource group of the Kusto Cluster for which the configuration will be created. Changing this forces a new resource to be created.

* `cluster_name` - (Required) Specifies the name of the Kusto Cluster for which the configuration will be created. Changing this forces a new resource to be created.

* `cluster_resource_id` - (Required) The resource id of the cluster where the databases you would like to attach reside. Changing this forces a new resource to be created.

* `database_name` - (Required) The name of the database which you would like to attach, use * if you want to follow all current and future databases. Changing this forces a new resource to be created.

* `default_principal_modification_kind` - (Optional) The default principals modification kind. Valid values are: `None` (default), `Replace` and `Union`.

* `sharing` - (Optional) A `sharing` block as defined below.

---

An `sharing` block exports the following:

* `external_tables_to_exclude` - (Optional) List of external tables exclude from the follower database.

* `external_tables_to_include` - (Optional) List of external tables to include in the follower database.

* `materialized_views_to_exclude` - (Optional) List of materialized views exclude from the follower database.

* `materialized_views_to_include` - (Optional) List of materialized views to include in the follower database.

* `tables_to_exclude` - (Optional) List of tables to exclude from the follower database.

* `tables_to_include` - (Optional) List of tables to include in the follower database.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The Kusto Attached Database Configuration ID.

* `attached_database_names` - The list of databases from the `cluster_resource_id` which are currently attached to the cluster.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 60 minutes) Used when creating the Kusto Database.
* `update` - (Defaults to 60 minutes) Used when updating the Kusto Database.
* `read` - (Defaults to 5 minutes) Used when retrieving the Kusto Database.
* `delete` - (Defaults to 60 minutes) Used when deleting the Kusto Database.

## Import

Kusto Attached Database Configurations can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_kusto_attached_database_configuration.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Kusto/clusters/cluster1/attachedDatabaseConfigurations/configuration1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-340a7ebccebb7236bbf861d7a984a60d5e04998fcc9c06fba451911e99f73758 -->