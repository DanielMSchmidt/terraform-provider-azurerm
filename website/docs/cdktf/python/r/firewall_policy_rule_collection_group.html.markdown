---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_firewall_policy_rule_collection_group"
description: |-
  Manages a Firewall Policy Rule Collection Group.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_firewall_policy_rule_collection_group

Manages a Firewall Policy Rule Collection Group.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_firewall_policy_example =
        azurerm.firewall_policy.FirewallPolicy(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-fwpolicy",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_firewall_policy_example.override_logical_id("example")
        azurerm_firewall_policy_rule_collection_group_example =
        azurerm.firewall_policy_rule_collection_group.FirewallPolicyRuleCollectionGroup(self, "example_2",
            application_rule_collection=[FirewallPolicyRuleCollectionGroupApplicationRuleCollection(
                action="Deny",
                name="app_rule_collection1",
                priority=500,
                rule=[FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRule(
                    destination_fqdns=["*.microsoft.com"],
                    name="app_rule_collection1_rule1",
                    protocols=[FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocols(
                        port=80,
                        type="Http"
                    ), FirewallPolicyRuleCollectionGroupApplicationRuleCollectionRuleProtocols(
                        port=443,
                        type="Https"
                    )
                    ],
                    source_addresses=["10.0.0.1"]
                )
                ]
            )
            ],
            firewall_policy_id=cdktf.Token.as_string(azurerm_firewall_policy_example.id),
            name="example-fwpolicy-rcg",
            nat_rule_collection=[FirewallPolicyRuleCollectionGroupNatRuleCollection(
                action="Dnat",
                name="nat_rule_collection1",
                priority=300,
                rule=[FirewallPolicyRuleCollectionGroupNatRuleCollectionRule(
                    destination_address="192.168.1.1",
                    destination_ports=["80"],
                    name="nat_rule_collection1_rule1",
                    protocols=["TCP", "UDP"],
                    source_addresses=["10.0.0.1", "10.0.0.2"],
                    translated_address="192.168.0.1",
                    translated_port=cdktf.Token.as_number("8080")
                )
                ]
            )
            ],
            network_rule_collection=[FirewallPolicyRuleCollectionGroupNetworkRuleCollection(
                action="Deny",
                name="network_rule_collection1",
                priority=400,
                rule=[FirewallPolicyRuleCollectionGroupNetworkRuleCollectionRule(
                    destination_addresses=["192.168.1.1", "192.168.1.2"],
                    destination_ports=["80", "1000-2000"],
                    name="network_rule_collection1_rule1",
                    protocols=["TCP", "UDP"],
                    source_addresses=["10.0.0.1"]
                )
                ]
            )
            ],
            priority=500
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_firewall_policy_rule_collection_group_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Firewall Policy Rule Collection Group. Changing this forces a new Firewall Policy Rule Collection Group to be created.

* `firewall_policy_id` - (Required) The ID of the Firewall Policy where the Firewall Policy Rule Collection Group should exist. Changing this forces a new Firewall Policy Rule Collection Group to be created.

* `priority` - (Required) The priority of the Firewall Policy Rule Collection Group. The range is 100-65000.

---

* `application_rule_collection` - (Optional) One or more `application_rule_collection` blocks as defined below.

* `nat_rule_collection` - (Optional) One or more `nat_rule_collection` blocks as defined below.

* `network_rule_collection` - (Optional) One or more `network_rule_collection` blocks as defined below.

---

A `application_rule_collection` block supports the following:

* `name` - (Required) The name which should be used for this application rule collection.

* `action` - (Required) The action to take for the application rules in this collection. Possible values are `Allow` and `Deny`.

* `priority` - (Required) The priority of the application rule collection. The range is `100` - `65000`.

* `rule` - (Required) One or more `application_rule` (application rule) blocks as defined below.

---

A `network_rule_collection` block supports the following:

* `name` - (Required) The name which should be used for this network rule collection.

* `action` - (Required) The action to take for the network rules in this collection. Possible values are `Allow` and `Deny`.

* `priority` - (Required) The priority of the network rule collection. The range is `100` - `65000`.

* `rule` - (Required) One or more `network_rule` (network rule) blocks as defined below.

---

A `nat_rule_collection` block supports the following:

* `name` - (Required) The name which should be used for this NAT rule collection.

* `action` - (Required) The action to take for the NAT rules in this collection. Currently, the only possible value is `Dnat`.

* `priority` - (Required) The priority of the NAT rule collection. The range is `100` - `65000`.

* `rule` - (Required) A `nat_rule` (NAT rule) block as defined below.

---

A `application_rule` (application rule) block supports the following:

* `name` - (Required) The name which should be used for this rule.

* `description` - (Optional) The description which should be used for this rule.

* `protocols` - (Optional) One or more `protocols` blocks as defined below. Not required when specifying `destination_fqdn_tags`, but required when specifying `destination_fqdns`.

* `source_addresses` - (Optional) Specifies a list of source IP addresses (including CIDR, IP range and `*`).

* `source_ip_groups` - (Optional) Specifies a list of source IP groups.

* `destination_addresses` - (Optional) Specifies a list of destination IP addresses (including CIDR, IP range and `*`).

* `destination_urls` - (Optional) Specifies a list of destination URLs for which policy should hold. Needs Premium SKU for Firewall Policy. Conflicts with `destination_fqdns`.

* `destination_fqdns` - (Optional) Specifies a list of destination FQDNs. Conflicts with `destination_urls`.

* `destination_fqdn_tags` - (Optional) Specifies a list of destination FQDN tags.

* `terminate_tls` - (Optional) Boolean specifying if TLS shall be terminated (true) or not (false). Must be `true` when using `destination_urls`. Needs Premium SKU for Firewall Policy.

* `web_categories` - (Optional) Specifies a list of web categories to which access is denied or allowed depending on the value of `action` above. Needs Premium SKU for Firewall Policy.

---

A `network_rule` (network rule) block supports the following:

* `name` - (Required) The name which should be used for this rule.

* `protocols` - (Required) Specifies a list of network protocols this rule applies to. Possible values are `Any`, `TCP`, `UDP`, `ICMP`.

* `destination_ports` - (Required) Specifies a list of destination ports.

* `source_addresses` - (Optional) Specifies a list of source IP addresses (including CIDR, IP range and `*`).

* `source_ip_groups` - (Optional) Specifies a list of source IP groups.

* `destination_addresses` - (Optional) Specifies a list of destination IP addresses (including CIDR, IP range and `*`) or Service Tags.

* `destination_ip_groups` - (Optional) Specifies a list of destination IP groups.

* `destination_fqdns` - (Optional) Specifies a list of destination FQDNs.

---

A `nat_rule` (NAT rule) block supports the following:

* `name` - (Required) The name which should be used for this rule.

* `protocols` - (Required) Specifies a list of network protocols this rule applies to. Possible values are `TCP`, `UDP`.

* `source_addresses` - (Optional) Specifies a list of source IP addresses (including CIDR, IP range and `*`).

* `source_ip_groups` - (Optional) Specifies a list of source IP groups.

* `destination_address` - (Optional) The destination IP address (including CIDR).

* `destination_ports` - (Optional) Specifies a list of destination ports. Only one destination port is supported in a NAT rule.

* `translated_address` - (Optional) Specifies the translated address.

* `translated_fqdn` - (Optional) Specifies the translated FQDN.

~> **NOTE:** Exactly one of `translated_address` and `translated_fqdn` should be set.

* `translated_port` - (Required) Specifies the translated port.

---

A `protocols` block supports the following:

* `type` - (Required) Protocol type. Possible values are `Http` and `Https`.

* `port` - (Required) Port number of the protocol. Range is 0-64000.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Firewall Policy Rule Collection Group.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Firewall Policy Rule Collection Group.
* `read` - (Defaults to 5 minutes) Used when retrieving the Firewall Policy Rule Collection Group.
* `update` - (Defaults to 30 minutes) Used when updating the Firewall Policy Rule Collection Group.
* `delete` - (Defaults to 30 minutes) Used when deleting the Firewall Policy Rule Collection Group.

## Import

Firewall Policy Rule Collection Groups can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_firewall_policy_rule_collection_group.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/firewallPolicies/policy1/ruleCollectionGroups/gruop1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-36c16a6c2a8f9727b84c87b3e46f096632acec658a4871461486d8c3b15c7900 -->