---
subcategory: "API Management"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_api_management_api_diagnostic"
description: |-
  Manages a API Management Service API Diagnostics Logs.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_api_management_api_diagnostic

Manages a API Management Service API Diagnostics Logs.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm.provider.AzurermProvider(self, "azurerm",
            features=AzurermProviderFeatures()
        )
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_api_management_example = azurerm.api_management.ApiManagement(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-apim",
            publisher_email="company@terraform.io",
            publisher_name="My Company",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="Developer_1"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_api_management_example.override_logical_id("example")
        azurerm_api_management_api_example =
        azurerm.api_management_api.ApiManagementApi(self, "example_3",
            api_management_name=cdktf.Token.as_string(azurerm_api_management_example.name),
            display_name="Example API",
            import=ApiManagementApiImport(
                content_format="swagger-link-json",
                content_value="http://conferenceapi.azurewebsites.net/?format=json"
            ),
            name="example-api",
            path="example",
            protocols=["https"],
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            revision="1"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_api_management_api_example.override_logical_id("example")
        azurerm_application_insights_example =
        azurerm.application_insights.ApplicationInsights(self, "example_4",
            application_type="web",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-appinsights",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_application_insights_example.override_logical_id("example")
        azurerm_api_management_logger_example =
        azurerm.api_management_logger.ApiManagementLogger(self, "example_5",
            api_management_name=cdktf.Token.as_string(azurerm_api_management_example.name),
            application_insights=ApiManagementLoggerApplicationInsights(
                instrumentation_key=cdktf.Token.as_string(azurerm_application_insights_example.instrumentation_key)
            ),
            name="example-apimlogger",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_api_management_logger_example.override_logical_id("example")
        azurerm_api_management_api_diagnostic_example =
        azurerm.api_management_api_diagnostic.ApiManagementApiDiagnostic(self, "example_6",
            always_log_errors=True,
            api_management_logger_id=cdktf.Token.as_string(azurerm_api_management_logger_example.id),
            api_management_name=cdktf.Token.as_string(azurerm_api_management_example.name),
            api_name=cdktf.Token.as_string(azurerm_api_management_api_example.name),
            backend_request=ApiManagementApiDiagnosticBackendRequest(
                body_bytes=32,
                headers_to_log=["content-type", "accept", "origin"]
            ),
            backend_response=ApiManagementApiDiagnosticBackendResponse(
                body_bytes=32,
                headers_to_log=["content-type", "content-length", "origin"]
            ),
            frontend_request=ApiManagementApiDiagnosticFrontendRequest(
                body_bytes=32,
                headers_to_log=["content-type", "accept", "origin"]
            ),
            frontend_response=ApiManagementApiDiagnosticFrontendResponse(
                body_bytes=32,
                headers_to_log=["content-type", "content-length", "origin"]
            ),
            http_correlation_protocol="W3C",
            identifier="applicationinsights",
            log_client_ip=True,
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sampling_percentage=5,
            verbosity="verbose"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_api_management_api_diagnostic_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `api_management_logger_id` - (Required) The ID (name) of the Diagnostics Logger.

* `api_management_name` - (Required) The name of the API Management Service instance. Changing this forces a new API Management Service API Diagnostics Logs to be created.

* `api_name` - (Required) The name of the API on which to configure the Diagnostics Logs. Changing this forces a new API Management Service API Diagnostics Logs to be created.

* `identifier` - (Required) Identifier of the Diagnostics Logs. Possible values are `applicationinsights` and `azuremonitor`. Changing this forces a new API Management Service API Diagnostics Logs to be created.

* `resource_group_name` - (Required) The name of the Resource Group where the API Management Service API Diagnostics Logs should exist. Changing this forces a new API Management Service API Diagnostics Logs to be created.

---

* `always_log_errors` - (Optional) Always log errors. Send telemetry if there is an erroneous condition, regardless of sampling settings.

* `backend_request` - (Optional) A `backend_request` block as defined below.

* `backend_response` - (Optional) A `backend_response` block as defined below.

* `frontend_request` - (Optional) A `frontend_request` block as defined below.

* `frontend_response` - (Optional) A `frontend_response` block as defined below.

* `http_correlation_protocol` - (Optional) The HTTP Correlation Protocol to use. Possible values are `None`, `Legacy` or `W3C`.

* `log_client_ip` - (Optional) Log client IP address.

* `sampling_percentage` - (Optional) Sampling (%). For high traffic APIs, please read this [documentation](https://docs.microsoft.com/azure/api-management/api-management-howto-app-insights#performance-implications-and-log-sampling) to understand performance implications and log sampling. Valid values are between `0.0` and `100.0`.

* `verbosity` - (Optional) Logging verbosity. Possible values are `verbose`, `information` or `error`.

* `operation_name_format` - (Optional) The format of the Operation Name for Application Insights telemetries. Possible values are `Name`, and `Url`. Defaults to `Name`.

---

A `backend_request`, `backend_response`, `frontend_request` or `frontend_response` block supports the following:

* `body_bytes` - (Optional) Number of payload bytes to log (up to 8192).

* `headers_to_log` - (Optional) Specifies a list of headers to log.

* `data_masking` - (Optional) A `data_masking` block as defined below.

---

A `data_masking` block supports the following:

* `query_params` - (Optional) A `query_params` block as defined below.

* `headers` - (Optional) A `headers` block as defined below.

---

The `query_params` and `headers` blocks support the following:

* `mode` - (Required) The data masking mode. Possible values are `Mask` and `Hide` for `query_params`. The only possible value is `Mask` for `headers`.

* `value` - (Required) The name of the header or the query parameter to mask.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the API Management Service API Diagnostics Logs.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the API Management Service API Diagnostics Logs.
* `read` - (Defaults to 5 minutes) Used when retrieving the API Management Service API Diagnostics Logs.
* `update` - (Defaults to 30 minutes) Used when updating the API Management Service API Diagnostics Logs.
* `delete` - (Defaults to 30 minutes) Used when deleting the API Management Service API Diagnostics Logs.

## Import

API Management Service API Diagnostics Logs can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_api_management_api_diagnostic.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ApiManagement/service/instance1/apis/api1/diagnostics/diagnostic1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-d0df6ba62062037bee57106d22e76aacb25e778d00fc26e11f8216bd1dd6c9d6 -->