---
subcategory: "Key Vault"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_key_vault_certificate_contacts"
description: |-
  Manages Key Vault Certificate Contacts.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_key_vault_certificate_contacts

Manages Key Vault Certificate Contacts.

## Disclaimers

~> **Note:** It's possible to define Key Vault Certificate Contacts both within [the `azurerm_key_vault` resource](key_vault.html) via the `contact` block and by using [the `azurerm_key_vault_certificate_contacts` resource](key_vault_certificate_contacts.html). However it's not possible to use both methods to manage Certificate Contacts within a KeyVault, since there'll be conflicts.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        data_azurerm_client_config_current =
        azurerm.data_azurerm_client_config.DataAzurermClientConfig(self, "current")
        azurerm_key_vault_example = azurerm.key_vault.KeyVault(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplekeyvault",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="premium",
            tenant_id=cdktf.Token.as_string(data_azurerm_client_config_current.tenant_id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_key_vault_example.override_logical_id("example")
        azurerm_key_vault_access_policy_example =
        azurerm.key_vault_access_policy.KeyVaultAccessPolicyA(self, "example_3",
            certificate_permissions=["ManageContacts"],
            key_permissions=["Create"],
            key_vault_id=cdktf.Token.as_string(azurerm_key_vault_example.id),
            object_id=cdktf.Token.as_string(data_azurerm_client_config_current.object_id),
            secret_permissions=["Set"],
            tenant_id=cdktf.Token.as_string(data_azurerm_client_config_current.tenant_id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_key_vault_access_policy_example.override_logical_id("example")
        azurerm_key_vault_certificate_contacts_example =
        azurerm.key_vault_certificate_contacts.KeyVaultCertificateContacts(self, "example_4",
            contact=[KeyVaultCertificateContactsContact(
                email="example@example.com",
                name="example",
                phone="01234567890"
            ), KeyVaultCertificateContactsContact(
                email="example2@example.com"
            )
            ],
            depends_on=[azurerm_key_vault_access_policy_example],
            key_vault_id=cdktf.Token.as_string(azurerm_key_vault_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_key_vault_certificate_contacts_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `key_vault_id` - (Required) The ID of the Key Vault. Changing this forces a new resource to be created.

* `contact` - (Required) One or more `contact` blocks as defined below.

---

A `contact` block supports the following:

* `email` - (Required) E-mail address of the contact.

* `name` - (Optional) Name of the contact.

* `phone` - (Optional) Phone number of the contact.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported: 

* `id` - The ID of the Key Vault Certificate Contacts.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Key Vault Certificate Contacts.
* `read` - (Defaults to 5 minutes) Used when retrieving the Key Vault Certificate Contacts.
* `update` - (Defaults to 30 minutes) Used when updating the Key Vault Certificate Contacts.
* `delete` - (Defaults to 30 minutes) Used when deleting the Key Vault Certificate Contacts.

## Import

Key Vault Certificate Contacts can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_key_vault_certificate_contacts.example https://example-keyvault.vault.azure.net/certificates/contacts
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-1020ab08c9369d48a2f74249968422bc7e68ebe78384c3e7e94fe411cf2f5df8 -->