---
subcategory: "Sentinel"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_sentinel_alert_rule_fusion"
description: |-
  Manages a Sentinel Fusion Alert Rule.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_sentinel_alert_rule_fusion

Manages a Sentinel Fusion Alert Rule.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_log_analytics_workspace_example =
        azurerm.log_analytics_workspace.LogAnalyticsWorkspace(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-workspace",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku="PerGB2018"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_log_analytics_workspace_example.override_logical_id("example")
        azurerm_log_analytics_solution_example =
        azurerm.log_analytics_solution.LogAnalyticsSolution(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            plan=LogAnalyticsSolutionPlan(
                product="OMSGallery/SecurityInsights",
                publisher="Microsoft"
            ),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            solution_name="SecurityInsights",
            workspace_name=cdktf.Token.as_string(azurerm_log_analytics_workspace_example.name),
            workspace_resource_id=cdktf.Token.as_string(azurerm_log_analytics_workspace_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_log_analytics_solution_example.override_logical_id("example")
        azurerm_sentinel_alert_rule_fusion_example =
        azurerm.sentinel_alert_rule_fusion.SentinelAlertRuleFusion(self, "example_3",
            alert_rule_template_guid="f71aba3d-28fb-450b-b192-4e76a83015c8",
            log_analytics_workspace_id=cdktf.Token.as_string(azurerm_log_analytics_solution_example.workspace_resource_id),
            name="example-fusion-alert-rule"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_sentinel_alert_rule_fusion_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Sentinel Fusion Alert Rule. Changing this forces a new Sentinel Fusion Alert Rule to be created.

* `log_analytics_workspace_id` - (Required) The ID of the Log Analytics Workspace this Sentinel Fusion Alert Rule belongs to. Changing this forces a new Sentinel Fusion Alert Rule to be created.

* `alert_rule_template_guid` - (Required) The GUID of the alert rule template which is used for this Sentinel Fusion Alert Rule. Changing this forces a new Sentinel Fusion Alert Rule to be created.

* `enabled` - (Optional) Should this Sentinel Fusion Alert Rule be enabled? Defaults to `true`.

* `source` - (Optional) One or more `source` blocks as defined below.

---

A `source` block supports the following:

* `name` - (Required) The name of the Fusion source signal. Refer to Fusion alert rule template for supported values.

* `enabled` - (Optional) Whether this source signal is enabled or disabled in Fusion detection? Defaults to `true`.

* `sub_type` - (Optional) One or more `sub_type` blocks as defined below.

---

A `sub_type` block supports the following:

* `name` - (Required) The Name of the source subtype under a given source signal in Fusion detection. Refer to Fusion alert rule template for supported values.

* `enabled` - (Optional) Whether this source subtype under source signal is enabled or disabled in Fusion detection. Defaults to `true`.

* `severities_allowed` - (Required) A list of severities that are enabled for this source subtype consumed in Fusion detection. Possible values for each element are `High`, `Medium`, `Low`, `Informational`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Sentinel Fusion Alert Rule.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Sentinel Fusion Alert Rule.
* `read` - (Defaults to 5 minutes) Used when retrieving the Sentinel Fusion Alert Rule.
* `update` - (Defaults to 30 minutes) Used when updating the Sentinel Fusion Alert Rule.
* `delete` - (Defaults to 30 minutes) Used when deleting the Sentinel Fusion Alert Rule.

## Import

Sentinel Fusion Alert Rules can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_sentinel_alert_rule_fusion.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.OperationalInsights/workspaces/workspace1/providers/Microsoft.SecurityInsights/alertRules/rule1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-0e5ad4c68df7874eca9847de4565f6fa7a91d4f733260841b91d005035c1e4f0 -->