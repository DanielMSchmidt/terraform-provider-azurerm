---
subcategory: "Database"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_mariadb_virtual_network_rule"
description: |-
  Manages a MariaDB Virtual Network Rule.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_mariadb_virtual_network_rule

Manages a MariaDB Virtual Network Rule.

-> **NOTE:** MariaDB Virtual Network Rules [can only be used with SKU Tiers of `GeneralPurpose` or `MemoryOptimized`](https://docs.microsoft.com/azure/mariadb/concepts-data-access-security-vnet)

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_virtual_network_example =
        azurerm.virtual_network.VirtualNetwork(self, "example_1",
            address_space=["10.7.29.0/29"],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_example.override_logical_id("example")
        azurerm_mariadb_server_example = azurerm.mariadb_server.MariadbServer(self, "example_2",
            administrator_login="mariadbadminun",
            administrator_login_password="H@Sh1CoR3!",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="mariadb-server-1",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="GP_Gen5_2",
            ssl_enforcement_enabled=True,
            version="10.2"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_mariadb_server_example.override_logical_id("example")
        azurerm_subnet_internal = azurerm.subnet.Subnet(self, "internal",
            address_prefixes=["10.7.29.0/29"],
            name="internal",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            service_endpoints=["Microsoft.Sql"],
            virtual_network_name=cdktf.Token.as_string(azurerm_virtual_network_example.name)
        )
        azurerm_mariadb_virtual_network_rule_example =
        azurerm.mariadb_virtual_network_rule.MariadbVirtualNetworkRule(self, "example_4",
            name="mariadb-vnet-rule",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            server_name=cdktf.Token.as_string(azurerm_mariadb_server_example.name),
            subnet_id=cdktf.Token.as_string(azurerm_subnet_internal.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_mariadb_virtual_network_rule_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the MariaDB Virtual Network Rule. Cannot be empty and must only contain alphanumeric characters and hyphens. Cannot start with a number, and cannot start or end with a hyphen. Changing this forces a new resource to be created.

~> **NOTE:** `name` must be between 1-128 characters long and must satisfy all of the requirements below:

1. Contains only alphanumeric and hyphen characters
2. Cannot start with a number or hyphen
3. Cannot end with a hyphen

* `resource_group_name` - (Required) The name of the resource group where the MariaDB server resides. Changing this forces a new resource to be created.

* `server_name` - (Required) The name of the SQL Server to which this MariaDB virtual network rule will be applied to. Changing this forces a new resource to be created.

* `subnet_id` - (Required) The ID of the subnet that the MariaDB server will be connected to.

~> **NOTE:** Due to [a bug in the Azure API](https://github.com/Azure/azure-rest-api-specs/issues/3719) this resource currently doesn't expose the `ignore_missing_vnet_service_endpoint` field and defaults this to `false`. Terraform will check during the provisioning of the Virtual Network Rule that the Subnet contains the Service Rule to verify that the Virtual Network Rule can be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the MariaDB Virtual Network Rule.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the MariaDB Virtual Network Rule.
* `update` - (Defaults to 30 minutes) Used when updating the MariaDB Virtual Network Rule.
* `read` - (Defaults to 5 minutes) Used when retrieving the MariaDB Virtual Network Rule.
* `delete` - (Defaults to 30 minutes) Used when deleting the MariaDB Virtual Network Rule.

## Import

MariaDB Virtual Network Rules can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_mariadb_virtual_network_rule.rule1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.DBforMariaDB/servers/myserver/virtualNetworkRules/vnetrulename
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-cd3c77e2a02b37c3f5964c8ce2e41a0621ac6f935cdf12271592b655170cb925 -->