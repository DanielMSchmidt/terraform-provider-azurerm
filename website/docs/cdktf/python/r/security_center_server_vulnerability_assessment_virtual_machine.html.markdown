---
subcategory: "Security Center"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_security_center_server_vulnerability_assessment_virtual_machine"
description: |-
  Manages an Azure Vulnerability Assessment (Qualys) to a VM.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_security_center_server_vulnerability_assessment_virtual_machine

Manages an Azure Server Vulnerability Assessment (Qualys) to a VM.

-> **NOTE** Azure Defender has to be enabled on the subscription in order for this resource to work.
See this [documentation](https://docs.microsoft.com/azure/security-center/security-center-get-started) to get started.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_virtual_network_example =
        azurerm.virtual_network.VirtualNetwork(self, "example_1",
            address_space=["192.168.1.0/24"],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_example.override_logical_id("example")
        azurerm_subnet_example = azurerm.subnet.Subnet(self, "example_2",
            address_prefixes=["192.168.1.0/24"],
            name="example-subnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_network_name=cdktf.Token.as_string(azurerm_virtual_network_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_subnet_example.override_logical_id("example")
        azurerm_network_interface_example =
        azurerm.network_interface.NetworkInterface(self, "example_3",
            ip_configuration=[NetworkInterfaceIpConfiguration(
                name="vm-example",
                private_ip_address_allocation="Dynamic",
                subnet_id=cdktf.Token.as_string(azurerm_subnet_example.id)
            )
            ],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-nic",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_network_interface_example.override_logical_id("example")
        azurerm_linux_virtual_machine_example =
        azurerm.linux_virtual_machine.LinuxVirtualMachine(self, "example_4",
            admin_password="Password1234!",
            admin_username="testadmin",
            disable_password_authentication=False,
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vm",
            network_interface_ids=[
                cdktf.Token.as_string(azurerm_network_interface_example.id)
            ],
            os_disk=LinuxVirtualMachineOsDisk(
                caching="ReadWrite",
                storage_account_type="Standard_LRS"
            ),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            size="Standard_B1s",
            source_image_reference=LinuxVirtualMachineSourceImageReference(
                offer="CentOS",
                publisher="OpenLogic",
                sku="7.5",
                version="latest"
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_linux_virtual_machine_example.override_logical_id("example")
        azurerm_security_center_server_vulnerability_assessment_virtual_machine_example =
        azurerm.security_center_server_vulnerability_assessment_virtual_machine.SecurityCenterServerVulnerabilityAssessmentVirtualMachine(self, "example_5",
            virtual_machine_id=cdktf.Token.as_string(azurerm_linux_virtual_machine_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_security_center_server_vulnerability_assessment_virtual_machine_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `virtual_machine_id` - (Required) The ID of the virtual machine to be monitored by vulnerability assessment. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Vulnerability Assessment resource.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 5 minutes) Used when creating the Advanced Threat Protection.
* `read` - (Defaults to 5 minutes) Used when retrieving the Advanced Threat Protection.
* `delete` - (Defaults to 10 minutes) Used when deleting the Advanced Threat Protection.

## Import

Server Vulnerability Assessments can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_security_center_server_vulnerability_assessment_virtual_machine.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resource-group-name/providers/Microsoft.Compute/virtualMachines/vm-name/providers/Microsoft.Security/serverVulnerabilityAssessments/Default
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-fad3b6888f76812f6fb01317b2a891cfab2581daaa06431b53c2247dbf7cf093 -->