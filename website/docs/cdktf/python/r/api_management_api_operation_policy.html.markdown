---
subcategory: "API Management"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_api_management_api_operation_policy"
description: |-
  Manages an API Management API Operation Policy
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_api_management_api_operation_policy

Manages an API Management API Operation Policy

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm.provider.AzurermProvider(self, "azurerm",
            features=AzurermProviderFeatures()
        )
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_api_management_example = azurerm.api_management.ApiManagement(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-apim",
            publisher_email="company@terraform.io",
            publisher_name="My Company",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="Developer_1"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_api_management_example.override_logical_id("example")
        azurerm_api_management_api_example =
        azurerm.api_management_api.ApiManagementApi(self, "example_3",
            api_management_name=cdktf.Token.as_string(azurerm_api_management_example.name),
            name="example-api",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            revision="1"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_api_management_api_example.override_logical_id("example")
        azurerm_api_management_api_operation_example =
        azurerm.api_management_api_operation.ApiManagementApiOperation(self, "example_4",
            api_management_name=cdktf.Token.as_string(azurerm_api_management_example.name),
            api_name=cdktf.Token.as_string(azurerm_api_management_api_example.name),
            display_name="DELETE Resource",
            method="DELETE",
            operation_id="acctest-operation",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            url_template="/resource"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_api_management_api_operation_example.override_logical_id("example")
        azurerm_api_management_api_operation_policy_example =
        azurerm.api_management_api_operation_policy.ApiManagementApiOperationPolicy(self, "example_5",
            api_management_name=cdktf.Token.as_string(azurerm_api_management_api_operation_example.api_management_name),
            api_name=cdktf.Token.as_string(azurerm_api_management_api_operation_example.api_name),
            operation_id=cdktf.Token.as_string(azurerm_api_management_api_operation_example.operation_id),
            resource_group_name=cdktf.Token.as_string(azurerm_api_management_api_operation_example.resource_group_name),
            xml_content="<policies>\n  <inbound>\n    <find-and-replace from=\"xyz\" to=\"abc\" />\n  </inbound>\n</policies>\n"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_api_management_api_operation_policy_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `api_name` - (Required) The name of the API within the API Management Service where the Operation exists. Changing this forces a new resource to be created.

* `api_management_name` - (Required) The name of the API Management Service. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.

* `operation_id` - (Required) The operation identifier within an API. Must be unique in the current API Management service instance. Changing this forces a new resource to be created.

* `xml_content` - (Optional) The XML Content for this Policy.

* `xml_link` - (Optional) A link to a Policy XML Document, which must be publicly available.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the API Management API Operation Policy.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the API Management API Operation Policy.
* `update` - (Defaults to 30 minutes) Used when updating the API Management API Operation Policy.
* `read` - (Defaults to 5 minutes) Used when retrieving the API Management API Operation Policy.
* `delete` - (Defaults to 30 minutes) Used when deleting the API Management API Operation Policy.

## Import

API Management API Operation Policy can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_api_management_api_operation_policy.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ApiManagement/service/instance1/apis/api1/operations/operation1/policies/policy
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-0273271e4d91b166998dd99dc10e6da2bb223e7908a89476b74610eb904a302d -->