---
subcategory: "Storage"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_storage_management_policy"
description: |-
  Manages an Azure Storage Account Management Policy.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_storage_management_policy

Manages an Azure Storage Account Management Policy.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="resourceGroupName"
        )
        azurerm_storage_account_example =
        azurerm.storage_account.StorageAccount(self, "example_1",
            account_kind="BlobStorage",
            account_replication_type="LRS",
            account_tier="Standard",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="storageaccountname",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_example.override_logical_id("example")
        azurerm_storage_management_policy_example =
        azurerm.storage_management_policy.StorageManagementPolicy(self, "example_2",
            rule=[StorageManagementPolicyRule(
                actions=StorageManagementPolicyRuleActions(
                    base_blob=StorageManagementPolicyRuleActionsBaseBlob(
                        delete_after_days_since_modification_greater_than=100,
                        tier_to_archive_after_days_since_modification_greater_than=50,
                        tier_to_cool_after_days_since_modification_greater_than=10
                    ),
                    snapshot=StorageManagementPolicyRuleActionsSnapshot(
                        delete_after_days_since_creation_greater_than=30
                    )
                ),
                enabled=True,
                filters=StorageManagementPolicyRuleFilters(
                    blob_types=["blockBlob"],
                    match_blob_index_tag=[StorageManagementPolicyRuleFiltersMatchBlobIndexTag(
                        name="tag1",
                        operation="==",
                        value="val1"
                    )
                    ],
                    prefix_match=["container1/prefix1"]
                ),
                name="rule1"
            ), StorageManagementPolicyRule(
                actions=StorageManagementPolicyRuleActions(
                    base_blob=StorageManagementPolicyRuleActionsBaseBlob(
                        delete_after_days_since_modification_greater_than=101,
                        tier_to_archive_after_days_since_modification_greater_than=51,
                        tier_to_cool_after_days_since_modification_greater_than=11
                    ),
                    snapshot=StorageManagementPolicyRuleActionsSnapshot(
                        change_tier_to_archive_after_days_since_creation=90,
                        change_tier_to_cool_after_days_since_creation=23,
                        delete_after_days_since_creation_greater_than=31
                    ),
                    version=StorageManagementPolicyRuleActionsVersion(
                        change_tier_to_archive_after_days_since_creation=9,
                        change_tier_to_cool_after_days_since_creation=90,
                        delete_after_days_since_creation=3
                    )
                ),
                enabled=False,
                filters=StorageManagementPolicyRuleFilters(
                    blob_types=["blockBlob"],
                    prefix_match=["container2/prefix1", "container2/prefix2"]
                ),
                name="rule2"
            )
            ],
            storage_account_id=cdktf.Token.as_string(azurerm_storage_account_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_management_policy_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `storage_account_id` - (Required) Specifies the id of the storage account to apply the management policy to. Changing this forces a new resource to be created.

* `rule` - (Optional) A `rule` block as documented below.

---

The `rule` block supports the following:

* `name` - (Required) The name of the rule. Rule name is case-sensitive. It must be unique within a policy.
* `enabled` - (Required) Boolean to specify whether the rule is enabled.
* `filters` - (Required) A `filters` block as documented below.
* `actions` - (Required) An `actions` block as documented below.

---

The `filters` block supports the following:

* `blob_types` - (Required) An array of predefined values. Valid options are `blockBlob` and `appendBlob`.
* `prefix_match` - (Optional) An array of strings for prefixes to be matched.
* `match_blob_index_tag` - (Optional) A `match_blob_index_tag` block as defined below. The block defines the blob index tag based filtering for blob objects.

~> **NOTE:** The `match_blob_index_tag` property requires enabling the `blobIndex` feature with [PSH or CLI commands](https://azure.microsoft.com/en-us/blog/manage-and-find-data-with-blob-index-for-azure-storage-now-in-preview/).

---

The `actions` block supports the following:

* `base_blob` - (Optional) A `base_blob` block as documented below.
* `snapshot` - (Optional) A `snapshot` block as documented below.
* `version` - (Optional) A `version` block as documented below.

---

The `base_blob` block supports the following:

* `tier_to_cool_after_days_since_modification_greater_than` - (Optional) The age in days after last modification to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between 0 and 99999. Defaults to `-1`.
* `tier_to_cool_after_days_since_last_access_time_greater_than` - (Optional) The age in days after last access time to tier blobs to cool storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.
* `tier_to_cool_after_days_since_creation_greater_than` - (Optional) The age in days after creation to cool storage. Supports blob currently at Hot tier. Must be between `0` and `99999`. Defaults to `-1`.

~> **Note:** The `tier_to_cool_after_days_since_modification_greater_than`, `tier_to_cool_after_days_since_last_access_time_greater_than` and `tier_to_cool_after_days_since_creation_greater_than` can not be set at the same time.

* `auto_tier_to_hot_from_cool_enabled` - (Optional) Whether a blob should automatically be tiered from cool back to hot if it's accessed again after being tiered to cool. Defaults to `false`.

~> **Note:** The `auto_tier_to_hot_from_cool_enabled` must be used together with `tier_to_cool_after_days_since_last_access_time_greater_than`.

* `tier_to_archive_after_days_since_modification_greater_than` - (Optional) The age in days after last modification to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between 0 and 99999. Defaults to `-1`.
* `tier_to_archive_after_days_since_last_access_time_greater_than` - (Optional) The age in days after last access time to tier blobs to archive storage. Supports blob currently at Hot or Cool tier. Must be between `0` and`99999`. Defaults to `-1`.
* `tier_to_archive_after_days_since_creation_greater_than` - (Optional) The age in days after creation to archive storage. Supports blob currently at Hot or Cool tier. Must be between `0` and`99999`. Defaults to `-1`.

~> **Note:** The `tier_to_archive_after_days_since_modification_greater_than`, `tier_to_archive_after_days_since_last_access_time_greater_than` and `tier_to_archive_after_days_since_creation_greater_than` can not be set at the same time.

* `tier_to_archive_after_days_since_last_tier_change_greater_than` - (Optional) The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to `-1`.

* `delete_after_days_since_modification_greater_than` - (Optional) The age in days after last modification to delete the blob. Must be between 0 and 99999. Defaults to `-1`.
* `delete_after_days_since_last_access_time_greater_than` - (Optional) The age in days after last access time to delete the blob. Must be between `0` and `99999`. Defaults to `-1`.
* `delete_after_days_since_creation_greater_than` - (Optional) The age in days after creation to delete the blob. Must be between `0` and `99999`. Defaults to `-1`.

~> **Note:** The `delete_after_days_since_modification_greater_than`, `delete_after_days_since_last_access_time_greater_than` and `delete_after_days_since_creation_greater_than` can not be set at the same time.

~> **Note:** The [`last_access_time_enabled`](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/storage_account#last_access_time_enabled) must be set to `true` in the `azurerm_storage_account` in order to use `tier_to_cool_after_days_since_last_access_time_greater_than`, `tier_to_archive_after_days_since_last_access_time_greater_than` and `delete_after_days_since_last_access_time_greater_than`.

---

The `snapshot` block supports the following:

* `change_tier_to_archive_after_days_since_creation` - (Optional) The age in days after creation to tier blob snapshot to archive storage. Must be between 0 and 99999. Defaults to `-1`.
* `tier_to_archive_after_days_since_last_tier_change_greater_than` - (Optional) The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to `-1`.
* `change_tier_to_cool_after_days_since_creation` - (Optional) The age in days after creation to tier blob snapshot to cool storage. Must be between 0 and 99999. Defaults to `-1`.
* `delete_after_days_since_creation_greater_than` - (Optional) The age in days after creation to delete the blob snapshot. Must be between 0 and 99999. Defaults to `-1`.

---

The `version` block supports the following:

* `change_tier_to_archive_after_days_since_creation` - (Optional) The age in days after creation to tier blob version to archive storage. Must be between 0 and 99999. Defaults to `-1`.
* `tier_to_archive_after_days_since_last_tier_change_greater_than` - (Optional) The age in days after last tier change to the blobs to skip to be archved. Must be between 0 and 99999. Defaults to `-1`.
* `change_tier_to_cool_after_days_since_creation` - (Optional) The age in days creation create to tier blob version to cool storage. Must be between 0 and 99999. Defaults to `-1`.
* `delete_after_days_since_creation` - (Optional) The age in days after creation to delete the blob version. Must be between 0 and 99999. Defaults to `-1`.

---

The `match_blob_index_tag` block supports the following:

* `name` - (Required) The filter tag name used for tag based filtering for blob objects.
* `operation` - (Optional) The comparison operator which is used for object comparison and filtering. Possible value is `==`. Defaults to `==`.
* `value` - (Required) The filter tag value used for tag based filtering for blob objects.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Storage Account Management Policy.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Storage Account Management Policy.
* `update` - (Defaults to 30 minutes) Used when updating the Storage Account Management Policy.
* `read` - (Defaults to 5 minutes) Used when retrieving the Storage Account Management Policy.
* `delete` - (Defaults to 30 minutes) Used when deleting the Storage Account Management Policy.

## Import

Storage Account Management Policies can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_storage_management_policy.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Storage/storageAccounts/myaccountname/managementPolicies/default
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-29e3e169c16affaa2a2aa026fa341e5c6f74b67f4b38dc3478bafea6bfccea2b -->