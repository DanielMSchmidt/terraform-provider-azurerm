---
subcategory: "Database"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_postgresql_flexible_server_database"
description: |-
  Manages a PostgreSQL Flexible Server Database.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_postgresql_flexible_server_database

Manages a PostgreSQL Flexible Server Database.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_postgresql_flexible_server_example =
        azurerm.postgresql_flexible_server.PostgresqlFlexibleServer(self, "example_1",
            administrator_login="psqladmin",
            administrator_password="H@Sh1CoR3!",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-psqlflexibleserver",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="GP_Standard_D4s_v3",
            storage_mb=32768,
            version="12"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_postgresql_flexible_server_example.override_logical_id("example")
        azurerm_postgresql_flexible_server_database_example =
        azurerm.postgresql_flexible_server_database.PostgresqlFlexibleServerDatabase(self, "example_2",
            charset="utf8",
            collation="en_US.utf8",
            name="example-db",
            server_id=cdktf.Token.as_string(azurerm_postgresql_flexible_server_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_postgresql_flexible_server_database_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Azure PostgreSQL Flexible Server Database. Changing this forces a new Azure PostgreSQL Flexible Server Database to be created.

* `server_id` - (Required) The ID of the Azure PostgreSQL Flexible Server from which to create this PostgreSQL Flexible Server Database. Changing this forces a new Azure PostgreSQL Flexible Server Database to be created.

* `charset` - (Optional) Specifies the Charset for the Azure PostgreSQL Flexible Server Database, which needs [to be a valid PostgreSQL Charset](https://www.postgresql.org/docs/current/static/multibyte.html). Defaults to `UTF8`. Changing this forces a new Azure PostgreSQL Flexible Server Database to be created.

* `collation` - (Optional) Specifies the Collation for the Azure PostgreSQL Flexible Server Database, which needs [to be a valid PostgreSQL Collation](https://www.postgresql.org/docs/current/static/collation.html). Defaults to `en_US.utf8`. Changing this forces a new Azure PostgreSQL Flexible Server Database to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Azure PostgreSQL Flexible Server Database.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Azure PostgreSQL Flexible Server Database.
* `read` - (Defaults to 5 minutes) Used when retrieving the Azure PostgreSQL Flexible Server Database.
* `delete` - (Defaults to 30 minutes) Used when deleting the Azure PostgreSQL Flexible Server Database.

## Import

Azure PostgreSQL Flexible Server Database can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_postgresql_flexible_server_database.example /subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.DBforPostgreSQL/flexibleServers/flexibleServer1/databases/database1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-2569365d065814fd670d2bf62b66b5fccf93e38805609f77d15ae365efa19f0e -->