---
subcategory: "Spring Cloud"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_spring_cloud_build_pack_binding"
description: |-
  Manages a Spring Cloud Build Pack Binding.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_spring_cloud_build_pack_binding

Manages a Spring Cloud Build Pack Binding.

-> **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm.provider.AzurermProvider(self, "azurerm",
            features=AzurermProviderFeatures()
        )
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_spring_cloud_service_example =
        azurerm.spring_cloud_service.SpringCloudService(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-springcloud",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="E0"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_spring_cloud_service_example.override_logical_id("example")
        azurerm_spring_cloud_builder_example =
        azurerm.spring_cloud_builder.SpringCloudBuilder(self, "example_3",
            build_pack_group=[SpringCloudBuilderBuildPackGroup(
                build_pack_ids=["tanzu-Build Packs/java-azure"],
                name="mix"
            )
            ],
            name="example",
            spring_cloud_service_id=cdktf.Token.as_string(azurerm_spring_cloud_service_example.id),
            stack=SpringCloudBuilderStack(
                id="io.Build Packs.stacks.bionic",
                version="base"
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_spring_cloud_builder_example.override_logical_id("example")
        azurerm_spring_cloud_build_pack_binding_example =
        azurerm.spring_cloud_build_pack_binding.SpringCloudBuildPackBinding(self, "example_4",
            binding_type="ApplicationInsights",
            launch=SpringCloudBuildPackBindingLaunch(
                properties={
                    "abc": "def",
                    "any-string": "any-string",
                    "sampling-rate": "12.0"
                },
                secrets={
                    "connection-string": "XXXXXXXXXXXXXXXXX=XXXXXXXXXXXXX-XXXXXXXXXXXXXXXXXXX;XXXXXXXXXXXXXXXXX=XXXXXXXXXXXXXXXXXXX"
                }
            ),
            name="example",
            spring_cloud_builder_id=cdktf.Token.as_string(azurerm_spring_cloud_builder_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_spring_cloud_build_pack_binding_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Spring Cloud Build Pack Binding. Changing this forces a new Spring Cloud Build Pack Binding to be created.

* `spring_cloud_builder_id` - (Required) The ID of the Spring Cloud Builder. Changing this forces a new Spring Cloud Build Pack Binding to be created.

---

* `binding_type` - (Optional) Specifies the Build Pack Binding Type. Allowed values are `ApacheSkyWalking`, `AppDynamics`, `ApplicationInsights`, `Dynatrace`, `ElasticAPM` and `NewRelic`.

* `launch` - (Optional) A `launch` block as defined below.

---

A `launch` block supports the following:

* `properties` - (Optional) Specifies a map of non-sensitive properties for launchProperties.

* `secrets` - (Optional) Specifies a map of sensitive properties for launchProperties.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Spring Cloud Build Pack Binding.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Spring Cloud Build Pack Binding.
* `read` - (Defaults to 5 minutes) Used when retrieving the Spring Cloud Build Pack Binding.
* `update` - (Defaults to 30 minutes) Used when updating the Spring Cloud Build Pack Binding.
* `delete` - (Defaults to 30 minutes) Used when deleting the Spring Cloud Build Pack Binding.

## Import

Spring Cloud Build Pack Bindings can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_spring_cloud_build_pack_binding.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/spring/service1/buildServices/buildService1/builders/builder1/buildPackBindings/binding1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-a158fad178af17fd2f1e8d97a589d377e699105de28aad7fd54c104ac43663e1 -->