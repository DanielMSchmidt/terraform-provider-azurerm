---
subcategory: "Datadog"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_datadog_monitor_tag_rule"
description: |-
  Manages Tag Rules on the Datadog Monitor.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_datadog_monitor_tag_rule

Manages TagRules on the datadog Monitor.

## Example Usage

### Adding TagRules on monitor
```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West US 2",
            name="example-datadog"
        )
        azurerm_datadog_monitor_example =
        azurerm.datadog_monitor.DatadogMonitor(self, "example_1",
            datadog_organization=DatadogMonitorDatadogOrganization(
                api_key="XXXX",
                application_key="XXXX"
            ),
            identity=DatadogMonitorIdentity(
                type="SystemAssigned"
            ),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-monitor",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="Linked",
            user=DatadogMonitorUser(
                email="abc@xyz.com",
                name="Example"
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_datadog_monitor_example.override_logical_id("example")
        azurerm_datadog_monitor_tag_rule_example =
        azurerm.datadog_monitor_tag_rule.DatadogMonitorTagRule(self, "example_2",
            datadog_monitor_id=cdktf.Token.as_string(azurerm_datadog_monitor_example.id),
            log=[DatadogMonitorTagRuleLog(
                subscription_log_enabled=True
            )
            ],
            metric=[DatadogMonitorTagRuleMetric(
                filter=[DatadogMonitorTagRuleMetricFilter(
                    action="Include",
                    name="Test",
                    value="Logs"
                )
                ]
            )
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_datadog_monitor_tag_rule_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `datadog_monitor_id` - (Required) The Datadog Monitor Id which should be used for this Datadog Monitor Tag Rule. Changing this forces a new Datadog Monitor Tag Rule to be created.

---

* `name` - (Optional) The name of the Tag Rules configuration. The allowed value is `default`. It defaults to `default`.

* `log` - (Optional) A `log` block as defined below.

* `metric` - (Optional) A `metric` block as defined below.

---

An `log` block supports the following:

* `aad_log_enabled` - (Optional) Whether AAD logs should be sent for the Monitor resource?

* `subscription_log_enabled` - (Optional) Whether Azure subscription logs should be sent for the Monitor resource?

* `resource_log_enabled` - (Optional) Whether Azure resource logs should be sent for the Monitor resource?

* `filter` - (Optional) A `filter` block as defined below.

> **NOTE:** List of filtering tags to be used for capturing logs. This only takes effect if `resource_log_enabled` flag is enabled. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.
---

A `metric` block supports the following:

* `filter` - (Optional) A `filter` block as defined below.

> **NOTE:** List of filtering tags to be used for capturing metrics. If empty, all resources will be captured. If only Exclude action is specified, the rules will apply to the list of all available resources. If Include actions are specified, the rules will only include resources with the associated tags.
---

A `filter` block supports the following:

* `name` - (Required) Name of the Tag.

* `value` - (Required) Value of the Tag.

* `action` - (Required) Allowed values Include or Exclude.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Tagrules on the datadog Monitor.
* `read` - (Defaults to 5 minutes) Used when retrieving the Tagrules on the datadog Monitor.
* `update` - (Defaults to 30 minutes) Used when updating the Tagrules on the datadog Monitor.
* `delete` - (Defaults to 30 minutes) Used when deleting the Tagrules on the datadog Monitor.

## Import

Tag Rules on the Datadog Monitor can be imported using the `tag rule resource id`, e.g.

```shell
terraform import azurerm_datadog_monitor_tag_rule.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Datadog/monitors/monitor1/tagRules/default

<!-- cache-key: cdktf-0.17.0-pre.15 input-e4048b6d583735ce5835fb13c094dad4e9220064d44ef911cdfcabcd73440365 -->