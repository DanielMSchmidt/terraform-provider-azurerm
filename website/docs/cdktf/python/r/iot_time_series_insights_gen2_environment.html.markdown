---
subcategory: "Time Series Insights"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_iot_time_series_insights_gen2_environment"
description: |-
  Manages an Azure IoT Time Series Insights Gen2 Environment.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_time_series_insights_gen2_environment

Manages an Azure IoT Time Series Insights Gen2 Environment.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_storage_account_storage =
        azurerm.storage_account.StorageAccount(self, "storage",
            account_replication_type="LRS",
            account_tier="Standard",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        azurerm_iot_time_series_insights_gen2_environment_example =
        azurerm.iot_time_series_insights_gen2_environment.IotTimeSeriesInsightsGen2Environment(self, "example_2",
            id_properties=["id"],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="L1",
            storage=IotTimeSeriesInsightsGen2EnvironmentStorage(
                key=cdktf.Token.as_string(azurerm_storage_account_storage.primary_access_key),
                name=cdktf.Token.as_string(azurerm_storage_account_storage.name)
            ),
            warm_store_data_retention_time="P30D"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_iot_time_series_insights_gen2_environment_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Azure IoT Time Series Insights Gen2 Environment. Changing this forces a new resource to be created. Must be globally unique.

* `resource_group_name` - (Required) The name of the resource group in which to create the Azure IoT Time Series Insights Gen2 Environment. Changing this forces a new resource to be created.

* `location` - (Required) Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.

* `sku_name` - (Required) Specifies the SKU Name for this IoT Time Series Insights Gen2 Environment. Currently it supports only `L1`. For gen2, capacity cannot be specified. Changing this forces a new resource to be created.

* `warm_store_data_retention_time` - (Optional) Specifies the ISO8601 timespan specifying the minimum number of days the environment's events will be available for query. 

* `storage` - (Required) A `storage` block as defined below.

* `id_properties` - (Required) A list of property ids for the Azure IoT Time Series Insights Gen2 Environment. Changing this forces a new resource to be created.

* `tags` - (Optional) A mapping of tags to assign to the resource.

---

A `storage` block supports the following:

* `name` - (Required) Name of storage account for Azure IoT Time Series Insights Gen2 Environment. Changing this forces a new resource to be created.

* `key` - (Required) Access key of storage account for Azure IoT Time Series Insights Gen2 Environment

## Attributes Reference

* `id` - The ID of the IoT Time Series Insights Gen2 Environment.

* `data_access_fqdn` - The FQDN used to access the environment data.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the IoT Time Series Insights Gen2 Environment.
* `update` - (Defaults to 30 minutes) Used when updating the IoT Time Series Insights Gen2 Environment.
* `read` - (Defaults to 5 minutes) Used when retrieving the IoT Time Series Insights Gen2 Environment.
* `delete` - (Defaults to 30 minutes) Used when deleting the IoT Time Series Insights Gen2 Environment.

## Import

Azure IoT Time Series Insights Gen2 Environment can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_iot_time_series_insights_gen2_environment.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.TimeSeriesInsights/environments/example
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-c785fb7c3130958d163127ff5d2bdbd77831533b81fc8285b43663dfd6ee2426 -->