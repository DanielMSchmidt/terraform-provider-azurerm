---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_express_route_circuit_connection"
description: |-
  Manages an Express Route Circuit Connection.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_express_route_circuit_connection

Manages an Express Route Circuit Connection.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_express_route_port_example =
        azurerm.express_route_port.ExpressRoutePort(self, "example_1",
            bandwidth_in_gbps=10,
            encapsulation="Dot1Q",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-erport",
            peering_location="Equinix-Seattle-SE2",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_express_route_port_example.override_logical_id("example")
        azurerm_express_route_port_example2 =
        azurerm.express_route_port.ExpressRoutePort(self, "example2",
            bandwidth_in_gbps=10,
            encapsulation="Dot1Q",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-erport2",
            peering_location="Allied-Toronto-King-West",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        azurerm_express_route_circuit_example =
        azurerm.express_route_circuit.ExpressRouteCircuit(self, "example_3",
            bandwidth_in_gbps=5,
            express_route_port_id=cdktf.Token.as_string(azurerm_express_route_port_example.id),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-ercircuit",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku=ExpressRouteCircuitSku(
                family="MeteredData",
                tier="Standard"
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_express_route_circuit_example.override_logical_id("example")
        azurerm_express_route_circuit_example2 =
        azurerm.express_route_circuit.ExpressRouteCircuit(self, "example2_4",
            bandwidth_in_gbps=5,
            express_route_port_id=cdktf.Token.as_string(azurerm_express_route_port_example2.id),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-ercircuit2",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku=ExpressRouteCircuitSku(
                family="MeteredData",
                tier="Standard"
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_express_route_circuit_example2.override_logical_id("example2")
        azurerm_express_route_circuit_peering_example =
        azurerm.express_route_circuit_peering.ExpressRouteCircuitPeering(self, "example_5",
            express_route_circuit_name=cdktf.Token.as_string(azurerm_express_route_circuit_example.name),
            peer_asn=100,
            peering_type="AzurePrivatePeering",
            primary_peer_address_prefix="192.168.1.0/30",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            secondary_peer_address_prefix="192.168.1.0/30",
            shared_key="ItsASecret",
            vlan_id=100
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_express_route_circuit_peering_example.override_logical_id("example")
        azurerm_express_route_circuit_peering_example2 =
        azurerm.express_route_circuit_peering.ExpressRouteCircuitPeering(self, "example2_6",
            express_route_circuit_name=cdktf.Token.as_string(azurerm_express_route_circuit_example2.name),
            peer_asn=100,
            peering_type="AzurePrivatePeering",
            primary_peer_address_prefix="192.168.1.0/30",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            secondary_peer_address_prefix="192.168.1.0/30",
            shared_key="ItsASecret",
            vlan_id=100
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_express_route_circuit_peering_example2.override_logical_id("example2")
        azurerm_express_route_circuit_connection_example =
        azurerm.express_route_circuit_connection.ExpressRouteCircuitConnection(self, "example_7",
            address_prefix_ipv4="192.169.9.0/29",
            authorization_key="846a1918-b7a2-4917-b43c-8c4cdaee006a",
            name="example-ercircuitconnection",
            peer_peering_id=cdktf.Token.as_string(azurerm_express_route_circuit_peering_example2.id),
            peering_id=cdktf.Token.as_string(azurerm_express_route_circuit_peering_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_express_route_circuit_connection_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Express Route Circuit Connection. Changing this forces a new Express Route Circuit Connection to be created.

* `peering_id` - (Required) The ID of the Express Route Circuit Private Peering that this Express Route Circuit Connection connects with. Changing this forces a new Express Route Circuit Connection to be created.
  
* `peer_peering_id` - (Required) The ID of the peered Express Route Circuit Private Peering. Changing this forces a new Express Route Circuit Connection to be created.

* `address_prefix_ipv4` - (Required) The IPv4 address space from which to allocate customer address for global reach. Changing this forces a new Express Route Circuit Connection to be created.

---

* `authorization_key` - (Optional) The authorization key which is associated with the Express Route Circuit Connection.

* `address_prefix_ipv6` - (Optional) The IPv6 address space from which to allocate customer addresses for global reach.

-> **NOTE:** `address_prefix_ipv6` cannot be set when ExpressRoute Circuit Connection with ExpressRoute Circuit based on ExpressRoute Port.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Express Route Circuit Connection.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Express Route Circuit Connection.
* `read` - (Defaults to 5 minutes) Used when retrieving the Express Route Circuit Connection.
* `update` - (Defaults to 30 minutes) Used when updating the Express Route Circuit Connection.
* `delete` - (Defaults to 30 minutes) Used when deleting the Express Route Circuit Connection.

## Import

Express Route Circuit Connections can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_express_route_circuit_connection.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/expressRouteCircuits/circuit1/peerings/peering1/connections/connection1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-5cd3f74b5e4bf4ea49ba3b4e402bab2ea7ee4d489186af0eaace6386bef28ae1 -->