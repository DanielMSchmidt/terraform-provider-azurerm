---
subcategory: "Machine Learning"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_machine_learning_compute_instance"
description: |-
  Manages a Machine Learning Compute Instance.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_machine_learning_compute_instance

Manages a Machine Learning Compute Instance.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        # Terraform Variables are not always the best fit for getting inputs in the context of Terraform CDK.
        #     You can read more about this at https://cdk.tf/variables
        ssh_key = cdktf.TerraformVariable(self, "ssh_key",
            default="ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCqaZoyiz1qbdOQ8xEf6uEu1cCwYowo5FHtsBhqLoDnnp7KUTEBN+L2NxRIfQ781rxV6Iq5jSav6b2Q8z5KiseOlvKA/RF2wqU0UPYqQviQhLmW6THTpmrv/YkUCuzxDpsH7DUDhZcwySLKVVe0Qm3+5N2Ta6UYH3lsDf9R9wTP2K/+vAnflKebuypNlmocIvakFWoZda18FOmsOoIVXQ8HWFNCuw9ZCunMSN62QGamCe3dL5cXlkgHYv7ekJE15IA9aOJcM7e90oeTqo+7HTcWfdu0qQqPWY5ujyMw/llas8tsXY85LFqRnr3gJ02bAscjc477+X+j/gkpFoN1QEmt terraform@demo.tld"
        )
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="west europe",
            name="example-rg",
            tags={
                "stage": "example"
            }
        )
        azurerm_storage_account_example =
        azurerm.storage_account.StorageAccount(self, "example_2",
            account_replication_type="LRS",
            account_tier="Standard",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplesa",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_example.override_logical_id("example")
        azurerm_virtual_network_example =
        azurerm.virtual_network.VirtualNetwork(self, "example_3",
            address_space=["10.1.0.0/16"],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_example.override_logical_id("example")
        data_azurerm_client_config_current =
        azurerm.data_azurerm_client_config.DataAzurermClientConfig(self, "current")
        azurerm_application_insights_example =
        azurerm.application_insights.ApplicationInsights(self, "example_5",
            application_type="web",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-ai",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_application_insights_example.override_logical_id("example")
        azurerm_key_vault_example = azurerm.key_vault.KeyVault(self, "example_6",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-kv",
            purge_protection_enabled=True,
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="standard",
            tenant_id=cdktf.Token.as_string(data_azurerm_client_config_current.tenant_id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_key_vault_example.override_logical_id("example")
        azurerm_machine_learning_workspace_example =
        azurerm.machine_learning_workspace.MachineLearningWorkspace(self, "example_7",
            application_insights_id=cdktf.Token.as_string(azurerm_application_insights_example.id),
            identity=MachineLearningWorkspaceIdentity(
                type="SystemAssigned"
            ),
            key_vault_id=cdktf.Token.as_string(azurerm_key_vault_example.id),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-mlw",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            storage_account_id=cdktf.Token.as_string(azurerm_storage_account_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_machine_learning_workspace_example.override_logical_id("example")
        azurerm_subnet_example = azurerm.subnet.Subnet(self, "example_8",
            address_prefixes=["10.1.0.0/24"],
            name="example-subnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_network_name=cdktf.Token.as_string(azurerm_virtual_network_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_subnet_example.override_logical_id("example")
        azurerm_machine_learning_compute_instance_example =
        azurerm.machine_learning_compute_instance.MachineLearningComputeInstance(self, "example_9",
            authorization_type="personal",
            description="foo",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            machine_learning_workspace_id=cdktf.Token.as_string(azurerm_machine_learning_workspace_example.id),
            name="example",
            ssh=MachineLearningComputeInstanceSsh(
                public_key=ssh_key.string_value
            ),
            subnet_resource_id=cdktf.Token.as_string(azurerm_subnet_example.id),
            tags={
                "foo": "bar"
            },
            virtual_machine_size="STANDARD_DS2_V2"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_machine_learning_compute_instance_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.

* `location` - (Required) The Azure Region where the Machine Learning Compute Instance should exist. Changing this forces a new Machine Learning Compute Instance to be created.

* `machine_learning_workspace_id` - (Required) The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning Compute Instance to be created.

* `virtual_machine_size` - (Required) The Virtual Machine Size. Changing this forces a new Machine Learning Compute Instance to be created.

---

* `authorization_type` - (Optional) The Compute Instance Authorization type. Possible values include: `personal`. Changing this forces a new Machine Learning Compute Instance to be created.

* `assign_to_user` - (Optional) A `assign_to_user` block as defined below. A user explicitly assigned to a personal compute instance. Changing this forces a new Machine Learning Compute Instance to be created.

* `description` - (Optional) The description of the Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.

* `identity` - (Optional) An `identity` block as defined below. Changing this forces a new Machine Learning Compute Instance to be created.

* `local_auth_enabled` - (Optional) Whether local authentication methods is enabled. Defaults to `true`. Changing this forces a new Machine Learning Compute Instance to be created.

* `ssh` - (Optional) A `ssh` block as defined below. Specifies policy and settings for SSH access. Changing this forces a new Machine Learning Compute Instance to be created.

* `subnet_resource_id` - (Optional) Virtual network subnet resource ID the compute nodes belong to. Changing this forces a new Machine Learning Compute Instance to be created.

* `tags` - (Optional) A mapping of tags which should be assigned to the Machine Learning Compute Instance. Changing this forces a new Machine Learning Compute Instance to be created.

---

An `identity` block supports the following:

* `type` - (Required) Specifies the type of Managed Service Identity that should be configured on this Machine Learning Compute Instance. Possible values are `SystemAssigned`, `UserAssigned`, `SystemAssigned, UserAssigned` (to enable both). Changing this forces a new resource to be created.

* `identity_ids` - (Optional) Specifies a list of User Assigned Managed Identity IDs to be assigned to this Machine Learning Compute Instance. Changing this forces a new resource to be created.

~> **NOTE:** This is required when `type` is set to `UserAssigned` or `SystemAssigned, UserAssigned`.

---

A `assign_to_user` block supports the following:

* `object_id` - (Optional) User’s AAD Object Id.

* `tenant_id` - (Optional) User’s AAD Tenant Id.

---

A `ssh` block supports the following:

* `public_key` - (Required) Specifies the SSH rsa public key file as a string. Use "ssh-keygen -t rsa -b 2048" to generate your SSH key pairs.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Machine Learning Compute Instance.

* `identity` - An `identity` block as defined below, which contains the Managed Service Identity information for this Machine Learning Compute Instance.

* `ssh` - An `ssh` block as defined below, which specifies policy and settings for SSH access for this Machine Learning Compute Instance.

---

A `identity` block exports the following:

* `principal_id` - The Principal ID for the Service Principal associated with the Managed Service Identity of this Machine Learning Compute Instance.

* `tenant_id` - The Tenant ID for the Service Principal associated with the Managed Service Identity of this Machine Learning Compute Instance.

---
A `ssh` block exports the following:

* `username` - The admin username of this Machine Learning Compute Instance.

* `port` - Describes the port for connecting through SSH.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Machine Learning Compute Instance.
* `read` - (Defaults to 5 minutes) Used when retrieving the Machine Learning Compute Instance.
* `delete` - (Defaults to 30 minutes) Used when deleting the Machine Learning Compute Instance.

## Import

Machine Learning Compute Instances can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_machine_learning_compute_instance.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.MachineLearningServices/workspaces/workspace1/computes/compute1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-d0f519b0328e682371fc5b0ca48e9a0eee2dcefe14084753612e528eb592a4c1 -->