---
subcategory: "Private DNS Resolver"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_private_dns_resolver_outbound_endpoint"
description: |-
  Manages a Private DNS Resolver Outbound Endpoint.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_private_dns_resolver_outbound_endpoint

Manages a Private DNS Resolver Outbound Endpoint.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="west europe",
            name="example-resources"
        )
        azurerm_virtual_network_example =
        azurerm.virtual_network.VirtualNetwork(self, "example_1",
            address_space=["10.0.0.0/16"],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_example.override_logical_id("example")
        azurerm_private_dns_resolver_example =
        azurerm.private_dns_resolver.PrivateDnsResolver(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-resolver",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_network_id=cdktf.Token.as_string(azurerm_virtual_network_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_private_dns_resolver_example.override_logical_id("example")
        azurerm_subnet_example = azurerm.subnet.Subnet(self, "example_3",
            address_prefixes=["10.0.0.64/28"],
            delegation=[SubnetDelegation(
                name="Microsoft.Network.dnsResolvers",
                service_delegation=SubnetDelegationServiceDelegation(
                    actions=["Microsoft.Network/virtualNetworks/subnets/join/action"],
                    name="Microsoft.Network/dnsResolvers"
                )
            )
            ],
            name="outbounddns",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_network_name=cdktf.Token.as_string(azurerm_virtual_network_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_subnet_example.override_logical_id("example")
        azurerm_private_dns_resolver_outbound_endpoint_example =
        azurerm.private_dns_resolver_outbound_endpoint.PrivateDnsResolverOutboundEndpoint(self, "example_4",
            location=cdktf.Token.as_string(azurerm_private_dns_resolver_example.location),
            name="example-endpoint",
            private_dns_resolver_id=cdktf.Token.as_string(azurerm_private_dns_resolver_example.id),
            subnet_id=cdktf.Token.as_string(azurerm_subnet_example.id),
            tags={
                "key": "value"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_private_dns_resolver_outbound_endpoint_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) Specifies the name which should be used for this Private DNS Resolver Outbound Endpoint. Changing this forces a new Private DNS Resolver Outbound Endpoint to be created.

* `private_dns_resolver_id` - (Required) Specifies the ID of the Private DNS Resolver Outbound Endpoint. Changing this forces a new Private DNS Resolver Outbound Endpoint to be created.

* `location` - (Required) Specifies the Azure Region where the Private DNS Resolver Outbound Endpoint should exist. Changing this forces a new Private DNS Resolver Outbound Endpoint to be created.

* `subnet_id` - (Required) The ID of the Subnet that is linked to the Private DNS Resolver Outbound Endpoint. Changing this forces a new resource to be created.

* `tags` - (Optional) A mapping of tags which should be assigned to the Private DNS Resolver Outbound Endpoint.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Private DNS Resolver Outbound Endpoint.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Private DNS Resolver Outbound Endpoint.
* `read` - (Defaults to 5 minutes) Used when retrieving the Private DNS Resolver Outbound Endpoint.
* `update` - (Defaults to 30 minutes) Used when updating the Private DNS Resolver Outbound Endpoint.
* `delete` - (Defaults to 30 minutes) Used when deleting the Private DNS Resolver Outbound Endpoint.

## Import

Private DNS Resolver Outbound Endpoint can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_private_dns_resolver_outbound_endpoint.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Network/dnsResolvers/dnsResolver1/outboundEndpoints/outboundEndpoint1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-3ceb7acc7150fbc1743f825c76518e67a341a890ad02eb2eb5f24de2b3a5372b -->