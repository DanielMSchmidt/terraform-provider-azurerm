---
subcategory: "Machine Learning"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_machine_learning_datastore_blobstorage"
description: |-
  Manages a Machine Learning Blob Storage DataStore.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_machine_learning_datastore_blobstorage

Manages a Machine Learning Blob Storage DataStore.

## Example Usage with Azure Blob

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm.provider.AzurermProvider(self, "azurerm",
            features=AzurermProviderFeatures()
        )
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_storage_account_example =
        azurerm.storage_account.StorageAccount(self, "example_2",
            account_replication_type="GRS",
            account_tier="Standard",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="workspacestorageaccount",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_example.override_logical_id("example")
        azurerm_storage_container_example =
        azurerm.storage_container.StorageContainer(self, "example_3",
            container_access_type="private",
            name="example-container",
            storage_account_name=cdktf.Token.as_string(azurerm_storage_account_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_container_example.override_logical_id("example")
        data_azurerm_client_config_current =
        azurerm.data_azurerm_client_config.DataAzurermClientConfig(self, "current")
        azurerm_application_insights_example =
        azurerm.application_insights.ApplicationInsights(self, "example_5",
            application_type="web",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="workspace-example-ai",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_application_insights_example.override_logical_id("example")
        azurerm_key_vault_example = azurerm.key_vault.KeyVault(self, "example_6",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="workspaceexamplekeyvault",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="premium",
            tenant_id=cdktf.Token.as_string(data_azurerm_client_config_current.tenant_id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_key_vault_example.override_logical_id("example")
        azurerm_machine_learning_workspace_example =
        azurerm.machine_learning_workspace.MachineLearningWorkspace(self, "example_7",
            application_insights_id=cdktf.Token.as_string(azurerm_application_insights_example.id),
            identity=MachineLearningWorkspaceIdentity(
                type="SystemAssigned"
            ),
            key_vault_id=cdktf.Token.as_string(azurerm_key_vault_example.id),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-workspace",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            storage_account_id=cdktf.Token.as_string(azurerm_storage_account_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_machine_learning_workspace_example.override_logical_id("example")
        azurerm_machine_learning_datastore_blobstorage_example =
        azurerm.machine_learning_datastore_blobstorage.MachineLearningDatastoreBlobstorage(self, "example_8",
            account_key=cdktf.Token.as_string(azurerm_storage_account_example.primary_access_key),
            name="example-datastore",
            storage_container_id=cdktf.Token.as_string(azurerm_storage_container_example.resource_manager_id),
            workspace_id=cdktf.Token.as_string(azurerm_machine_learning_workspace_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_machine_learning_datastore_blobstorage_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name of the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.

* `workspace_id` - (Required) The ID of the Machine Learning Workspace. Changing this forces a new Machine Learning DataStore to be created.

* `storage_container_id` - (Required) The ID of the Storage Account Container. Changing this forces a new Machine Learning DataStore to be created.

---
* `account_key` - (Optional) The access key of the Storage Account. Conflicts with `shared_access_signature`.

* `shared_access_signature` - (Optional) The Shared Access Signature of the Storage Account. Conflicts with `account_key`.

~> **Note:**  One of `account_key` or `shared_access_signature` must be specified.

* `description` - (Optional) Text used to describe the asset. Changing this forces a new Machine Learning DataStore to be created.

* `is_default` - (Optional) Specifies whether this Machines Learning DataStore is the default for the Workspace. Defaults to `false`.

~> **Note:** `is_default` can only be set to `true` on update.

* `service_data_auth_identity` - (Optional) Specifies which identity to use when retrieving data from the specified source. Defaults to `None`. Possible values are `None`, `WorkspaceSystemAssignedIdentity` and `WorkspaceUserAssignedIdentity`.

* `tags` - (Optional) A mapping of tags which should be assigned to the Machine Learning DataStore. Changing this forces a new Machine Learning DataStore to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported: 

* `id` - The ID of the Machine Learning DataStore.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Machine Learning DataStore.
* `read` - (Defaults to 5 minutes) Used when retrieving the Machine Learning DataStore.
* `update` - (Defaults to 30 minutes) Used when updating the Machine Learning DataStore.
* `delete` - (Defaults to 30 minutes) Used when deleting the Machine Learning DataStore.

## Import

Machine Learning DataStores can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_machine_learning_datastore_blobstorage.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.MachineLearningServices/workspaces/mlw1/datastores/datastore1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-2f68ec7cba848e9918a9415005fccb7edeaf1ad489f0a5f1e3890f7060694561 -->