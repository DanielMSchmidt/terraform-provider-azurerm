---
subcategory: "Spring Cloud"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_spring_cloud_app_cosmosdb_association"
description: |-
  Associates a [Spring Cloud Application](spring_cloud_app.html) with a [CosmosDB Account](cosmosdb_account.html).
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_spring_cloud_app_cosmosdb_association

Associates a [Spring Cloud Application](spring_cloud_app.html) with a [CosmosDB Account](cosmosdb_account.html).

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_spring_cloud_service_example =
        azurerm.spring_cloud_service.SpringCloudService(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-springcloud",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_spring_cloud_service_example.override_logical_id("example")
        azurerm_cosmosdb_account_example =
        azurerm.cosmosdb_account.CosmosdbAccount(self, "example_2",
            consistency_policy=CosmosdbAccountConsistencyPolicy(
                consistency_level="Strong"
            ),
            geo_location=[CosmosdbAccountGeoLocation(
                failover_priority=0,
                location=cdktf.Token.as_string(azurerm_resource_group_example.location)
            )
            ],
            kind="GlobalDocumentDB",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-cosmosdb-account",
            offer_type="Standard",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_cosmosdb_account_example.override_logical_id("example")
        azurerm_spring_cloud_app_example =
        azurerm.spring_cloud_app.SpringCloudApp(self, "example_3",
            name="example-springcloudapp",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            service_name=cdktf.Token.as_string(azurerm_spring_cloud_service_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_spring_cloud_app_example.override_logical_id("example")
        azurerm_spring_cloud_app_cosmosdb_association_example =
        azurerm.spring_cloud_app_cosmosdb_association.SpringCloudAppCosmosdbAssociation(self, "example_4",
            api_type="table",
            cosmosdb_access_key=cdktf.Token.as_string(azurerm_cosmosdb_account_example.primary_key),
            cosmosdb_account_id=cdktf.Token.as_string(azurerm_cosmosdb_account_example.id),
            name="example-bind",
            spring_cloud_app_id=cdktf.Token.as_string(azurerm_spring_cloud_app_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_spring_cloud_app_cosmosdb_association_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.

* `spring_cloud_app_id` - (Required) Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.

* `cosmosdb_account_id` - (Required) Specifies the ID of the CosmosDB Account. Changing this forces a new resource to be created.

* `api_type` - (Required) Specifies the API type which should be used when connecting to the CosmosDB Account. Possible values are `cassandra`, `gremlin`, `mongo`, `sql` or `table`. Changing this forces a new resource to be created.
  
* `cosmosdb_access_key` - (Required) Specifies the CosmosDB Account access key.

* `cosmosdb_cassandra_keyspace_name` - (Optional) Specifies the name of the Cassandra Keyspace which the Spring Cloud App should be associated with. Should only be set when `api_type` is `cassandra`.

* `cosmosdb_gremlin_database_name` - (Optional) Specifies the name of the Gremlin Database which the Spring Cloud App should be associated with. Should only be set when `api_type` is `gremlin`.

* `cosmosdb_gremlin_graph_name` - (Optional) Specifies the name of the Gremlin Graph which the Spring Cloud App should be associated with. Should only be set when `api_type` is `gremlin`.

* `cosmosdb_mongo_database_name` - (Optional) Specifies the name of the Mongo Database which the Spring Cloud App should be associated with. Should only be set when `api_type` is `mongo`.

* `cosmosdb_sql_database_name` - (Optional) Specifies the name of the SQL Database which the Spring Cloud App should be associated with. Should only be set when `api_type` is `sql`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Spring Cloud Application CosmosDB Association.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Spring Cloud Application CosmosDB Association.
* `read` - (Defaults to 5 minutes) Used when retrieving the Spring Cloud Application CosmosDB Association.
* `update` - (Defaults to 30 minutes) Used when updating the Spring Cloud Application CosmosDB Association.
* `delete` - (Defaults to 30 minutes) Used when deleting the Spring Cloud Application CosmosDB Association.

## Import

Spring Cloud Application CosmosDB Association can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_spring_cloud_app_cosmosdb_association.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourcegroup1/providers/Microsoft.AppPlatform/spring/service1/apps/app1/bindings/bind1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-71364ce1982f640f5d64dc908c6acf705e0645454ca347a63056ffe43a7f3a00 -->