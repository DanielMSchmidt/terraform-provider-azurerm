---
subcategory: "Database"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_mariadb_configuration"
description: |-
  Sets a MariaDB Configuration value on a MariaDB Server.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_mariadb_configuration

Sets a MariaDB Configuration value on a MariaDB Server.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="api-rg-pro"
        )
        azurerm_mariadb_server_example = azurerm.mariadb_server.MariadbServer(self, "example_1",
            administrator_login="mariadbadmin",
            administrator_login_password="H@Sh1CoR3!",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="mariadb-server-1",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="B_Gen5_2",
            ssl_enforcement_enabled=True,
            version="10.2"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_mariadb_server_example.override_logical_id("example")
        azurerm_mariadb_configuration_example =
        azurerm.mariadb_configuration.MariadbConfiguration(self, "example_2",
            name="interactive_timeout",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            server_name=cdktf.Token.as_string(azurerm_mariadb_server_example.name),
            value="600"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_mariadb_configuration_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the MariaDB Configuration, which needs [to be a valid MariaDB configuration name](https://mariadb.com/kb/en/library/server-system-variables/). Changing this forces a new resource to be created.

* `server_name` - (Required) Specifies the name of the MariaDB Server. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) The name of the resource group in which the MariaDB Server exists. Changing this forces a new resource to be created.

* `value` - (Required) Specifies the value of the MariaDB Configuration. See the MariaDB documentation for valid values. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the MariaDB Configuration.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the MariaDB Configuration.
* `update` - (Defaults to 30 minutes) Used when updating the MariaDB Configuration.
* `read` - (Defaults to 5 minutes) Used when retrieving the MariaDB Configuration.
* `delete` - (Defaults to 30 minutes) Used when deleting the MariaDB Configuration.

## Import

MariaDB Configurations can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_mariadb_configuration.interactive_timeout /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.DBforMariaDB/servers/server1/configurations/interactive_timeout
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-6212957ffd76dd6cf59ff4c325b535fb1e3583c0403f115e06e17b4686e44900 -->