---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_express_route_gateway"
description: |-
  Manages an ExpressRoute gateway.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_express_route_gateway

Manages an ExpressRoute gateway.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_virtual_wan_example = azurerm.virtual_wan.VirtualWan(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-virtualwan",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_wan_example.override_logical_id("example")
        azurerm_virtual_hub_example = azurerm.virtual_hub.VirtualHub(self, "example_2",
            address_prefix="10.0.1.0/24",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-virtualhub",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_wan_id=cdktf.Token.as_string(azurerm_virtual_wan_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_hub_example.override_logical_id("example")
        azurerm_express_route_gateway_example =
        azurerm.express_route_gateway.ExpressRouteGateway(self, "example_3",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="expressRoute1",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            scale_units=1,
            tags={
                "environment": "Production"
            },
            virtual_hub_id=cdktf.Token.as_string(azurerm_virtual_hub_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_express_route_gateway_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the ExpressRoute gateway. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) The name of the resource group in which to create the ExpressRoute gateway. Changing this forces a new resource to be created.

* `location` - (Required) Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.

* `virtual_hub_id` - (Required) The ID of a Virtual HUB within which the ExpressRoute gateway should be created. Changing this forces a new resource to be created.

* `scale_units` - (Required) The number of scale units with which to provision the ExpressRoute gateway. Each scale unit is equal to 2Gbps, with support for up to 10 scale units (20Gbps).

* `allow_non_virtual_wan_traffic` - (Optional) Specified whether this gateway accept traffic from non-Virtual WAN networks. Defaults to `false`.

* `tags` - (Optional) A mapping of tags to assign to the resource.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the ExpressRoute gateway.

### Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 90 minutes) Used when creating the ExpressRoute Gateway.

* `update` - (Defaults to 90 minutes) Used when updating the ExpressRoute Gateway.

* `read` - (Defaults to 5 minutes) Used when retrieving the ExpressRoute Gateway.

* `delete` - (Defaults to 90 minutes) Used when deleting the ExpressRoute Gateway.

## Import

ExpressRoute Gateways can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_express_route_gateway.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/expressRouteGateways/myExpressRouteGateway
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-d216321c09d7e7219ac47be08f275b247c4456563072dcf6c125912dbcca15fd -->