---
subcategory: "App Service (Web Apps)"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_function_app_function"
description: |-
  Manages a Function App Function.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_function_app_function

Manages a Function App Function.

## Example Usage - Basic HTTP Trigger

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-group"
        )
        azurerm_service_plan_example = azurerm.service_plan.ServicePlan(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-service-plan",
            os_type="Linux",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="S1"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_service_plan_example.override_logical_id("example")
        azurerm_storage_account_example =
        azurerm.storage_account.StorageAccount(self, "example_2",
            account_replication_type="LRS",
            account_tier="Standard",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplesa",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_example.override_logical_id("example")
        azurerm_linux_function_app_example =
        azurerm.linux_function_app.LinuxFunctionApp(self, "example_3",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-function-app",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            service_plan_id=cdktf.Token.as_string(azurerm_service_plan_example.id),
            site_config=LinuxFunctionAppSiteConfig(
                application_stack=LinuxFunctionAppSiteConfigApplicationStack(
                    python_version="3.9"
                )
            ),
            storage_account_access_key=cdktf.Token.as_string(azurerm_storage_account_example.primary_access_key),
            storage_account_name=cdktf.Token.as_string(azurerm_storage_account_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_linux_function_app_example.override_logical_id("example")
        azurerm_function_app_function_example =
        azurerm.function_app_function.FunctionAppFunction(self, "example_4",
            config_json=cdktf.Fn.jsonencode({
                "bindings": [{
                    "auth_level": "function",
                    "direction": "in",
                    "methods": ["get", "post"],
                    "name": "req",
                    "type": "httpTrigger"
                }, {
                    "direction": "out",
                    "name": "$return",
                    "type": "http"
                }
                ]
            }),
            function_app_id=cdktf.Token.as_string(azurerm_linux_function_app_example.id),
            language="Python",
            name="example-function-app-function",
            test_data=cdktf.Fn.jsonencode({
                "name": "Azure"
            })
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_function_app_function_example.override_logical_id("example")
```

## Example Usage - HTTP Trigger with code upload

```hcl
resource "azurerm_resource_group" "example" {
  name     = "example-group"
  location = "West Europe"
}

resource "azurerm_storage_account" "example" {
  name                     = "examplesa"
  resource_group_name      = azurerm_resource_group.example.name
  location                 = azurerm_resource_group.example.location
  account_tier             = "Standard"
  account_replication_type = "LRS"
}

resource "azurerm_service_plan" "example" {
  name                = "example-service-plan"
  location            = azurerm_resource_group.example.location
  resource_group_name = azurerm_resource_group.example.name
  os_type             = "Windows"
  sku_name            = "S1"
}

resource "azurerm_windows_function_app" "test" {
  name                = "example-function-app"
  location            = azurerm_resource_group.test.location
  resource_group_name = azurerm_resource_group.test.name
  service_plan_id     = azurerm_service_plan.test.id

  storage_account_name       = azurerm_storage_account.test.name
  storage_account_access_key = azurerm_storage_account.test.primary_access_key

  site_config {
    application_stack {
      dotnet_version = "6"
    }
  }
}

resource "azurerm_function_app_function" "example" {
  name            = "example-function-app-function"
  function_app_id = azurerm_linux_function_app.example.id
  language        = "CSharp"

  file {
    name    = "run.csx"
    content = file("exampledata/run.csx")
  }

  test_data = jsonencode({
    "name" = "Azure"
  })

  config_json = jsonencode({
    "bindings" = [
      {
        "authLevel" = "function"
        "direction" = "in"
        "methods" = [
          "get",
          "post",
        ]
        "name" = "req"
        "type" = "httpTrigger"
      },
      {
        "direction" = "out"
        "name"      = "$return"
        "type"      = "http"
      },
    ]
  })
}
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name of the function. Changing this forces a new resource to be created.

* `function_app_id` - (Required) The ID of the Function App in which this function should reside. Changing this forces a new resource to be created.

* `config_json` - (Required) The config for this Function in JSON format.

---

* `enabled` - (Optional) Should this function be enabled. Defaults to `true`.

* `file` - (Optional) A `file` block as detailed below. Changing this forces a new resource to be created.

* `language` - (Optional) The language the Function is written in. Possible values are `CSharp`, `Custom`, `Java`, `Javascript`, `Python`, `PowerShell`, and `TypeScript`.

~> **NOTE:** when using `Custom` language, you must specify the code handler in the `host.json` file for your function. See the [official docs](https://docs.microsoft.com/azure/azure-functions/functions-custom-handlers#hostjson) for more information.

* `test_data` - (Optional) The test data for the function.

---

A `file` block supports the following:

* `name` - (Required) The filename of the file to be uploaded. Changing this forces a new resource to be created.

* `content` - (Required) The content of the file. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Function App Function

* `config_url` - The URL of the configuration JSON.

* `invocation_url` - The invocation URL.

* `script_root_path_url` - The Script root path URL.

* `script_url` - The script URL.

* `secrets_file_url` - The URL for the Secrets File.

* `test_data_url` - The Test data URL.

* `url` - The function URL.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Function App Function.
* `update` - (Defaults to 30 minutes) Used when updating the Function App Function.
* `read` - (Defaults to 5 minutes) Used when retrieving the Function App Function.
* `delete` - (Defaults to 5 minutes) Used when deleting the Function App Function.

## Import

a Function App Function can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_function_app_function.example "/subscriptions/12345678-1234-9876-4563-123456789012/resourceGroups/resGroup1/providers/Microsoft.Web/sites/site1/functions/function1"
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-b5d2211fddd7aaed02abaf2ca7c9618130027374398c597b6a02f3bd88ba01ec -->