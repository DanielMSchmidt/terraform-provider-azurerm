---
subcategory: "IoT Hub"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_iothub_file_upload"
description: |-
  Manages the File Upload of an IoT Hub.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_iothub_file_upload

Manages the File Upload of an IoT Hub.

~> **NOTE:** File upload can be defined either directly on the `azurerm_iothub` resource, or using the `azurerm_iothub_file_upload` resource - but the two cannot be used together. If both are used against the same IoTHub, spurious changes will occur.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_storage_account_example =
        azurerm.storage_account.StorageAccount(self, "example_1",
            account_replication_type="LRS",
            account_tier="Standard",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplestorage",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_example.override_logical_id("example")
        azurerm_storage_container_example =
        azurerm.storage_container.StorageContainer(self, "example_2",
            container_access_type="private",
            name="examplecontainer",
            storage_account_name=cdktf.Token.as_string(azurerm_storage_account_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_container_example.override_logical_id("example")
        azurerm_iothub_example = azurerm.iothub.Iothub(self, "example_3",
            lifecycle=cdktf.TerraformResourceLifecycle(
                ignore_changes=[file_upload]
            ),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku=IothubSku(
                capacity=cdktf.Token.as_number("1"),
                name="S1"
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_iothub_example.override_logical_id("example")
        azurerm_iothub_file_upload_example =
        azurerm.iothub_file_upload.IothubFileUploadA(self, "example_4",
            connection_string=cdktf.Token.as_string(azurerm_storage_account_example.primary_blob_connection_string),
            container_name=cdktf.Token.as_string(azurerm_storage_container_example.name),
            iothub_id=cdktf.Token.as_string(azurerm_iothub_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_iothub_file_upload_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `iothub_id` - (Required) The ID of the IoT Hub. Changing this forces a new IoT Hub to be created.

* `connection_string` - (Required) The connection string for the Azure Storage account to which files are uploaded.

* `container_name` - (Required) The name of the root container where the files should be uploaded to. The container need not exist but should be creatable using the `connection_string` specified.

---

* `authentication_type` - (Optional) The type used to authenticate against the storage account. Possible values are `keyBased` and `identityBased`. Defaults to `keyBased`.

* `default_ttl` - (Optional) The period of time for which a file upload notification message is available to consume before it expires, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 48 hours. Defaults to `PT1H`.

* `identity_id` - (Optional) The ID of the User Managed Identity used to authenticate against the storage account.

-> **NOTE:** `identity_id` can only be specified when `authentication_type` is `identityBased`. It must be one of the `identity_ids` of the IoT Hub. If `identity_id` is omitted when `authentication_type` is `identityBased`, then the System-Assigned Managed Identity of the IoT Hub will be used.

* `lock_duration` - (Optional) The lock duration for the file upload notifications queue, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 5 and 300 seconds. Defaults to `PT1M`.

* `max_delivery_count` - (Optional) The number of times the IoT Hub attempts to deliver a file upload notification message. Defaults to `10`.

* `notifications_enabled` - (Optional) Used to specify whether file notifications are sent to IoT Hub on upload. Defaults to `false`.

* `sas_ttl` - (Optional) The period of time for which the SAS URI generated by IoT Hub for file upload is valid, specified as an [ISO 8601 timespan duration](https://en.wikipedia.org/wiki/ISO_8601#Durations). This value must be between 1 minute and 24 hours. Defaults to `PT1H`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported: 

* `id` - The ID of the IoT Hub.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the IoT Hub.
* `read` - (Defaults to 5 minutes) Used when retrieving the IoT Hub.
* `update` - (Defaults to 30 minutes) Used when updating the IoT Hub.
* `delete` - (Defaults to 30 minutes) Used when deleting the IoT Hub.

## Import

IoT Hub File Uploads can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_iothub_file_upload.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Devices/iotHubs/hub1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-b749fe2128094d19d9ed776439b6472ecce1ade7fc57786b54833111cbac08d3 -->