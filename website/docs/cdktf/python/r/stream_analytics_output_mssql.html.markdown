---
subcategory: "Stream Analytics"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_stream_analytics_output_mssql"
description: |-
  Manages a Stream Analytics Output to Microsoft SQL Server Database.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_stream_analytics_output_mssql

Manages a Stream Analytics Output to Microsoft SQL Server Database.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="rg-example"
        )
        azurerm_sql_server_example = azurerm.sql_server.SqlServer(self, "example_1",
            administrator_login="dbadmin",
            administrator_login_password="example-password",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-server",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            version="12.0"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_sql_server_example.override_logical_id("example")
        data_azurerm_stream_analytics_job_example =
        azurerm.data_azurerm_stream_analytics_job.DataAzurermStreamAnalyticsJob(self, "example_2",
            name="example-job",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_azurerm_stream_analytics_job_example.override_logical_id("example")
        azurerm_sql_database_example = azurerm.sql_database.SqlDatabase(self, "example_3",
            collation="SQL_LATIN1_GENERAL_CP1_CI_AS",
            create_mode="Default",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            max_size_bytes="268435456000",
            name="exampledb",
            requested_service_objective_name="S0",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            server_name=cdktf.Token.as_string(azurerm_sql_server_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_sql_database_example.override_logical_id("example")
        azurerm_stream_analytics_output_mssql_example =
        azurerm.stream_analytics_output_mssql.StreamAnalyticsOutputMssql(self, "example_4",
            database=cdktf.Token.as_string(azurerm_sql_database_example.name),
            name="example-output-sql",
            password=cdktf.Token.as_string(azurerm_sql_server_example.administrator_login_password),
            resource_group_name=cdktf.Token.as_string(data_azurerm_stream_analytics_job_example.resource_group_name),
            server=cdktf.Token.as_string(azurerm_sql_server_example.fully_qualified_domain_name),
            stream_analytics_job_name=cdktf.Token.as_string(data_azurerm_stream_analytics_job_example.name),
            table="ExampleTable",
            user=cdktf.Token.as_string(azurerm_sql_server_example.administrator_login)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_stream_analytics_output_mssql_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Stream Output. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.

* `stream_analytics_job_name` - (Required) The name of the Stream Analytics Job. Changing this forces a new resource to be created.

* `server` - (Required) The SQL server url. Changing this forces a new resource to be created.

* `user` - (Optional) Username used to login to the Microsoft SQL Server. Changing this forces a new resource to be created. Required if `authentication_mode` is `ConnectionString`. 

* `database` - (Required) The MS SQL database name where the reference table exists. Changing this forces a new resource to be created.

* `password` - (Optional) Password used together with username, to login to the Microsoft SQL Server. Required if `authentication_mode` is `ConnectionString`.

* `table` - (Required) Table in the database that the output points to. Changing this forces a new resource to be created.

* `max_batch_count` - (Optional) The max batch count to write to the SQL Database. Defaults to `10000`. Possible values are between `1` and `1073741824`.

* `max_writer_count` - (Optional) The max writer count for the SQL Database. Defaults to `1`. Possible values are `0` which bases the writer count on the query partition and `1` which corresponds to a single writer.

* `authentication_mode` - (Optional) The authentication mode for the Stream Output. Possible values are `Msi` and `ConnectionString`. Defaults to `ConnectionString`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Stream Analytics Output Microsoft SQL Server Database.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Stream Analytics Output Microsoft SQL Server Database.
* `update` - (Defaults to 30 minutes) Used when updating the Stream Analytics Output Microsoft SQL Server Database.
* `read` - (Defaults to 5 minutes) Used when retrieving the Stream Analytics Output Microsoft SQL Server Database.
* `delete` - (Defaults to 30 minutes) Used when deleting the Stream Analytics Output Microsoft SQL Server Database.

## Import

Stream Analytics Outputs to Microsoft SQL Server Database can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_stream_analytics_output_mssql.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingJobs/job1/outputs/output1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-9d55cfd700049c953a8e99605a196e0cee539131b1e17354c963aaa5327b1024 -->