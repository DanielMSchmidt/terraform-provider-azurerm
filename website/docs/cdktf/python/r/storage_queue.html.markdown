---
subcategory: "Storage"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_storage_queue"
description: |-
  Manages a Queue within an Azure Storage Account.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_storage_queue

Manages a Queue within an Azure Storage Account.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_storage_account_example =
        azurerm.storage_account.StorageAccount(self, "example_1",
            account_replication_type="LRS",
            account_tier="Standard",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplestorageacc",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_example.override_logical_id("example")
        azurerm_storage_queue_example = azurerm.storage_queue.StorageQueue(self, "example_2",
            name="mysamplequeue",
            storage_account_name=cdktf.Token.as_string(azurerm_storage_account_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_queue_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Queue which should be created within the Storage Account. Must be unique within the storage account the queue is located. Changing this forces a new resource to be created.

* `storage_account_name` - (Required) Specifies the Storage Account in which the Storage Queue should exist. Changing this forces a new resource to be created.

* `metadata` - (Optional) A mapping of MetaData which should be assigned to this Storage Queue.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Storage Queue.

* `resource_manager_id` - The Resource Manager ID of this Storage Queue.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Storage Queue.
* `update` - (Defaults to 30 minutes) Used when updating the Storage Queue.
* `read` - (Defaults to 5 minutes) Used when retrieving the Storage Queue.
* `delete` - (Defaults to 30 minutes) Used when deleting the Storage Queue.

## Import

Storage Queue's can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_storage_queue.queue1 https://example.queue.core.windows.net/queue1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-e9cfff89c8df1aeec8da2da6183cd2512535610315c0f06ca839cf83b47ad90e -->