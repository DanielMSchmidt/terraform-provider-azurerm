---
subcategory: "Data Factory"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_data_factory_trigger_blob_event"
description: |-
  Manages a Blob Event Trigger inside an Azure Data Factory.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_data_factory_trigger_blob_event

Manages a Blob Event Trigger inside an Azure Data Factory.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_storage_account_example =
        azurerm.storage_account.StorageAccount(self, "example_1",
            account_replication_type="LRS",
            account_tier="Standard",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_example.override_logical_id("example")
        azurerm_data_factory_example = azurerm.data_factory.DataFactory(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_data_factory_example.override_logical_id("example")
        azurerm_data_factory_pipeline_example =
        azurerm.data_factory_pipeline.DataFactoryPipeline(self, "example_3",
            data_factory_id=cdktf.Token.as_string(azurerm_data_factory_example.id),
            name="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_data_factory_pipeline_example.override_logical_id("example")
        azurerm_data_factory_trigger_blob_event_example =
        azurerm.data_factory_trigger_blob_event.DataFactoryTriggerBlobEvent(self, "example_4",
            activated=True,
            additional_properties={
                "bar": "bar2",
                "foo": "foo1"
            },
            annotations=["test1", "test2", "test3"],
            blob_path_ends_with=".txt",
            data_factory_id=cdktf.Token.as_string(azurerm_data_factory_example.id),
            description="example description",
            events=["Microsoft.Storage.BlobCreated", "Microsoft.Storage.BlobDeleted"
            ],
            ignore_empty_blobs=True,
            name="example",
            pipeline=[DataFactoryTriggerBlobEventPipeline(
                name=cdktf.Token.as_string(azurerm_data_factory_pipeline_example.name),
                parameters={
                    "Env": "Prod"
                }
            )
            ],
            storage_account_id=cdktf.Token.as_string(azurerm_storage_account_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_data_factory_trigger_blob_event_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Data Factory Blob Event Trigger. Changing this forces a new resource to be created.

* `data_factory_id` - (Required) The ID of Data Factory in which to associate the Trigger with. Changing this forces a new resource.

* `storage_account_id` - (Required) The ID of Storage Account in which blob event will be listened. Changing this forces a new resource.

* `events` - (Required) List of events that will fire this trigger. Possible values are `Microsoft.Storage.BlobCreated` and `Microsoft.Storage.BlobDeleted`.

* `pipeline` - (Required) One or more `pipeline` blocks as defined below.

* `activated` - (Optional) Specifies if the Data Factory Blob Event Trigger is activated. Defaults to `true`.

* `additional_properties` - (Optional) A map of additional properties to associate with the Data Factory Blob Event Trigger.

* `annotations` - (Optional) List of tags that can be used for describing the Data Factory Blob Event Trigger.

* `blob_path_begins_with` - (Optional) The pattern that blob path starts with for trigger to fire.

* `blob_path_ends_with` - (Optional) The pattern that blob path ends with for trigger to fire.

~> **Note:** At least one of `blob_path_begins_with` and `blob_path_ends_with` must be set.

* `description` - (Optional) The description for the Data Factory Blob Event Trigger.

* `ignore_empty_blobs` - (Optional) are blobs with zero bytes ignored?

---

A `pipeline` block supports the following:

* `name` - (Required) The Data Factory Pipeline name that the trigger will act on.

* `parameters` - (Optional) The Data Factory Pipeline parameters that the trigger will act on.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Data Factory Blob Event Trigger.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Data Factory Blob Event Trigger.
* `update` - (Defaults to 30 minutes) Used when updating the Data Factory Blob Event Trigger.
* `read` - (Defaults to 5 minutes) Used when retrieving the Data Factory Blob Event Trigger.
* `delete` - (Defaults to 30 minutes) Used when deleting the Data Factory Blob Event Trigger.

## Import

Data Factory Blob Event Trigger can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_data_factory_trigger_blob_event.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.DataFactory/factories/example/triggers/example
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-9c87ea8d7c0cf47bb0fb31d33bfcd5de637af5172c132593d32d627450778313 -->