---
subcategory: "CosmosDB (DocumentDB)"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_cosmosdb_sql_dedicated_gateway"
description: |-
  Manages a SQL Dedicated Gateway within a Cosmos DB Account.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_cosmosdb_sql_dedicated_gateway

Manages a SQL Dedicated Gateway within a Cosmos DB Account.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resource-group"
        )
        azurerm_cosmosdb_account_example =
        azurerm.cosmosdb_account.CosmosdbAccount(self, "example_1",
            consistency_policy=CosmosdbAccountConsistencyPolicy(
                consistency_level="BoundedStaleness"
            ),
            geo_location=[CosmosdbAccountGeoLocation(
                failover_priority=0,
                location=cdktf.Token.as_string(azurerm_resource_group_example.location)
            )
            ],
            kind="GlobalDocumentDB",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-ca",
            offer_type="Standard",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_cosmosdb_account_example.override_logical_id("example")
        azurerm_cosmosdb_sql_dedicated_gateway_example =
        azurerm.cosmosdb_sql_dedicated_gateway.CosmosdbSqlDedicatedGateway(self, "example_2",
            cosmosdb_account_id=cdktf.Token.as_string(azurerm_cosmosdb_account_example.id),
            instance_count=1,
            instance_size="Cosmos.D4s"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_cosmosdb_sql_dedicated_gateway_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `cosmosdb_account_id` - (Required) The resource ID of the CosmosDB Account. Changing this forces a new resource to be created.

* `instance_size` - (Required) The instance size for the CosmosDB SQL Dedicated Gateway. Changing this forces a new resource to be created. Possible values are `Cosmos.D4s`, `Cosmos.D8s` and `Cosmos.D16s`.

* `instance_count` - (Required) The instance count for the CosmosDB SQL Dedicated Gateway. Possible value is between `1` and `5`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the CosmosDB SQL Dedicated Gateway.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the CosmosDB SQL Dedicated Gateway.
* `update` - (Defaults to 30 minutes) Used when updating the CosmosDB SQL Dedicated Gateway.
* `read` - (Defaults to 5 minutes) Used when retrieving the CosmosDB SQL Dedicated Gateway.
* `delete` - (Defaults to 30 minutes) Used when deleting the CosmosDB SQL Dedicated Gateway.

## Import

CosmosDB SQL Dedicated Gateways can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_cosmosdb_sql_dedicated_gateway.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.DocumentDB/databaseAccounts/account1/services/SqlDedicatedGateway
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-183150876009a5cd0ef446c73d7f5ff8283c9c3e74945d0943531255d25e20db -->