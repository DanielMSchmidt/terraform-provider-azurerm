---
subcategory: "Key Vault"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_key_vault_certificate_issuer"
description: |-
  Manages a Key Vault Certificate Issuer.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_key_vault_certificate_issuer

Manages a Key Vault Certificate Issuer.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        data_azurerm_client_config_current =
        azurerm.data_azurerm_client_config.DataAzurermClientConfig(self, "current")
        azurerm_key_vault_example = azurerm.key_vault.KeyVault(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplekeyvault",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="standard",
            tenant_id=cdktf.Token.as_string(data_azurerm_client_config_current.tenant_id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_key_vault_example.override_logical_id("example")
        azurerm_key_vault_certificate_issuer_example =
        azurerm.key_vault_certificate_issuer.KeyVaultCertificateIssuer(self, "example_3",
            account_id="0000",
            key_vault_id=cdktf.Token.as_string(azurerm_key_vault_example.id),
            name="example-issuer",
            org_id="ExampleOrgName",
            password="example-password",
            provider_name="DigiCert"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_key_vault_certificate_issuer_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `key_vault_id` - (Required) The ID of the Key Vault in which to create the Certificate Issuer. Changing this forces a new resource to be created.

* `name` - (Required) The name which should be used for this Key Vault Certificate Issuer. Changing this forces a new Key Vault Certificate Issuer to be created.

* `provider_name` - (Required) The name of the third-party Certificate Issuer. Possible values are: `DigiCert`, `GlobalSign`, `OneCertV2-PrivateCA`, `OneCertV2-PublicCA` and `SslAdminV2`.

* `org_id` - (Optional) The ID of the organization as provided to the issuer.

* `account_id` - (Optional) The account number with the third-party Certificate Issuer.

* `admin` - (Optional) One or more `admin` blocks as defined below.

* `password` - (Optional) The password associated with the account and organization ID at the third-party Certificate Issuer. If not specified, will not overwrite any previous value.

---

An `admin` block supports the following:

* `email_address` - (Required) E-mail address of the admin.

* `first_name` - (Optional) First name of the admin.

* `last_name` - (Optional) Last name of the admin.

* `phone` - (Optional) Phone number of the admin.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Key Vault Certificate Issuer.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `read` - (Defaults to 5 minutes) Used when retrieving the Key Vault Certificate Issuer.
* `create` - (Defaults to 30 minutes) Used when creating the Key Vault Certificate Issuer.
* `update` - (Defaults to 30 minutes) Used when updating the Key Vault Certificate Issuer.
* `delete` - (Defaults to 30 minutes) Used when deleting the Key Vault Certificate Issuer.

## Import

Key Vault Certificate Issuers can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_key_vault_certificate_issuer.example "https://key-vault-name.vault.azure.net/certificates/issuers/example"
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-398c6a38bbe47d3818dbcf32951ef280660b6c2accd2d8ea6ecbf218068cb1b7 -->