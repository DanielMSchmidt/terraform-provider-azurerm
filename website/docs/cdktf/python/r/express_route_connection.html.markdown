---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_express_route_connection"
description: |-
  Manages an Express Route Connection.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_express_route_connection

Manages an Express Route Connection.

~> **NOTE:** The provider status of the Express Route Circuit must be set as provisioned while creating the Express Route Connection. See more details [here](https://docs.microsoft.com/azure/expressroute/expressroute-howto-circuit-portal-resource-manager#send-the-service-key-to-your-connectivity-provider-for-provisioning).

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_virtual_wan_example = azurerm.virtual_wan.VirtualWan(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vwan",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_wan_example.override_logical_id("example")
        azurerm_express_route_port_example =
        azurerm.express_route_port.ExpressRoutePort(self, "example_2",
            bandwidth_in_gbps=10,
            encapsulation="Dot1Q",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-erp",
            peering_location="Equinix-Seattle-SE2",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_express_route_port_example.override_logical_id("example")
        azurerm_virtual_hub_example = azurerm.virtual_hub.VirtualHub(self, "example_3",
            address_prefix="10.0.1.0/24",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vhub",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_wan_id=cdktf.Token.as_string(azurerm_virtual_wan_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_hub_example.override_logical_id("example")
        azurerm_express_route_circuit_example =
        azurerm.express_route_circuit.ExpressRouteCircuit(self, "example_4",
            bandwidth_in_gbps=5,
            express_route_port_id=cdktf.Token.as_string(azurerm_express_route_port_example.id),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-erc",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku=ExpressRouteCircuitSku(
                family="MeteredData",
                tier="Standard"
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_express_route_circuit_example.override_logical_id("example")
        azurerm_express_route_circuit_peering_example =
        azurerm.express_route_circuit_peering.ExpressRouteCircuitPeering(self, "example_5",
            express_route_circuit_name=cdktf.Token.as_string(azurerm_express_route_circuit_example.name),
            peer_asn=100,
            peering_type="AzurePrivatePeering",
            primary_peer_address_prefix="192.168.1.0/30",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            secondary_peer_address_prefix="192.168.2.0/30",
            shared_key="ItsASecret",
            vlan_id=100
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_express_route_circuit_peering_example.override_logical_id("example")
        azurerm_express_route_gateway_example =
        azurerm.express_route_gateway.ExpressRouteGateway(self, "example_6",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-expressroutegateway",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            scale_units=1,
            virtual_hub_id=cdktf.Token.as_string(azurerm_virtual_hub_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_express_route_gateway_example.override_logical_id("example")
        azurerm_express_route_connection_example =
        azurerm.express_route_connection.ExpressRouteConnection(self, "example_7",
            express_route_circuit_peering_id=cdktf.Token.as_string(azurerm_express_route_circuit_peering_example.id),
            express_route_gateway_id=cdktf.Token.as_string(azurerm_express_route_gateway_example.id),
            name="example-expressrouteconn"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_express_route_connection_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Express Route Connection. Changing this forces a new resource to be created.

* `express_route_circuit_peering_id` - (Required) The ID of the Express Route Circuit Peering that this Express Route Connection connects with. Changing this forces a new resource to be created.

* `express_route_gateway_id` - (Required) The ID of the Express Route Gateway that this Express Route Connection connects with. Changing this forces a new resource to be created.

* `authorization_key` - (Optional) The authorization key to establish the Express Route Connection.

* `enable_internet_security` - (Optional) Is Internet security enabled for this Express Route Connection?

* `express_route_gateway_bypass_enabled` - (Optional) Specified whether Fast Path is enabled for Virtual Wan Firewall Hub. Defaults to `false`.

* `routing` - (Optional) A `routing` block as defined below.

* `routing_weight` - (Optional) The routing weight associated to the Express Route Connection. Possible value is between `0` and `32000`. Defaults to `0`.

---

A `routing` block supports the following:

* `associated_route_table_id` - (Optional) The ID of the Virtual Hub Route Table associated with this Express Route Connection.

* `inbound_route_map_id` - (Optional) The ID of the Route Map associated with this Express Route Connection for inbound routes.
 
* `outbound_route_map_id` - (Optional) The ID of the Route Map associated with this Express Route Connection for outbound routes.

* `propagated_route_table` - (Optional) A `propagated_route_table` block as defined below.

---

A `propagated_route_table` block supports the following:

* `labels` - (Optional) The list of labels to logically group route tables.

* `route_table_ids` - (Optional) A list of IDs of the Virtual Hub Route Table to propagate routes from Express Route Connection to the route table.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Express Route Connection.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Express Route Connection.
* `read` - (Defaults to 5 minutes) Used when retrieving the Express Route Connection.
* `update` - (Defaults to 30 minutes) Used when updating the Express Route Connection.
* `delete` - (Defaults to 30 minutes) Used when deleting the Express Route Connection.

## Import

Express Route Connections can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_express_route_connection.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/expressRouteGateways/expressRouteGateway1/expressRouteConnections/connection1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-87dc42039930c77f1b59e706573eb00b01ccdbfc84ff2e81099d944f03f05b4c -->