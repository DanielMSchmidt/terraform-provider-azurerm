---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_vpn_gateway_nat_rule"
description: |-
  Manages a VPN Gateway NAT Rule.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_vpn_gateway_nat_rule

Manages a VPN Gateway NAT Rule.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_virtual_wan_example = azurerm.virtual_wan.VirtualWan(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vwan",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_wan_example.override_logical_id("example")
        azurerm_virtual_hub_example = azurerm.virtual_hub.VirtualHub(self, "example_2",
            address_prefix="10.0.1.0/24",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vhub",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_wan_id=cdktf.Token.as_string(azurerm_virtual_wan_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_hub_example.override_logical_id("example")
        azurerm_vpn_gateway_example = azurerm.vpn_gateway.VpnGateway(self, "example_3",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vpngateway",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_hub_id=cdktf.Token.as_string(azurerm_virtual_hub_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_vpn_gateway_example.override_logical_id("example")
        azurerm_vpn_gateway_nat_rule_example =
        azurerm.vpn_gateway_nat_rule.VpnGatewayNatRule(self, "example_4",
            external_mapping=[VpnGatewayNatRuleExternalMapping(
                address_space="192.168.21.0/26"
            )
            ],
            internal_mapping=[VpnGatewayNatRuleInternalMapping(
                address_space="10.4.0.0/26"
            )
            ],
            name="example-vpngatewaynatrule",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            vpn_gateway_id=cdktf.Token.as_string(azurerm_vpn_gateway_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_vpn_gateway_nat_rule_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this VPN Gateway NAT Rule. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) The Name of the Resource Group in which this VPN Gateway NAT Rule should be created. Changing this forces a new resource to be created.

* `vpn_gateway_id` - (Required) The ID of the VPN Gateway that this VPN Gateway NAT Rule belongs to. Changing this forces a new resource to be created.

* `external_mapping` - (Optional) One or more `external_mapping` blocks as documented below.

* `internal_mapping` - (Optional) One or more `internal_mapping` blocks as documented below.

* `ip_configuration_id` - (Optional) The ID of the IP Configuration this VPN Gateway NAT Rule applies to. Possible values are `Instance0` and `Instance1`.

* `mode` - (Optional) The source NAT direction of the VPN NAT. Possible values are `EgressSnat` and `IngressSnat`. Defaults to `EgressSnat`. Changing this forces a new resource to be created.

* `type` - (Optional) The type of the VPN Gateway NAT Rule. Possible values are `Dynamic` and `Static`. Defaults to `Static`. Changing this forces a new resource to be created.

* `external_address_space_mappings` - (Optional) (Deprecated) A list of CIDR Ranges which are used for external mapping of the VPN Gateway NAT Rule.

~> **NOTE:** `external_address_space_mappings` is deprecated and will be removed in favour of the property `external_mapping` in version 4.0 of the AzureRM Provider.

* `internal_address_space_mappings` - (Optional) (Deprecated) A list of CIDR Ranges which are used for internal mapping of the VPN Gateway NAT Rule.

~> **NOTE:** `internal_address_space_mappings` is deprecated and will be removed in favour of the property `internal_mapping` in version 4.0 of the AzureRM Provider.

---

A `external_mapping` block exports the following:

* `address_space` - (Required) The string CIDR representing the address space for the VPN Gateway Nat Rule external mapping.

* `port_range` - (Optional) The single port range for the VPN Gateway Nat Rule external mapping.

---

A `internal_mapping` block exports the following:

* `address_space` - (Required) The string CIDR representing the address space for the VPN Gateway Nat Rule internal mapping.

* `port_range` - (Optional) The single port range for the VPN Gateway Nat Rule internal mapping.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the VPN Gateway NAT Rule.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the VPN Gateway NAT Rule.
* `read` - (Defaults to 5 minutes) Used when retrieving the VPN Gateway NAT Rule.
* `update` - (Defaults to 30 minutes) Used when updating the VPN Gateway NAT Rule.
* `delete` - (Defaults to 30 minutes) Used when deleting the VPN Gateway NAT Rule.

## Import

VPN Gateway NAT Rules can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_vpn_gateway_nat_rule.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Network/vpnGateways/vpnGateway1/natRules/natRule1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-7dd23a028e1923b65468610cb0280a35c0325635bbb1b0cfe812e6bb96394e24 -->