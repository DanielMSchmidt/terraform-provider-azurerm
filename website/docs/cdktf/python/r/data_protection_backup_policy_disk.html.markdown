---
subcategory: "DataProtection"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_data_protection_backup_policy_disk"
description: |-
  Manages a Backup Policy Disk.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_data_protection_backup_policy_disk

Manages a Backup Policy Disk.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_data_protection_backup_vault_example =
        azurerm.data_protection_backup_vault.DataProtectionBackupVault(self, "example_1",
            datastore_type="VaultStore",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-backup-vault",
            redundancy="LocallyRedundant",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_data_protection_backup_vault_example.override_logical_id("example")
        azurerm_data_protection_backup_policy_disk_example =
        azurerm.data_protection_backup_policy_disk.DataProtectionBackupPolicyDisk(self, "example_2",
            backup_repeating_time_intervals=["R/2021-05-19T06:33:16+00:00/PT4H"],
            default_retention_duration="P7D",
            name="example-backup-policy",
            retention_rule=[DataProtectionBackupPolicyDiskRetentionRule(
                criteria=DataProtectionBackupPolicyDiskRetentionRuleCriteria(
                    absolute_criteria="FirstOfDay"
                ),
                duration="P7D",
                name="Daily",
                priority=25
            ), DataProtectionBackupPolicyDiskRetentionRule(
                criteria=DataProtectionBackupPolicyDiskRetentionRuleCriteria(
                    absolute_criteria="FirstOfWeek"
                ),
                duration="P7D",
                name="Weekly",
                priority=20
            )
            ],
            vault_id=cdktf.Token.as_string(azurerm_data_protection_backup_vault_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_data_protection_backup_policy_disk_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Backup Policy Disk. Changing this forces a new Backup Policy Disk to be created.

* `vault_id` - (Required) The ID of the Backup Vault within which the Backup Policy Disk should exist. Changing this forces a new Backup Policy Disk to be created.

* `backup_repeating_time_intervals` - (Required) Specifies a list of repeating time interval. It should follow `ISO 8601` repeating time interval . Changing this forces a new Backup Policy Disk to be created.

* `default_retention_duration` - (Required) The duration of default retention rule. It should follow `ISO 8601` duration format. Changing this forces a new Backup Policy Disk to be created.

---

* `retention_rule` - (Optional) One or more `retention_rule` blocks as defined below. Changing this forces a new Backup Policy Disk to be created.

---

A `retention_rule` block supports the following:

* `name` - (Required) The name which should be used for this retention rule. Changing this forces a new Backup Policy Disk to be created.

* `duration` - (Required) Duration of deletion after given timespan. It should follow `ISO 8601` duration format. Changing this forces a new Backup Policy Disk to be created.

* `criteria` - (Required) A `criteria` block as defined below. Changing this forces a new Backup Policy Disk to be created.

* `priority` - (Required) Retention Tag priority. Changing this forces a new Backup Policy Disk to be created.

---

A `criteria` block supports the following:

* `absolute_criteria` - (Optional) Possible values are `FirstOfDay` and `FirstOfWeek`. Changing this forces a new Backup Policy Disk to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Backup Policy Disk.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Backup Policy Disk.
* `read` - (Defaults to 5 minutes) Used when retrieving the Backup Policy Disk.
* `update` - (Defaults to 30 minutes) Used when updating the Backup Policy Disk.
* `delete` - (Defaults to 30 minutes) Used when deleting the Backup Policy Disk.

## Import

Backup Policy Disks can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_data_protection_backup_policy_disk.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DataProtection/backupVaults/vault1/backupPolicies/backupPolicy1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-24d746fcaf8ce7f3189541a1736de10e409b3c3c2ee8d02c439cf99cc3e9749a -->