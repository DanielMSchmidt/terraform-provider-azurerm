---
subcategory: "Data Explorer"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_kusto_iothub_data_connection"
description: |-
  Manages Kusto / Data Explorer IotHub Data Connection
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_kusto_iothub_data_connection

Manages a Kusto (also known as Azure Data Explorer) IotHub Data Connection

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_iothub_example = azurerm.iothub.Iothub(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="exampleIoTHub",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku=IothubSku(
                capacity=cdktf.Token.as_number("1"),
                name="B1"
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_iothub_example.override_logical_id("example")
        azurerm_iothub_consumer_group_example =
        azurerm.iothub_consumer_group.IothubConsumerGroup(self, "example_2",
            eventhub_endpoint_name="events",
            iothub_name=cdktf.Token.as_string(azurerm_iothub_example.name),
            name="example-consumer-group",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_iothub_consumer_group_example.override_logical_id("example")
        azurerm_iothub_shared_access_policy_example =
        azurerm.iothub_shared_access_policy.IothubSharedAccessPolicyA(self, "example_3",
            iothub_name=cdktf.Token.as_string(azurerm_iothub_example.name),
            name="example-shared-access-policy",
            registry_read=True,
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_iothub_shared_access_policy_example.override_logical_id("example")
        azurerm_kusto_cluster_example = azurerm.kusto_cluster.KustoCluster(self, "example_4",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplekustocluster",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku=KustoClusterSku(
                capacity=2,
                name="Standard_D13_v2"
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_kusto_cluster_example.override_logical_id("example")
        azurerm_kusto_database_example = azurerm.kusto_database.KustoDatabase(self, "example_5",
            cluster_name=cdktf.Token.as_string(azurerm_kusto_cluster_example.name),
            hot_cache_period="P7D",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-kusto-database",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            soft_delete_period="P31D"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_kusto_database_example.override_logical_id("example")
        azurerm_kusto_iothub_data_connection_example =
        azurerm.kusto_iothub_data_connection.KustoIothubDataConnection(self, "example_6",
            cluster_name=cdktf.Token.as_string(azurerm_kusto_cluster_example.name),
            consumer_group=cdktf.Token.as_string(azurerm_iothub_consumer_group_example.name),
            data_format="JSON",
            database_name=cdktf.Token.as_string(azurerm_kusto_database_example.name),
            event_system_properties=["message-id", "sequence-number", "to"],
            iothub_id=cdktf.Token.as_string(azurerm_iothub_example.id),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            mapping_rule_name="my-table-mapping",
            name="my-kusto-iothub-data-connection",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            shared_access_policy_name=cdktf.Token.as_string(azurerm_iothub_shared_access_policy_example.name),
            table_name="my-table"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_kusto_iothub_data_connection_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Kusto IotHub Data Connection to create. Changing this forces a new resource to be created.

* `location` - (Required) The location where the Kusto Database should be created. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) Specifies the Resource Group where the Kusto Database should exist. Changing this forces a new resource to be created.

* `cluster_name` - (Required) Specifies the name of the Kusto Cluster this data connection will be added to. Changing this forces a new resource to be created.

* `database_name` - (Required) Specifies the name of the Kusto Database this data connection will be added to. Changing this forces a new resource to be created.

* `iothub_id` - (Required) Specifies the resource id of the IotHub this data connection will use for ingestion. Changing this forces a new resource to be created.

* `consumer_group` - (Required) Specifies the IotHub consumer group this data connection will use for ingestion. Changing this forces a new resource to be created.

* `shared_access_policy_name` - (Required) Specifies the IotHub Shared Access Policy this data connection will use for ingestion, which must have read permission. Changing this forces a new resource to be created.

* `event_system_properties` - (Optional) Specifies the System Properties that each IoT Hub message should contain. Changing this forces a new resource to be created. Possible values are `message-id`, `sequence-number`, `to`, `absolute-expiry-time`, `iothub-enqueuedtime`, `correlation-id`, `user-id`, `iothub-ack`, `iothub-connection-device-id`, `iothub-connection-auth-generation-id` and `iothub-connection-auth-method`.

* `table_name` - (Optional) Specifies the target table name used for the message ingestion. Table must exist before resource is created. Changing this forces a new resource to be created.

* `mapping_rule_name` - (Optional) Specifies the mapping rule used for the message ingestion. Mapping rule must exist before resource is created. Changing this forces a new resource to be created.

* `data_format` - (Optional) Specifies the data format of the IoTHub messages. Allowed values: `APACHEAVRO`, `AVRO`, `CSV`, `JSON`, `MULTIJSON`, `ORC`, `PARQUET`, `PSV`, `RAW`, `SCSV`, `SINGLEJSON`, `SOHSV`, `TSV`, `TSVE`, `TXT` and `W3CLOGFILE`. Changing this forces a new resource to be created.

* `database_routing_type` - (Optional) Indication for database routing information from the data connection, by default only database routing information is allowed. Allowed values: `Single`, `Multi`. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Kusto IotHub Data Connection.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 60 minutes) Used when creating the Kusto IotHub Data Connection.
* `read` - (Defaults to 5 minutes) Used when retrieving the Kusto IotHub Data Connection.
* `delete` - (Defaults to 60 minutes) Used when deleting the Kusto IotHub Data Connection.

## Import

Kusto IotHub Data Connections can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_kusto_iothub_data_connection.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Kusto/clusters/cluster1/databases/database1/dataConnections/dataConnection1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-afc7179f4d865d34e42350f113de55cedfc29b1eded2fedccc62ae7f2c0e8495 -->