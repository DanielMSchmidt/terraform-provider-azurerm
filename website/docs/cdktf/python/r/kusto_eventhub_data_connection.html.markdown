---
subcategory: "Data Explorer"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_kusto_eventhub_data_connection"
description: |-
  Manages Kusto / Data Explorer EventHub Data Connection
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_kusto_eventhub_data_connection

Manages a Kusto (also known as Azure Data Explorer) EventHub Data Connection

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="my-kusto-rg"
        )
        azurerm_eventhub_namespace_eventhub_ns =
        azurerm.eventhub_namespace.EventhubNamespace(self, "eventhub_ns",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="my-eventhub-ns",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku="Standard"
        )
        azurerm_kusto_cluster_cluster = azurerm.kusto_cluster.KustoCluster(self, "cluster",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="kustocluster",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku=KustoClusterSku(
                capacity=2,
                name="Standard_D13_v2"
            )
        )
        azurerm_kusto_database_database =
        azurerm.kusto_database.KustoDatabase(self, "database",
            cluster_name=cdktf.Token.as_string(azurerm_kusto_cluster_cluster.name),
            hot_cache_period="P7D",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="my-kusto-database",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            soft_delete_period="P31D"
        )
        azurerm_eventhub_eventhub = azurerm.eventhub.Eventhub(self, "eventhub",
            message_retention=1,
            name="my-eventhub",
            namespace_name=cdktf.Token.as_string(azurerm_eventhub_namespace_eventhub_ns.name),
            partition_count=1,
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        azurerm_eventhub_consumer_group_consumer_group =
        azurerm.eventhub_consumer_group.EventhubConsumerGroup(self, "consumer_group",
            eventhub_name=cdktf.Token.as_string(azurerm_eventhub_eventhub.name),
            name="my-eventhub-consumergroup",
            namespace_name=cdktf.Token.as_string(azurerm_eventhub_namespace_eventhub_ns.name),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        azurerm.kusto_eventhub_data_connection.KustoEventhubDataConnection(self, "eventhub_connection",
            cluster_name=cdktf.Token.as_string(azurerm_kusto_cluster_cluster.name),
            consumer_group=cdktf.Token.as_string(azurerm_eventhub_consumer_group_consumer_group.name),
            data_format="JSON",
            database_name=cdktf.Token.as_string(azurerm_kusto_database_database.name),
            eventhub_id=cdktf.Token.as_string(azurerm_eventhub_eventhub.id),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            mapping_rule_name="my-table-mapping",
            name="my-kusto-eventhub-data-connection",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            table_name="my-table"
        )
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Kusto EventHub Data Connection to create. Changing this forces a new resource to be created.

* `location` - (Required) The location where the Kusto Database should be created. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) Specifies the Resource Group where the Kusto Database should exist. Changing this forces a new resource to be created.

* `cluster_name` - (Required) Specifies the name of the Kusto Cluster this data connection will be added to. Changing this forces a new resource to be created.

* `compression` - (Optional) Specifies compression type for the connection. Allowed values: `GZip` and `None`. Defaults to `None`. Changing this forces a new resource to be created.

* `database_name` - (Required) Specifies the name of the Kusto Database this data connection will be added to. Changing this forces a new resource to be created.

* `eventhub_id` - (Required) Specifies the resource id of the EventHub this data connection will use for ingestion. Changing this forces a new resource to be created.

* `event_system_properties` - (Optional) Specifies a list of system properties for the Event Hub.

* `consumer_group` - (Required) Specifies the EventHub consumer group this data connection will use for ingestion. Changing this forces a new resource to be created.

* `table_name` - (Optional) Specifies the target table name used for the message ingestion. Table must exist before resource is created.

* `identity_id` - (Optional) The resource ID of a managed identity (system or user assigned) to be used to authenticate with event hub.

* `mapping_rule_name` - (Optional) Specifies the mapping rule used for the message ingestion. Mapping rule must exist before resource is created.

* `data_format` - (Optional) Specifies the data format of the EventHub messages. Allowed values: `APACHEAVRO`, `AVRO`, `CSV`, `JSON`, `MULTIJSON`, `ORC`, `PARQUET`, `PSV`, `RAW`, `SCSV`, `SINGLEJSON`, `SOHSV`, `TSVE`, `TSV`, `TXT`, and `W3CLOGFILE`.

* `database_routing_type` - (Optional) Indication for database routing information from the data connection, by default only database routing information is allowed. Allowed values: `Single`, `Multi`. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Kusto EventHub Data Connection.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 60 minutes) Used when creating the Kusto EventHub Data Connection.
* `update` - (Defaults to 60 minutes) Used when updating the Kusto EventHub Data Connection.
* `read` - (Defaults to 5 minutes) Used when retrieving the Kusto EventHub Data Connection.
* `delete` - (Defaults to 60 minutes) Used when deleting the Kusto EventHub Data Connection.

## Import

Kusto EventHub Data Connections can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_kusto_eventhub_data_connection.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Kusto/clusters/cluster1/databases/database1/dataConnections/eventHubConnection1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-19e8a486d7d7250077fa407d5c5bebd7379cb76862f223f663f226d2ab75116b -->