---
subcategory: "Spring Cloud"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_spring_cloud_gateway_route_config"
description: |-
  Manages a Spring Cloud Gateway Route Config.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_spring_cloud_gateway_route_config

Manages a Spring Cloud Gateway Route Config.

-> **NOTE:** This resource is applicable only for Spring Cloud Service with enterprise tier.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm.provider.AzurermProvider(self, "azurerm",
            features=AzurermProviderFeatures()
        )
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example"
        )
        azurerm_spring_cloud_service_example =
        azurerm.spring_cloud_service.SpringCloudService(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="E0"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_spring_cloud_service_example.override_logical_id("example")
        azurerm_spring_cloud_app_example =
        azurerm.spring_cloud_app.SpringCloudApp(self, "example_3",
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            service_name=cdktf.Token.as_string(azurerm_spring_cloud_service_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_spring_cloud_app_example.override_logical_id("example")
        azurerm_spring_cloud_gateway_example =
        azurerm.spring_cloud_gateway.SpringCloudGateway(self, "example_4",
            name="default",
            spring_cloud_service_id=cdktf.Token.as_string(azurerm_spring_cloud_service_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_spring_cloud_gateway_example.override_logical_id("example")
        azurerm_spring_cloud_gateway_route_config_example =
        azurerm.spring_cloud_gateway_route_config.SpringCloudGatewayRouteConfig(self, "example_5",
            name="example",
            protocol="HTTPS",
            route=[SpringCloudGatewayRouteConfigRoute(
                classification_tags=["tag1", "tag2"],
                description="example description",
                filters=["StripPrefix=2", "RateLimit=1,1s"],
                order=1,
                predicates=["Path=/api5/customer/**"],
                sso_validation_enabled=True,
                title="myApp route config",
                token_relay=True,
                uri="https://www.example.com"
            )
            ],
            spring_cloud_app_id=cdktf.Token.as_string(azurerm_spring_cloud_app_example.id),
            spring_cloud_gateway_id=cdktf.Token.as_string(azurerm_spring_cloud_gateway_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_spring_cloud_gateway_route_config_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Spring Cloud Gateway Route Config. Changing this forces a new Spring Cloud Gateway Route Config to be created.

* `spring_cloud_gateway_id` - (Required) The ID of the Spring Cloud Gateway. Changing this forces a new Spring Cloud Gateway Route Config to be created.

* `filters` - (Optional) Specifies a list of filters which are used to modify the request before sending it to the target endpoint, or the received response in app level.

* `predicates` - (Optional) Specifies a list of conditions to evaluate a route for each request in app level. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.

* `sso_validation_enabled` - (Optional) Should the sso validation be enabled in app level?

---

* `route` - (Optional) One or more `route` blocks as defined below.

* `open_api` - (Optional) One or more `open_api` blocks as defined below.

* `protocol` - (Optional) Specifies the protocol of routed Spring Cloud App. Allowed values are `HTTP` and `HTTPS`. Defaults to `HTTP`. 

~> **Note:** You likely want to use `HTTPS` in a production environment, since `HTTP` offers no encryption.

* `spring_cloud_app_id` - (Optional) The ID of the Spring Cloud App.

---

A `route` block supports the following:

* `order` - (Required) Specifies the route processing order.

* `description` - (Optional) Specifies the description which will be applied to methods in the generated OpenAPI documentation.

* `filters` - (Optional) Specifies a list of filters which are used to modify the request before sending it to the target endpoint, or the received response.

* `predicates` - (Optional) Specifies a list of conditions to evaluate a route for each request. Each predicate may be evaluated against request headers and parameter values. All of the predicates associated with a route must evaluate to true for the route to be matched to the request.

* `sso_validation_enabled` - (Optional) Should the sso validation be enabled?

* `classification_tags` - (Optional) Specifies the classification tags which will be applied to methods in the generated OpenAPI documentation.

* `title` - (Optional) Specifies the title which will be applied to methods in the generated OpenAPI documentation.

* `token_relay` - (Optional) Should pass currently-authenticated user's identity token to application service?

* `uri` - (Optional) Specifies the full uri which will override `appName`.

---

A `open_api` block supports the following:

* `uri` - (Optional) The URI of OpenAPI specification.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Spring Cloud Gateway Route Config.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Spring Cloud Gateway Route Config.
* `read` - (Defaults to 5 minutes) Used when retrieving the Spring Cloud Gateway Route Config.
* `update` - (Defaults to 30 minutes) Used when updating the Spring Cloud Gateway Route Config.
* `delete` - (Defaults to 30 minutes) Used when deleting the Spring Cloud Gateway Route Config.

## Import

Spring Cloud Gateway Route Configs can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_spring_cloud_gateway_route_config.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.AppPlatform/spring/service1/gateways/gateway1/routeConfigs/routeConfig1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-34f3085e135bcd42627725424136a15ce160ee10bb6d66545a81be42a9e63ee3 -->