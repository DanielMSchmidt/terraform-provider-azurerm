---
subcategory: "Database"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_mysql_firewall_rule"
description: |-
  Manages a Firewall Rule for a MySQL Server.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_mysql_firewall_rule

Manages a Firewall Rule for a MySQL Server.

## Example Usage (Single IP Address)

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="api-rg-pro"
        )
        azurerm_mysql_server_example = azurerm.mysql_server.MysqlServer(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="GP_Gen5_2",
            ssl_enforcement_enabled=True,
            version="5.7"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_mysql_server_example.override_logical_id("example")
        azurerm_mysql_firewall_rule_example =
        azurerm.mysql_firewall_rule.MysqlFirewallRule(self, "example_2",
            end_ip_address="40.112.8.12",
            name="office",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            server_name=cdktf.Token.as_string(azurerm_mysql_server_example.name),
            start_ip_address="40.112.8.12"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_mysql_firewall_rule_example.override_logical_id("example")
```

## Example Usage (IP Range)

```hcl
resource "azurerm_resource_group" "example" {
  name     = "api-rg-pro"
  location = "West Europe"
}

resource "azurerm_mysql_server" "example" {
  # ...
}

resource "azurerm_mysql_firewall_rule" "example" {
  name                = "office"
  resource_group_name = azurerm_resource_group.example.name
  server_name         = azurerm_mysql_server.example.name
  start_ip_address    = "40.112.0.0"
  end_ip_address      = "40.112.255.255"
}
```

## Example Usage (Allow access to Azure services)

```hcl
resource "azurerm_resource_group" "example" {
  name     = "api-rg-pro"
  location = "West Europe"
}

resource "azurerm_mysql_server" "example" {
  # ...
}

resource "azurerm_mysql_firewall_rule" "example" {
  name                = "office"
  resource_group_name = azurerm_resource_group.example.name
  server_name         = azurerm_mysql_server.example.name
  start_ip_address    = "0.0.0.0"
  end_ip_address      = "0.0.0.0"
}
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the MySQL Firewall Rule. Changing this forces a new resource to be created.

* `server_name` - (Required) Specifies the name of the MySQL Server. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) The name of the resource group in which the MySQL Server exists. Changing this forces a new resource to be created.

* `start_ip_address` - (Required) Specifies the Start IP Address associated with this Firewall Rule. 

* `end_ip_address` - (Required) Specifies the End IP Address associated with this Firewall Rule. 

-> **NOTE:** The Azure feature `Allow access to Azure services` can be enabled by setting `start_ip_address` and `end_ip_address` to `0.0.0.0` which ([is documented in the Azure API Docs](https://docs.microsoft.com/rest/api/sql/firewallrules/createorupdate)).

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the MySQL Firewall Rule.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the MySQL Firewall Rule.
* `update` - (Defaults to 30 minutes) Used when updating the MySQL Firewall Rule.
* `read` - (Defaults to 5 minutes) Used when retrieving the MySQL Firewall Rule.
* `delete` - (Defaults to 30 minutes) Used when deleting the MySQL Firewall Rule.

## Import

MySQL Firewall Rule's can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_mysql_firewall_rule.rule1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.DBforMySQL/servers/server1/firewallRules/rule1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-f5f3d1dae342e73c57e215c1049fcd2ecda88b1031abad51ebcc0f776f4437d4 -->