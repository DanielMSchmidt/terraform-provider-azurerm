---
subcategory: "App Service (Web Apps)"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_app_service_certificate_binding"
description: |-
  Manages an App Service Certificate Binding.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_app_service_certificate_binding

Manages an App Service Certificate Binding.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="webapp"
        )
        data_azurerm_dns_zone_example =
        azurerm.data_azurerm_dns_zone.DataAzurermDnsZone(self, "example_1",
            name="example.com",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_azurerm_dns_zone_example.override_logical_id("example")
        azurerm_app_service_plan_example =
        azurerm.app_service_plan.AppServicePlan(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="appserviceplan",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku=AppServicePlanSku(
                size="P1",
                tier="Premium"
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_app_service_plan_example.override_logical_id("example")
        azurerm_app_service_example = azurerm.app_service.AppService(self, "example_3",
            app_service_plan_id=cdktf.Token.as_string(azurerm_app_service_plan_example.id),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="mywebapp",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_app_service_example.override_logical_id("example")
        azurerm_dns_cname_record_example =
        azurerm.dns_cname_record.DnsCnameRecord(self, "example_4",
            name="www",
            record=cdktf.Token.as_string(azurerm_app_service_example.default_site_hostname),
            resource_group_name=cdktf.Token.as_string(data_azurerm_dns_zone_example.resource_group_name),
            ttl=300,
            zone_name=cdktf.Token.as_string(data_azurerm_dns_zone_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_dns_cname_record_example.override_logical_id("example")
        azurerm_dns_txt_record_example = azurerm.dns_txt_record.DnsTxtRecord(self, "example_5",
            name="asuid.${" + azurerm_dns_cname_record_example.name + "}",
            record=[DnsTxtRecordRecord(
                value=cdktf.Token.as_string(azurerm_app_service_example.custom_domain_verification_id)
            )
            ],
            resource_group_name=cdktf.Token.as_string(data_azurerm_dns_zone_example.resource_group_name),
            ttl=300,
            zone_name=cdktf.Token.as_string(data_azurerm_dns_zone_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_dns_txt_record_example.override_logical_id("example")
        azurerm_app_service_custom_hostname_binding_example =
        azurerm.app_service_custom_hostname_binding.AppServiceCustomHostnameBinding(self, "example_6",
            app_service_name=cdktf.Token.as_string(azurerm_app_service_example.name),
            depends_on=[azurerm_dns_txt_record_example],
            hostname=cdktf.Fn.trim(
                cdktf.Token.as_string(azurerm_dns_cname_record_example.fqdn), "."),
            lifecycle=cdktf.TerraformResourceLifecycle(
                ignore_changes=[ssl_state, thumbprint]
            ),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_app_service_custom_hostname_binding_example.override_logical_id("example")
        azurerm_app_service_managed_certificate_example =
        azurerm.app_service_managed_certificate.AppServiceManagedCertificate(self, "example_7",
            custom_hostname_binding_id=cdktf.Token.as_string(azurerm_app_service_custom_hostname_binding_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_app_service_managed_certificate_example.override_logical_id("example")
        azurerm_app_service_certificate_binding_example =
        azurerm.app_service_certificate_binding.AppServiceCertificateBinding(self, "example_8",
            certificate_id=cdktf.Token.as_string(azurerm_app_service_managed_certificate_example.id),
            hostname_binding_id=cdktf.Token.as_string(azurerm_app_service_custom_hostname_binding_example.id),
            ssl_state="SniEnabled"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_app_service_certificate_binding_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `certificate_id` - (Required) The ID of the certificate to bind to the custom domain. Changing this forces a new App Service Certificate Binding to be created.

* `hostname_binding_id` - (Required) The ID of the Custom Domain/Hostname Binding. Changing this forces a new App Service Certificate Binding to be created.

* `ssl_state` - (Required) The type of certificate binding. Allowed values are `IpBasedEnabled` or `SniEnabled`. Changing this forces a new App Service Certificate Binding to be created.

## Attributes Reference

In addition to the arguments listed above - the following attributes are exported:

* `id` - The ID of the App Service Certificate Binding.

* `app_service_name` - The name of the App Service to which the certificate was bound.

* `hostname` - The hostname of the bound certificate.

* `thumbprint` - The certificate thumbprint.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `read` - (Defaults to 5 minutes) Used when retrieving the App Service Certificate Binding.
* `create` - (Defaults to 30 minutes) Used when creating the App Service Certificate Binding.
* `delete` - (Defaults to 30 minutes) Used when deleting the App Service Certificate Binding.

## Import

App Service Certificate Bindings can be imported using the `hostname_binding_id` and the `app_service_certificate_id` , e.g.

```shell
terraform import azurerm_app_service_certificate_binding.example "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Web/sites/instance1/hostNameBindings/mywebsite.com|/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Web/certificates/mywebsite.com"
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-db1efb4575ef6d9fb894f7e586af93118f877eccc7c0deae3ebaa011f08921ab -->