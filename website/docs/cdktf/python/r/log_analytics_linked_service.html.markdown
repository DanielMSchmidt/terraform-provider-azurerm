---
subcategory: "Log Analytics"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_log_analytics_linked_service"
description: |-
  Manages a Log Analytics Linked Service.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_log_analytics_linked_service

Manages a Log Analytics Linked Service.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="resourcegroup-01"
        )
        azurerm_automation_account_example =
        azurerm.automation_account.AutomationAccount(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="automation-01",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="Basic",
            tags={
                "environment": "development"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_automation_account_example.override_logical_id("example")
        azurerm_log_analytics_workspace_example =
        azurerm.log_analytics_workspace.LogAnalyticsWorkspace(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="workspace-01",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            retention_in_days=30,
            sku="PerGB2018"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_log_analytics_workspace_example.override_logical_id("example")
        azurerm_log_analytics_linked_service_example =
        azurerm.log_analytics_linked_service.LogAnalyticsLinkedService(self, "example_3",
            read_access_id=cdktf.Token.as_string(azurerm_automation_account_example.id),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            workspace_id=cdktf.Token.as_string(azurerm_log_analytics_workspace_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_log_analytics_linked_service_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `resource_group_name` - (Required) The name of the resource group in which the Log Analytics Linked Service is created. Changing this forces a new resource to be created.

* `workspace_id` - (Required) The ID of the Log Analytics Workspace that will contain the Log Analytics Linked Service resource. 

* `read_access_id` - (Optional) The ID of the readable Resource that will be linked to the workspace. This should be used for linking to an Automation Account resource.

* `write_access_id` - (Optional) The ID of the writable Resource that will be linked to the workspace. This should be used for linking to a Log Analytics Cluster resource.

~> **NOTE:** You must define at least one of the above access resource id attributes (e.g. `read_access_id` or `write_access_id`).

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The Log Analytics Linked Service ID.

* `name` - The generated name of the Linked Service. The format for this attribute is always `<workspace name>/<linked service type>`(e.g. `workspace1/Automation` or `workspace1/Cluster`)

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Log Analytics Workspace.
* `update` - (Defaults to 30 minutes) Used when updating the Log Analytics Workspace.
* `read` - (Defaults to 5 minutes) Used when retrieving the Log Analytics Workspace.
* `delete` - (Defaults to 30 minutes) Used when deleting the Log Analytics Workspace.

## Import

Log Analytics Workspaces can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_log_analytics_linked_service.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.OperationalInsights/workspaces/workspace1/linkedServices/Automation
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-a5622dfe89037392df614db35447aaf8a76c5be968956538098d53b51acfb4b1 -->