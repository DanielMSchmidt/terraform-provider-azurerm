---
subcategory: "Key Vault"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_key_vault_managed_storage_account_sas_token_definition"
description: |-
  Manages a Key Vault Managed Storage Account SAS Definition.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_key_vault_managed_storage_account_sas_token_definition

Manages a Key Vault Managed Storage Account SAS Definition.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_storage_account_example =
        azurerm.storage_account.StorageAccount(self, "example_1",
            account_replication_type="LRS",
            account_tier="Standard",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="storageaccountname",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_example.override_logical_id("example")
        data_azurerm_client_config_example =
        azurerm.data_azurerm_client_config.DataAzurermClientConfig(self, "example_2")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_azurerm_client_config_example.override_logical_id("example")
        data_azurerm_storage_account_sas_example =
        azurerm.data_azurerm_storage_account_sas.DataAzurermStorageAccountSas(self, "example_3",
            connection_string=cdktf.Token.as_string(azurerm_storage_account_example.primary_connection_string),
            expiry="2023-04-30T00:00:00Z",
            https_only=True,
            permissions=DataAzurermStorageAccountSasPermissions(
                add=True,
                create=True,
                delete=False,
                filter=False,
                list=False,
                process=False,
                read=True,
                tag=False,
                update=False,
                write=True
            ),
            resource_types=DataAzurermStorageAccountSasResourceTypes(
                container=False,
                object=False,
                service=True
            ),
            services=DataAzurermStorageAccountSasServices(
                blob=True,
                file=False,
                queue=False,
                table=False
            ),
            start="2021-04-30T00:00:00Z"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_azurerm_storage_account_sas_example.override_logical_id("example")
        azurerm_key_vault_example = azurerm.key_vault.KeyVault(self, "example_4",
            access_policy=[KeyVaultAccessPolicy(
                object_id=cdktf.Token.as_string(data_azurerm_client_config_example.object_id),
                secret_permissions=["Get", "Delete"],
                storage_permissions=["Get", "List", "Set", "SetSAS", "GetSAS", "DeleteSAS", "Update", "RegenerateKey"
                ],
                tenant_id=cdktf.Token.as_string(data_azurerm_client_config_example.tenant_id)
            )
            ],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-keyvault",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="standard",
            tenant_id=cdktf.Token.as_string(data_azurerm_client_config_example.tenant_id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_key_vault_example.override_logical_id("example")
        azurerm_key_vault_managed_storage_account_example =
        azurerm.key_vault_managed_storage_account.KeyVaultManagedStorageAccount(self, "example_5",
            key_vault_id=cdktf.Token.as_string(azurerm_key_vault_example.id),
            name="examplemanagedstorage",
            regenerate_key_automatically=False,
            regeneration_period="P1D",
            storage_account_id=cdktf.Token.as_string(azurerm_storage_account_example.id),
            storage_account_key="key1"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_key_vault_managed_storage_account_example.override_logical_id("example")
        azurerm_key_vault_managed_storage_account_sas_token_definition_example =
        azurerm.key_vault_managed_storage_account_sas_token_definition.KeyVaultManagedStorageAccountSasTokenDefinition(self, "example_6",
            managed_storage_account_id=cdktf.Token.as_string(azurerm_key_vault_managed_storage_account_example.id),
            name="examplesasdefinition",
            sas_template_uri=cdktf.Token.as_string(data_azurerm_storage_account_sas_example.sas),
            sas_type="account",
            validity_period="P1D"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_key_vault_managed_storage_account_sas_token_definition_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this SAS Definition.

* `managed_storage_account_id` - (Required) The ID of the Managed Storage Account.

* `sas_template_uri` - (Required) The SAS definition token template signed with an arbitrary key. Tokens created according to the SAS definition will have the same properties as the template, but regenerated with a new validity period.

* `sas_type` - (Required) The type of SAS token the SAS definition will create. Possible values are `account` and `service`.

* `validity_period` - (Required) Validity period of SAS token. Value needs to be in [ISO 8601 duration format](https://en.wikipedia.org/wiki/ISO_8601#Durations).

---

* `tags` - (Optional) A mapping of tags which should be assigned to the SAS Definition. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Managed Storage Account SAS Definition.

* `secret_id` - The ID of the Secret that is created by Managed Storage Account SAS Definition.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Key Vault.
* `read` - (Defaults to 5 minutes) Used when retrieving the Key Vault.
* `update` - (Defaults to 30 minutes) Used when updating the Key Vault.
* `delete` - (Defaults to 30 minutes) Used when deleting the Key Vault.

## Import

Key Vaults can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_key_vault_managed_storage_account_sas_token_definition.example https://example-keyvault.vault.azure.net/storage/exampleStorageAcc01/sas/exampleSasDefinition01
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-95822bbb343eb46ee342d17598c43c86101fe105aa74a9ce590061e19f50148d -->