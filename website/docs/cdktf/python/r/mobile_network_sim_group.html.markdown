---
subcategory: "Mobile Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_mobile_network_sim_group"
description: |-
  Manages a Mobile Network Sim Group.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_mobile_network_sim_group

Manages a Mobile Network Sim Group.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        data_azurerm_key_vault_example =
        azurerm.data_azurerm_key_vault.DataAzurermKeyVault(self, "example_1",
            name="example-kv",
            resource_group_name="some-resource-group"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_azurerm_key_vault_example.override_logical_id("example")
        data_azurerm_key_vault_key_example =
        azurerm.data_azurerm_key_vault_key.DataAzurermKeyVaultKey(self, "example_2",
            key_vault_id=cdktf.Token.as_string(data_azurerm_key_vault_example.id),
            name="example-key"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_azurerm_key_vault_key_example.override_logical_id("example")
        data_azurerm_user_assigned_identity_example =
        azurerm.data_azurerm_user_assigned_identity.DataAzurermUserAssignedIdentity(self, "example_3",
            name="name_of_user_assigned_identity",
            resource_group_name="name_of_resource_group"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_azurerm_user_assigned_identity_example.override_logical_id("example")
        azurerm_mobile_network_example = azurerm.mobile_network.MobileNetwork(self, "example_4",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            mobile_country_code="001",
            mobile_network_code="01",
            name="example-mn",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_mobile_network_example.override_logical_id("example")
        azurerm_mobile_network_sim_group_example =
        azurerm.mobile_network_sim_group.MobileNetworkSimGroup(self, "example_5",
            encryption_key_url=cdktf.Token.as_string(data_azurerm_key_vault_key_example.id),
            identity=MobileNetworkSimGroupIdentity(
                identity_ids=[
                    cdktf.Token.as_string(data_azurerm_user_assigned_identity_example.id)
                ],
                type="SystemAssigned, UserAssigned"
            ),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            mobile_network_id=cdktf.Token.as_string(azurerm_mobile_network_example.id),
            name="example-mnsg",
            tags={
                "key": "value"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_mobile_network_sim_group_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) Specifies the name which should be used for this Mobile Network Sim Groups. Changing this forces a new Mobile Network Sim Group to be created.

* `location` - (Required) Specifies the Azure Region where the Mobile Network Sim Groups should exist. Changing this forces a new Mobile Network Sim Group to be created.

* `mobile_network_id` - (Required) The ID of Mobile Network which the Mobile Network Sim Group belongs to. Changing this forces a new Mobile Network Slice to be created.

* `encryption_key_url` - (Optional) A key to encrypt the SIM data that belongs to this SIM group.

* `identity` - (Optional) An `identity` block as defined below.

-> **NOTE:** A `UserAssigned` identity must be specified when `encryption_key_url` is specified.

* `tags` - (Optional) A mapping of tags which should be assigned to the Mobile Network Sim Groups.

---

An `identity` block supports the following:

* `type` - (Required) Specifies the type of Managed Service Identity. Possible value is `UserAssigned`.

* `identity_ids` - (Optional) A list of IDs for User Assigned Managed Identity resources to be assigned.


## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Mobile Network Sim Groups.


## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 180 minutes) Used when creating the Mobile Network Sim Groups.
* `read` - (Defaults to 5 minutes) Used when retrieving the Mobile Network Sim Groups.
* `update` - (Defaults to 180 minutes) Used when updating the Mobile Network Sim Groups.
* `delete` - (Defaults to 180 minutes) Used when deleting the Mobile Network Sim Groups.

## Import

Mobile Network Sim Groups can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_mobile_network_sim_group.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.MobileNetwork/simGroups/simGroup1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-a859ac75d7f1dccf876c28a322b7125b8a1a50cfc6895ba4ef745da18f34ac50 -->