---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_virtual_network_gateway_nat_rule"
description: |-
  Manages a Virtual Network Gateway Nat Rule.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_virtual_network_gateway_nat_rule

Manages a Virtual Network Gateway Nat Rule.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_virtual_network_example =
        azurerm.virtual_network.VirtualNetwork(self, "example_1",
            address_space=["10.0.0.0/16"],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_example.override_logical_id("example")
        azurerm_public_ip_example = azurerm.public_ip.PublicIp(self, "example_2",
            allocation_method="Dynamic",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-pip",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_public_ip_example.override_logical_id("example")
        azurerm_subnet_example = azurerm.subnet.Subnet(self, "example_3",
            address_prefixes=["10.0.1.0/24"],
            name="GatewaySubnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_network_name=cdktf.Token.as_string(azurerm_virtual_network_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_subnet_example.override_logical_id("example")
        azurerm_virtual_network_gateway_example =
        azurerm.virtual_network_gateway.VirtualNetworkGateway(self, "example_4",
            ip_configuration=[VirtualNetworkGatewayIpConfiguration(
                private_ip_address_allocation="Dynamic",
                public_ip_address_id=cdktf.Token.as_string(azurerm_public_ip_example.id),
                subnet_id=cdktf.Token.as_string(azurerm_subnet_example.id)
            )
            ],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vnetgw",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku="Basic",
            type="Vpn",
            vpn_type="RouteBased"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_gateway_example.override_logical_id("example")
        data_azurerm_virtual_network_gateway_example =
        azurerm.data_azurerm_virtual_network_gateway.DataAzurermVirtualNetworkGateway(self, "example_5",
            name=cdktf.Token.as_string(azurerm_virtual_network_gateway_example.name),
            resource_group_name=cdktf.Token.as_string(azurerm_virtual_network_gateway_example.resource_group_name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_azurerm_virtual_network_gateway_example.override_logical_id("example")
        azurerm_virtual_network_gateway_nat_rule_example =
        azurerm.virtual_network_gateway_nat_rule.VirtualNetworkGatewayNatRule(self, "example_6",
            external_mapping=[VirtualNetworkGatewayNatRuleExternalMapping(
                address_space="10.2.0.0/26",
                port_range="200"
            )
            ],
            internal_mapping=[VirtualNetworkGatewayNatRuleInternalMapping(
                address_space="10.4.0.0/26",
                port_range="400"
            )
            ],
            ip_configuration_id=cdktf.Token.as_string(
                cdktf.property_access(data_azurerm_virtual_network_gateway_example.ip_configuration, ["0", "id"])),
            mode="EgressSnat",
            name="example-vnetgwnatrule",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            type="Dynamic",
            virtual_network_gateway_id=cdktf.Token.as_string(data_azurerm_virtual_network_gateway_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_gateway_nat_rule_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Virtual Network Gateway Nat Rule. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) The Name of the Resource Group in which this Virtual Network Gateway Nat Rule should be created. Changing this forces a new resource to be created.

* `virtual_network_gateway_id` - (Required) The ID of the Virtual Network Gateway that this Virtual Network Gateway Nat Rule belongs to. Changing this forces a new resource to be created.

* `external_mapping` - (Required) One or more `external_mapping` blocks as documented below.

* `internal_mapping` - (Required) One or more `internal_mapping` blocks as documented below.

* `ip_configuration_id` - (Optional) The ID of the IP Configuration this Virtual Network Gateway Nat Rule applies to.

* `mode` - (Optional) The source Nat direction of the Virtual Network Gateway Nat. Possible values are `EgressSnat` and `IngressSnat`. Defaults to `EgressSnat`. Changing this forces a new resource to be created.

* `type` - (Optional) The type of the Virtual Network Gateway Nat Rule. Possible values are `Dynamic` and `Static`. Defaults to `Static`. Changing this forces a new resource to be created.

---

A `external_mapping` block exports the following:

* `address_space` - (Required) The string CIDR representing the address space for the Virtual Network Gateway Nat Rule external mapping.

* `port_range` - (Optional) The single port range for the Virtual Network Gateway Nat Rule external mapping.

---

A `internal_mapping` block exports the following:

* `address_space` - (Required) The string CIDR representing the address space for the Virtual Network Gateway Nat Rule internal mapping.

* `port_range` - (Optional) The single port range for the Virtual Network Gateway Nat Rule internal mapping.

---

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Virtual Network Gateway Nat Rule.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Virtual Network Gateway Nat Rule.
* `read` - (Defaults to 5 minutes) Used when retrieving the Virtual Network Gateway Nat Rule.
* `update` - (Defaults to 30 minutes) Used when updating the Virtual Network Gateway Nat Rule.
* `delete` - (Defaults to 30 minutes) Used when deleting the Virtual Network Gateway Nat Rule.

## Import

Virtual Network Gateway Nat Rules can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_virtual_network_gateway_nat_rule.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Network/virtualNetworkGateways/gw1/natRules/rule1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-4ec2b2e62c90beff1d527b3968922a69a8f79ee6bb74f875191e51f93e0b4fcc -->