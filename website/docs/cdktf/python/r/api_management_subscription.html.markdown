---
subcategory: "API Management"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_api_management_subscription"
description: |-
  Manages a Subscription within a API Management Service.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_api_management_subscription

Manages a Subscription within a API Management Service.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        data_azurerm_api_management_example =
        azurerm.data_azurerm_api_management.DataAzurermApiManagement(self, "example",
            name="example-apim",
            resource_group_name="example-resources"
        )
        data_azurerm_api_management_product_example =
        azurerm.data_azurerm_api_management_product.DataAzurermApiManagementProduct(self, "example_1",
            api_management_name=cdktf.Token.as_string(data_azurerm_api_management_example.name),
            product_id="00000000-0000-0000-0000-000000000000",
            resource_group_name=cdktf.Token.as_string(data_azurerm_api_management_example.resource_group_name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_azurerm_api_management_product_example.override_logical_id("example")
        data_azurerm_api_management_user_example =
        azurerm.data_azurerm_api_management_user.DataAzurermApiManagementUser(self, "example_2",
            api_management_name=cdktf.Token.as_string(data_azurerm_api_management_example.name),
            resource_group_name=cdktf.Token.as_string(data_azurerm_api_management_example.resource_group_name),
            user_id="11111111-1111-1111-1111-111111111111"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_azurerm_api_management_user_example.override_logical_id("example")
        azurerm_api_management_subscription_example =
        azurerm.api_management_subscription.ApiManagementSubscription(self, "example_3",
            api_management_name=cdktf.Token.as_string(data_azurerm_api_management_example.name),
            display_name="Parser API",
            product_id=cdktf.Token.as_string(data_azurerm_api_management_product_example.id),
            resource_group_name=cdktf.Token.as_string(data_azurerm_api_management_example.resource_group_name),
            user_id=cdktf.Token.as_string(data_azurerm_api_management_user_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_api_management_subscription_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `api_management_name` - (Required) The name of the API Management Service where this Subscription should be created. Changing this forces a new resource to be created.

* `display_name` - (Required) The display name of this Subscription.

* `resource_group_name` - (Required) The name of the Resource Group in which the API Management Service exists. Changing this forces a new resource to be created.

* `product_id` - (Optional) The ID of the Product which should be assigned to this Subscription. Changing this forces a new resource to be created.

-> **Info:** Only one of `product_id` and `api_id` can be set. If both are missing `all_apis` scope is used for the subscription.

* `user_id` - (Optional) The ID of the User which should be assigned to this Subscription. Changing this forces a new resource to be created.

* `api_id` - (Optional) The ID of the API which should be assigned to this Subscription. Changing this forces a new resource to be created.

-> **Info:** Only one of `product_id` and `api_id` can be set. If both are missing `/apis` scope is used for the subscription and all apis are accessible.

* `primary_key` - (Optional) The primary subscription key to use for the subscription.

* `secondary_key` - (Optional) The secondary subscription key to use for the subscription.

---

* `state` - (Optional) The state of this Subscription. Possible values are `active`, `cancelled`, `expired`, `rejected`, `submitted` and `suspended`. Defaults to `submitted`.

* `subscription_id` - (Optional) An Identifier which should used as the ID of this Subscription. If not specified a new Subscription ID will be generated. Changing this forces a new resource to be created.

* `allow_tracing` - (Optional) Determines whether tracing can be enabled. Defaults to `true`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the API Management Subscription.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the API Management Subscription.
* `update` - (Defaults to 30 minutes) Used when updating the API Management Subscription.
* `read` - (Defaults to 5 minutes) Used when retrieving the API Management Subscription.
* `delete` - (Defaults to 30 minutes) Used when deleting the API Management Subscription.

## Import

API Management Subscriptions can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_api_management_subscription.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example-resources/providers/Microsoft.ApiManagement/service/example-apim/subscriptions/subscription-name
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-1b12c684bec28a16fe762d427d28601b554c084ebd63b85db40ac28317853bd9 -->