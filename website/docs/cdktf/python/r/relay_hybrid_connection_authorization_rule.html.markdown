---
subcategory: "Messaging"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_relay_hybrid_connection_authorization_rule"
description: |-
  Manages an Azure Relay Hybrid Connection Authorization Rule.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_relay_hybrid_connection_authorization_rule

Manages an Azure Relay Hybrid Connection Authorization Rule.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_relay_namespace_example =
        azurerm.relay_namespace.RelayNamespace(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-relay",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="Standard",
            tags={
                "source": "terraform"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_relay_namespace_example.override_logical_id("example")
        azurerm_relay_hybrid_connection_example =
        azurerm.relay_hybrid_connection.RelayHybridConnection(self, "example_2",
            name="acctestrnhc-%d",
            relay_namespace_name=cdktf.Token.as_string(azurerm_relay_namespace_example.name),
            requires_client_authorization=False,
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            user_metadata="testmetadata"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_relay_hybrid_connection_example.override_logical_id("example")
        azurerm_relay_hybrid_connection_authorization_rule_example =
        azurerm.relay_hybrid_connection_authorization_rule.RelayHybridConnectionAuthorizationRule(self, "example_3",
            hybrid_connection_name=cdktf.Token.as_string(azurerm_relay_hybrid_connection_example.name),
            listen=True,
            manage=False,
            name="example",
            namespace_name=cdktf.Token.as_string(azurerm_relay_namespace_example.name),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            send=True
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_relay_hybrid_connection_authorization_rule_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Azure Relay Hybrid Connection Authorization Rule. Changing this forces a new Azure Relay Hybrid Connection Authorization Rule to be created.

* `hybrid_connection_name` - (Required) Name of the Azure Relay Hybrid Connection for which this Azure Relay Hybrid Connection Authorization Rule will be created. Changing this forces a new Azure Relay Hybrid Connection Authorization Rule to be created.

* `namespace_name` - (Required) Name of the Azure Relay Namespace for which this Azure Relay Hybrid Connection Authorization Rule will be created. Changing this forces a new Azure Relay Hybrid Connection Authorization Rule to be created.

* `resource_group_name` - (Required) The name of the Resource Group where the Azure Relay Hybrid Connection Authorization Rule should exist. Changing this forces a new Azure Relay Hybrid Connection Authorization Rule to be created.

---

* `listen` - (Optional) Grants listen access to this Authorization Rule. Defaults to `false`.

* `send` - (Optional) Grants send access to this Authorization Rule. Defaults to `false`.

* `manage` - (Optional) Grants manage access to this Authorization Rule. When this property is `true` - both `listen` and `send` must be set to `true` too. Defaults to `false`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Azure Relay Hybrid Connection Authorization Rule.

* `primary_key` - The Primary Key for the Azure Relay Hybrid Connection Authorization Rule.

* `primary_connection_string` - The Primary Connection String for the Azure Relay Hybrid Connection Authorization Rule.

* `secondary_key` - The Secondary Key for the Azure Relay Hybrid Connection Authorization Rule.

* `secondary_connection_string` - The Secondary Connection String for the Azure Relay Hybrid Connection Authorization Rule.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Azure Relay Hybrid Connection Authorization Rule.
* `read` - (Defaults to 5 minutes) Used when retrieving the Azure Relay Hybrid Connection Authorization Rule.
* `update` - (Defaults to 30 minutes) Used when updating the Azure Relay Hybrid Connection Authorization Rule.
* `delete` - (Defaults to 30 minutes) Used when deleting the Azure Relay Hybrid Connection Authorization Rule.

## Import

Azure Relay Hybrid Connection Authorization Rules can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_relay_hybrid_connection_authorization_rule.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Relay/namespaces/namespace1/hybridConnections/connection1/authorizationRules/rule1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-093eff1587fc2ecc18b26334c546b6f8343bb838abc3a1e3653a816ba1e89555 -->