---
subcategory: "Monitor"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_monitor_scheduled_query_rules_alert"
description: |-
  Manages an AlertingAction Scheduled Query Rules resource within Azure Monitor
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_monitor_scheduled_query_rules_alert

Manages an AlertingAction Scheduled Query Rules resource within Azure Monitor.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="monitoring-resources"
        )
        azurerm_application_insights_example =
        azurerm.application_insights.ApplicationInsights(self, "example_1",
            application_type="web",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="appinsights",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_application_insights_example.override_logical_id("example")
        azurerm_application_insights_example2 =
        azurerm.application_insights.ApplicationInsights(self, "example2",
            application_type="web",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="appinsights2",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        azurerm_monitor_scheduled_query_rules_alert_example =
        azurerm.monitor_scheduled_query_rules_alert.MonitorScheduledQueryRulesAlert(self, "example_3",
            action=MonitorScheduledQueryRulesAlertAction(
                action_group=[],
                custom_webhook_payload="{}",
                email_subject="Email Header"
            ),
            data_source_id=cdktf.Token.as_string(azurerm_application_insights_example.id),
            description="Alert when total results cross threshold",
            enabled=True,
            frequency=5,
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example",
            query="requests\n  | where tolong(resultCode) >= 500\n  | summarize count() by bin(timestamp, 5m)\n",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            severity=1,
            tags={
                "foo": "bar"
            },
            time_window=30,
            trigger=MonitorScheduledQueryRulesAlertTrigger(
                operator="GreaterThan",
                threshold=3
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_monitor_scheduled_query_rules_alert_example.override_logical_id("example")
        azurerm_monitor_scheduled_query_rules_alert_example2 =
        azurerm.monitor_scheduled_query_rules_alert.MonitorScheduledQueryRulesAlert(self, "example2_4",
            action=MonitorScheduledQueryRulesAlertAction(
                action_group=[],
                custom_webhook_payload="{}",
                email_subject="Email Header"
            ),
            authorized_resource_ids=[
                cdktf.Token.as_string(azurerm_application_insights_example2.id)
            ],
            data_source_id=cdktf.Token.as_string(azurerm_application_insights_example.id),
            description="Query may access data within multiple resources",
            enabled=True,
            frequency=5,
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example",
            query=cdktf.Token.as_string(
                cdktf.Fn.format("let a=requests\n  | where toint(resultCode) >= 500\n  | extend fail=1; let b=app('%s').requests\n  | where toint(resultCode) >= 500 | extend fail=1; a\n  | join b on fail\n", [azurerm_application_insights_example2.id])),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            severity=1,
            tags={
                "foo": "bar"
            },
            time_window=30,
            trigger=MonitorScheduledQueryRulesAlertTrigger(
                operator="GreaterThan",
                threshold=3
            )
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_monitor_scheduled_query_rules_alert_example2.override_logical_id("example2")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the scheduled query rule. Changing this forces a new resource to be created.
* `resource_group_name` - (Required) The name of the resource group in which to create the scheduled query rule instance. Changing this forces a new resource to be created.
* `location` - (Required) Specifies the Azure Region where the resource should exist. Changing this forces a new resource to be created.
* `data_source_id` - (Required) The resource URI over which log search query is to be run.
* `frequency` - (Required) Frequency (in minutes) at which rule condition should be evaluated. Values must be between 5 and 1440 (inclusive).
* `query` - (Required) Log search query.
* `time_window` - (Required) Time window for which data needs to be fetched for query (must be greater than or equal to `frequency`). Values must be between 5 and 2880 (inclusive).
* `trigger` - (Required) A `trigger` block as defined below.
* `action` - (Required) An `action` block as defined below.
* `authorized_resource_ids` - (Optional) List of Resource IDs referred into query.
* `auto_mitigation_enabled` - (Optional) Should the alerts in this Metric Alert be auto resolved? Defaults to `false`.
-> **NOTE** `auto_mitigation_enabled` and `throttling` are mutually exclusive and cannot both be set.
* `description` - (Optional) The description of the scheduled query rule.
* `enabled` - (Optional) Whether this scheduled query rule is enabled. Default is `true`.
* `query_type` - (Optional) The type of query results. Possible values are `ResultCount` and `Number`. Default is `ResultCount`. If set to `Number`, `query` must include an `AggregatedValue` column of a numeric type, for example, `Heartbeat | summarize AggregatedValue = count() by bin(TimeGenerated, 5m)`.
* `severity` - (Optional) Severity of the alert. Possible values include: 0, 1, 2, 3, or 4.
* `throttling` - (Optional) Time (in minutes) for which Alerts should be throttled or suppressed. Values must be between 0 and 10000 (inclusive).
* `tags` - (Optional) A mapping of tags to assign to the resource.

---

The `action` block supports the following:

* `action_group` - (Required) List of action group reference resource IDs.
* `custom_webhook_payload` - (Optional) Custom payload to be sent for all webhook payloads in alerting action.
* `email_subject` - (Optional) Custom subject override for all email ids in Azure action group.

---

The `metric_trigger` block supports the following:

* `metric_trigger_type` - (Required) Metric Trigger Type - 'Consecutive' or 'Total'.
* `operator` - (Required) Evaluation operation for rule - 'Equal', 'GreaterThan', GreaterThanOrEqual', 'LessThan', or 'LessThanOrEqual'.
* `threshold` - (Required) The threshold of the metric trigger. Values must be between 0 and 10000 inclusive.
* `metric_column` - (Optional) Evaluation of metric on a particular column.

---

The `trigger` block supports the following:

* `metric_trigger` - (Optional) A `metric_trigger` block as defined above. Trigger condition for metric query rule.
* `operator` - (Required) Evaluation operation for rule - 'GreaterThan', GreaterThanOrEqual', 'LessThan', or 'LessThanOrEqual'.
* `threshold` - (Required) Result or count threshold based on which rule should be triggered. Values must be between 0 and 10000 inclusive.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the scheduled query rule.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Scheduled Query Rule Alert.
* `update` - (Defaults to 30 minutes) Used when updating the Scheduled Query Rule Alert.
* `read` - (Defaults to 5 minutes) Used when retrieving the Scheduled Query Rule Alert.
* `delete` - (Defaults to 30 minutes) Used when deleting the Scheduled Query Rule Alert.

## Import

Scheduled Query Rule Alerts can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_monitor_scheduled_query_rules_alert.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Insights/scheduledQueryRules/myrulename
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-ef407d6faa7355d0575c37b675781493e1cc9ae33e9c5e1bcfa757c85e75f056 -->