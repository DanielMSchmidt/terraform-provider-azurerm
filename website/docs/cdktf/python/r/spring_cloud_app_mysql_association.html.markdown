---
subcategory: "Spring Cloud"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_spring_cloud_app_mysql_association"
description: |-
  Associates a [Spring Cloud Application](spring_cloud_app.html) with a [MySQL Database](mysql_database.html).
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_spring_cloud_app_mysql_association

Associates a [Spring Cloud Application](spring_cloud_app.html) with a [MySQL Database](mysql_database.html).

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_spring_cloud_service_example =
        azurerm.spring_cloud_service.SpringCloudService(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-springcloud",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_spring_cloud_service_example.override_logical_id("example")
        azurerm_mysql_server_example = azurerm.mysql_server.MysqlServer(self, "example_2",
            administrator_login="mysqladminun",
            administrator_login_password="H@Sh1CoR3!",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-mysqlserver",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="B_Gen5_2",
            ssl_enforcement_enabled=True,
            ssl_minimal_tls_version_enforced="TLS1_2",
            storage_mb=5120,
            version="5.7"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_mysql_server_example.override_logical_id("example")
        azurerm_spring_cloud_app_example =
        azurerm.spring_cloud_app.SpringCloudApp(self, "example_3",
            name="example-springcloudapp",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            service_name=cdktf.Token.as_string(azurerm_spring_cloud_service_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_spring_cloud_app_example.override_logical_id("example")
        azurerm_mysql_database_example = azurerm.mysql_database.MysqlDatabase(self, "example_4",
            charset="utf8",
            collation="utf8_unicode_ci",
            name="exampledb",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            server_name=cdktf.Token.as_string(azurerm_mysql_server_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_mysql_database_example.override_logical_id("example")
        azurerm_spring_cloud_app_mysql_association_example =
        azurerm.spring_cloud_app_mysql_association.SpringCloudAppMysqlAssociation(self, "example_5",
            database_name=cdktf.Token.as_string(azurerm_mysql_database_example.name),
            mysql_server_id=cdktf.Token.as_string(azurerm_mysql_server_example.id),
            name="example-bind",
            password=cdktf.Token.as_string(azurerm_mysql_server_example.administrator_login_password),
            spring_cloud_app_id=cdktf.Token.as_string(azurerm_spring_cloud_app_example.id),
            username=cdktf.Token.as_string(azurerm_mysql_server_example.administrator_login)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_spring_cloud_app_mysql_association_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Spring Cloud Application Association. Changing this forces a new resource to be created.

* `spring_cloud_app_id` - (Required) Specifies the ID of the Spring Cloud Application where this Association is created. Changing this forces a new resource to be created.

* `mysql_server_id` - (Required) Specifies the ID of the MySQL Server. Changing this forces a new resource to be created.

* `database_name` - (Required) Specifies the name of the MySQL Database which the Spring Cloud App should be associated with.

* `username` - (Required) Specifies the username which should be used when connecting to the MySQL Database from the Spring Cloud App.

* `password` - (Required) Specifies the password which should be used when connecting to the MySQL Database from the Spring Cloud App.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Spring Cloud Application MySQL Association.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Spring Cloud Application MySQL Association.
* `read` - (Defaults to 5 minutes) Used when retrieving the Spring Cloud Application MySQL Association.
* `update` - (Defaults to 30 minutes) Used when updating the Spring Cloud Application MySQL Association.
* `delete` - (Defaults to 30 minutes) Used when deleting the Spring Cloud Application MySQL Association.

## Import

Spring Cloud Application MySQL Association can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_spring_cloud_app_mysql_association.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourcegroup1/providers/Microsoft.AppPlatform/spring/service1/apps/app1/bindings/bind1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-e9c5f7ab68b102ef271e93a85ed321cf3f7b91ee90e63468c20501313f5e628d -->