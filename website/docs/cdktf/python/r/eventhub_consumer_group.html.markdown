---
subcategory: "Messaging"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_eventhub_consumer_group"
description: |-
  Manages a Event Hubs Consumer Group as a nested resource within an Event Hub.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_eventhub_consumer_group

Manages a Event Hubs Consumer Group as a nested resource within an Event Hub.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_eventhub_namespace_example =
        azurerm.eventhub_namespace.EventhubNamespace(self, "example_1",
            capacity=2,
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="acceptanceTestEventHubNamespace",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku="Basic",
            tags={
                "environment": "Production"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_eventhub_namespace_example.override_logical_id("example")
        azurerm_eventhub_example = azurerm.eventhub.Eventhub(self, "example_2",
            message_retention=2,
            name="acceptanceTestEventHub",
            namespace_name=cdktf.Token.as_string(azurerm_eventhub_namespace_example.name),
            partition_count=2,
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_eventhub_example.override_logical_id("example")
        azurerm_eventhub_consumer_group_example =
        azurerm.eventhub_consumer_group.EventhubConsumerGroup(self, "example_3",
            eventhub_name=cdktf.Token.as_string(azurerm_eventhub_example.name),
            name="acceptanceTestEventHubConsumerGroup",
            namespace_name=cdktf.Token.as_string(azurerm_eventhub_namespace_example.name),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            user_metadata="some-meta-data"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_eventhub_consumer_group_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the EventHub Consumer Group resource. Changing this forces a new resource to be created.

* `namespace_name` - (Required) Specifies the name of the grandparent EventHub Namespace. Changing this forces a new resource to be created.

* `eventhub_name` - (Required) Specifies the name of the EventHub. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) The name of the resource group in which the EventHub Consumer Group's grandparent Namespace exists. Changing this forces a new resource to be created.

* `user_metadata` - (Optional) Specifies the user metadata.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the EventHub Consumer Group.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the EventHub Consumer Group.
* `update` - (Defaults to 30 minutes) Used when updating the EventHub Consumer Group.
* `read` - (Defaults to 5 minutes) Used when retrieving the EventHub Consumer Group.
* `delete` - (Defaults to 30 minutes) Used when deleting the EventHub Consumer Group.

## Import

EventHub Consumer Groups can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_eventhub_consumer_group.consumerGroup1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.EventHub/namespaces/namespace1/eventhubs/eventhub1/consumerGroups/consumerGroup1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-d0f41e0be05c0f28a37c3d0259183b2e8813dd10efd8fc97546b134168880a7b -->