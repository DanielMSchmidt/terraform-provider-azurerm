---
subcategory: "Recovery Services"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_site_recovery_vmware_replication_policy"
description: |-
  Manages a VMWare Replication Policy.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_site_recovery_vmware_replication_policy

Manages a VMWare Replication Policy.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="eastus",
            name="example-rg"
        )
        azurerm_recovery_services_vault_example =
        azurerm.recovery_services_vault.RecoveryServicesVault(self, "example_1",
            classic_vmware_replication_enabled=True,
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vault",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku="Standard",
            soft_delete_enabled=False
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_recovery_services_vault_example.override_logical_id("example")
        azurerm_site_recovery_vmware_replication_policy_example =
        azurerm.site_recovery_vmware_replication_policy.SiteRecoveryVmwareReplicationPolicy(self, "example_2",
            application_consistent_snapshot_frequency_in_minutes=240,
            name="example-policy",
            recovery_point_retention_in_minutes=1440,
            recovery_vault_id=cdktf.Token.as_string(azurerm_recovery_services_vault_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_site_recovery_vmware_replication_policy_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Classic Replication Policy. Changing this forces a new Replication Policy to be created.

* `recovery_vault_id` - (Required) ID of the Recovery Services Vault. Changing this forces a new Replication Policy to be created.

* `recovery_point_retention_in_minutes` - (Required) Specifies the period up to which the recovery points will be retained. Must between `0` to `21600`.

* `application_consistent_snapshot_frequency_in_minutes` - (Required) Specifies the frequency at which to create application consistent recovery points. Must between `0` to `720`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported: 

* `id` - The ID of the Classic Replication Policy.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Classic Replication Policy.
* `read` - (Defaults to 5 minutes) Used when retrieving the Classic Replication Policy.
* `update` - (Defaults to 30 minutes) Used when updating the Classic Replication Policy.
* `delete` - (Defaults to 30 minutes) Used when deleting the Classic Replication Policy.

## Import

VMWare Replication Policy can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_site_recovery_vmware_replication_policy.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/vault1/providers/Microsoft.RecoveryServices/vaults/vault1/replicationPolicies/policy1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-9ef7b13a15a81c69cc7dda6866447a948e070aa6757174315588c311409f8b9c -->