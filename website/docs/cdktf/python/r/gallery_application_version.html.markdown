---
subcategory: "Compute"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_gallery_application_version"
description: |-
  Manages a Gallery Application Version.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_gallery_application_version

Manages a Gallery Application Version.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-rg"
        )
        azurerm_shared_image_gallery_example =
        azurerm.shared_image_gallery.SharedImageGallery(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplegallery",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_shared_image_gallery_example.override_logical_id("example")
        azurerm_storage_account_example =
        azurerm.storage_account.StorageAccount(self, "example_2",
            account_replication_type="LRS",
            account_tier="Standard",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplestorage",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_example.override_logical_id("example")
        azurerm_storage_container_example =
        azurerm.storage_container.StorageContainer(self, "example_3",
            container_access_type="blob",
            name="example-container",
            storage_account_name=cdktf.Token.as_string(azurerm_storage_account_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_container_example.override_logical_id("example")
        azurerm_gallery_application_example =
        azurerm.gallery_application.GalleryApplication(self, "example_4",
            gallery_id=cdktf.Token.as_string(azurerm_shared_image_gallery_example.id),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-app",
            supported_os_type="Linux"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_gallery_application_example.override_logical_id("example")
        azurerm_storage_blob_example = azurerm.storage_blob.StorageBlob(self, "example_5",
            name="scripts",
            source_content="[scripts file content]",
            storage_account_name=cdktf.Token.as_string(azurerm_storage_account_example.name),
            storage_container_name=cdktf.Token.as_string(azurerm_storage_container_example.name),
            type="Block"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_blob_example.override_logical_id("example")
        azurerm_gallery_application_version_example =
        azurerm.gallery_application_version.GalleryApplicationVersion(self, "example_6",
            gallery_application_id=cdktf.Token.as_string(azurerm_gallery_application_example.id),
            location=cdktf.Token.as_string(azurerm_gallery_application_example.location),
            manage_action=GalleryApplicationVersionManageAction(
                install="[install command]",
                remove="[remove command]"
            ),
            name="0.0.1",
            source=GalleryApplicationVersionSource(
                media_link=cdktf.Token.as_string(azurerm_storage_blob_example.id)
            ),
            target_region=[GalleryApplicationVersionTargetRegion(
                name=cdktf.Token.as_string(azurerm_gallery_application_example.location),
                regional_replica_count=1
            )
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_gallery_application_version_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The version name of the Gallery Application Version, such as `1.0.0`. Changing this forces a new resource to be created.

* `gallery_application_id` - (Required) The ID of the Gallery Application. Changing this forces a new resource to be created.

* `location` - (Required) The Azure Region where the Gallery Application Version exists. Changing this forces a new resource to be created.

* `manage_action` - (Required) A `manage_action` block as defined below.

* `source` - (Required) A `source` block as defined below.

* `target_region` - (Required) One or more `target_region` blocks as defined below.

---

* `enable_health_check` - (Optional) Should the Gallery Application reports health. Defaults to `false`.

* `end_of_life_date` - (Optional) The end of life date in RFC3339 format of the Gallery Application Version.

* `exclude_from_latest` - (Optional) Should the Gallery Application Version be excluded from the `latest` filter? If set to `true` this Gallery Application Version won't be returned for the `latest` version. Defaults to `false`.

* `tags` - (Optional) A mapping of tags to assign to the Gallery Application Version.

---

A `manage_action` block supports the following:

* `install` - (Required) The command to install the Gallery Application. Changing this forces a new resource to be created.

* `remove` - (Required) The command to remove the Gallery Application. Changing this forces a new resource to be created.

* `update` - (Optional) The command to update the Gallery Application. Changing this forces a new resource to be created.

---

A `source` block supports the following:

* `media_link` - (Required) The Storage Blob URI of the source application package. Changing this forces a new resource to be created.

* `default_configuration_link` - (Optional) The Storage Blob URI of the default configuration. Changing this forces a new resource to be created.

---

A `target_region` block supports the following:

* `name` - (Required) The Azure Region in which the Gallery Application Version exists.

* `regional_replica_count` - (Required) The number of replicas of the Gallery Application Version to be created per region. Possible values are between `1` and `10`.

* `storage_account_type` - (Optional) The storage account type for the Gallery Application Version. Possible values are `Standard_LRS`, `Premium_LRS` and `Standard_ZRS`. Defaults to `Standard_LRS`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Gallery Application Version.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Gallery Application Version.
* `read` - (Defaults to 5 minutes) Used when retrieving the Gallery Application Version.
* `update` - (Defaults to 30 minutes) Used when updating the Gallery Application Version.
* `delete` - (Defaults to 30 minutes) Used when deleting the Gallery Application Version.

## Import

Gallery Application Versions can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_gallery_application_version.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Compute/galleries/gallery1/applications/galleryApplication1/versions/galleryApplicationVersion1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-4e4747d0186193bb4a58cf3dc72611bdac4572ff0c2dc575732e1caeb49b9ffe -->