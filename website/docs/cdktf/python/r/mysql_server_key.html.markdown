---
subcategory: "Database"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_mysql_server_key"
description: |-
  Manages a MySQL Server Key.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_mysql_server_key

Manages a Customer Managed Key for a MySQL Server.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        data_azurerm_client_config_current =
        azurerm.data_azurerm_client_config.DataAzurermClientConfig(self, "current")
        azurerm_key_vault_example = azurerm.key_vault.KeyVault(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplekv",
            purge_protection_enabled=True,
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="premium",
            tenant_id=cdktf.Token.as_string(data_azurerm_client_config_current.tenant_id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_key_vault_example.override_logical_id("example")
        azurerm_key_vault_access_policy_client =
        azurerm.key_vault_access_policy.KeyVaultAccessPolicyA(self, "client",
            key_permissions=["Get", "Create", "Delete", "List", "Restore", "Recover", "UnwrapKey", "WrapKey", "Purge", "Encrypt", "Decrypt", "Sign", "Verify", "GetRotationPolicy"
            ],
            key_vault_id=cdktf.Token.as_string(azurerm_key_vault_example.id),
            object_id=cdktf.Token.as_string(data_azurerm_client_config_current.object_id),
            secret_permissions=["Get"],
            tenant_id=cdktf.Token.as_string(data_azurerm_client_config_current.tenant_id)
        )
        azurerm_mysql_server_example = azurerm.mysql_server.MysqlServer(self, "example_4",
            administrator_login="acctestun",
            administrator_login_password="H@Sh1CoR3!",
            identity=MysqlServerIdentity(
                type="SystemAssigned"
            ),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-mysql-server",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="GP_Gen5_2",
            ssl_enforcement_enabled=True,
            ssl_minimal_tls_version_enforced="TLS1_1",
            storage_mb=51200,
            version="5.7"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_mysql_server_example.override_logical_id("example")
        azurerm_key_vault_access_policy_server =
        azurerm.key_vault_access_policy.KeyVaultAccessPolicyA(self, "server",
            key_permissions=["Get", "UnwrapKey", "WrapKey"],
            key_vault_id=cdktf.Token.as_string(azurerm_key_vault_example.id),
            object_id=cdktf.Token.as_string(
                cdktf.property_access(azurerm_mysql_server_example.identity, ["0", "principal_id"
                ])),
            secret_permissions=["Get"],
            tenant_id=cdktf.Token.as_string(data_azurerm_client_config_current.tenant_id)
        )
        azurerm_key_vault_key_example = azurerm.key_vault_key.KeyVaultKey(self, "example_6",
            depends_on=[azurerm_key_vault_access_policy_client, azurerm_key_vault_access_policy_server
            ],
            key_opts=["decrypt", "encrypt", "sign", "unwrapKey", "verify", "wrapKey"
            ],
            key_size=2048,
            key_type="RSA",
            key_vault_id=cdktf.Token.as_string(azurerm_key_vault_example.id),
            name="tfex-key"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_key_vault_key_example.override_logical_id("example")
        azurerm_mysql_server_key_example =
        azurerm.mysql_server_key.MysqlServerKey(self, "example_7",
            key_vault_key_id=cdktf.Token.as_string(azurerm_key_vault_key_example.id),
            server_id=cdktf.Token.as_string(azurerm_mysql_server_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_mysql_server_key_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `server_id` - (Required) The ID of the MySQL Server. Changing this forces a new resource to be created.

* `key_vault_key_id` - (Required) The URL to a Key Vault Key.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the MySQL Server Key.

---

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 60 minutes) Used when creating the MySQL Server Key.
* `update` - (Defaults to 60 minutes) Used when updating the MySQL Server Key.
* `read` - (Defaults to 5 minutes) Used when retrieving the MySQL Server Key.
* `delete` - (Defaults to 60 minutes) Used when deleting the MySQL Server Key.

## Import

A MySQL Server Key can be imported using the `resource id` of the MySQL Server Key, e.g.

```shell
terraform import azurerm_mysql_server_key.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DBforMySQL/servers/server1/keys/keyvaultname_key-name_keyversion
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-31e91b49d6c6c2d6061a8b40a3d5c669c59881eee82029ce5eafc4c811177785 -->