---
subcategory: "Monitor"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_monitor_alert_prometheus_rule_group"
description: |-
  Manages an Alert Management Prometheus Rule Group.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_monitor_alert_prometheus_rule_group

Manages an Alert Management Prometheus Rule Group.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_kubernetes_cluster_example =
        azurerm.kubernetes_cluster.KubernetesCluster(self, "example_1",
            default_node_pool=KubernetesClusterDefaultNodePool(
                enable_host_encryption=True,
                name="default",
                node_count=1,
                vm_size="Standard_DS2_v2"
            ),
            dns_prefix="example-aks",
            identity=KubernetesClusterIdentity(
                type="SystemAssigned"
            ),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-cluster",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_kubernetes_cluster_example.override_logical_id("example")
        azurerm_monitor_action_group_example =
        azurerm.monitor_action_group.MonitorActionGroup(self, "example_2",
            name="example-mag",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            short_name="testag"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_monitor_action_group_example.override_logical_id("example")
        azurerm_monitor_workspace_example =
        azurerm.monitor_workspace.MonitorWorkspace(self, "example_3",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-amw",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_monitor_workspace_example.override_logical_id("example")
        azurerm_monitor_alert_prometheus_rule_group_example =
        azurerm.monitor_alert_prometheus_rule_group.MonitorAlertPrometheusRuleGroup(self, "example_4",
            cluster_name=cdktf.Token.as_string(azurerm_kubernetes_cluster_example.name),
            description="This is the description of the following rule group",
            interval="PT1M",
            location="West Europe",
            name="example-amprg",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            rule=[MonitorAlertPrometheusRuleGroupRule(
                enabled=False,
                expression="histogram_quantile(0.99, sum(rate(jobs_duration_seconds_bucket{service=\"billing-processing\"}[5m])) by (job_type))\n",
                labels={
                    "team": "prod"
                },
                record="job_type:billing_jobs_duration_seconds:99p5m"
            ), MonitorAlertPrometheusRuleGroupRule(
                action=[MonitorAlertPrometheusRuleGroupRuleAction(
                    action_group_id=cdktf.Token.as_string(azurerm_monitor_action_group_example.id),
                    action_properties={
                        "action_name": "actionValue"
                    }
                )
                ],
                alert="Billing_Processing_Very_Slow",
                alert_resolution=MonitorAlertPrometheusRuleGroupRuleAlertResolution(
                    auto_resolved=True,
                    time_to_resolve="PT10M"
                ),
                annotations={
                    "annotation_name": "annotationValue"
                },
                enabled=True,
                expression="histogram_quantile(0.99, sum(rate(jobs_duration_seconds_bucket{service=\"billing-processing\"}[5m])) by (job_type))\n",
                for="PT5M",
                labels={
                    "team": "prod"
                },
                severity=2
            )
            ],
            rule_group_enabled=False,
            scopes=[cdktf.Token.as_string(azurerm_monitor_workspace_example.id)],
            tags={
                "key": "value"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_monitor_alert_prometheus_rule_group_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) Specifies the name which should be used for this Alert Management Prometheus Rule Group. Changing this forces a new resource to be created.

* `location` - (Required) Specifies the Azure Region where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) Specifies the name of the Resource Group where the Alert Management Prometheus Rule Group should exist. Changing this forces a new resource to be created.

* `rule` - (Required) A `rule` block as defined below.

* `scopes` - (Required) Specifies the resource ID of the Azure Monitor Workspace.

* `cluster_name` - (Optional) Specifies the name of the Managed Kubernetes Cluster.

* `description` - (Optional) The description of the Alert Management Prometheus Rule Group.

* `rule_group_enabled` - (Optional) Is this Alert Management Prometheus Rule Group enabled? Possible values are `true` and `false`.

* `interval` - (Optional) Specifies the interval in which to run the Alert Management Prometheus Rule Group represented in ISO 8601 duration format. Possible values are between `PT1M` and `PT15M`.

* `tags` - (Optional) A mapping of tags to assign to the Alert Management Prometheus Rule Group.

---

A `rule` block supports the following:

* `action` - (Optional) An `action` block as defined below.

* `alert` - (Optional) Specifies the Alert rule name.

* `annotations` - (Optional) Specifies a set of informational labels that can be used to store longer additional information such as alert descriptions or runbook links.

* `enabled` - (Optional) Is this rule enabled? Possible values are `true` and `false`.

* `expression` - (Required) Specifies the Prometheus Query Language expression to evaluate. For more details see [this doc](https://prometheus.io/docs/prometheus/latest/querying/basics). Evaluate at the period given by `interval` and record the result as a new set of time series with the metric name given by `record`. 

* `for` - (Optional) Specifies the amount of time alert must be active before firing, represented in ISO 8601 duration format.

* `labels` - (Optional) Specifies the labels to add or overwrite before storing the result.

* `record` - (Optional) Specifies the recorded metrics name.

* `alert_resolution` - (Optional) An `alert_resolution` block as defined below.

* `severity` - (Optional) Specifies the severity of the alerts fired by the rule. Possible values are between 0 and 4.

---

An `action` block supports the following:

* `action_group_id` - (Required) Specifies the resource id of the monitor action group.

* `action_properties` - (Optional) Specifies the properties of an action group object.

---

An `alert_resolution` block supports the following:

* `auto_resolved` - (Optional) Is the alert auto-resolution? Possible values are `true` and `false`.

* `time_to_resolve` - (Optional) Specifies the alert auto-resolution interval, represented in ISO 8601 duration format.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Alert Management Prometheus Rule Group.


## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Alert Management Prometheus Rule Group.
* `read` - (Defaults to 5 minutes) Used when retrieving the Alert Management Prometheus Rule Group.
* `update` - (Defaults to 30 minutes) Used when updating the Alert Management Prometheus Rule Group.
* `delete` - (Defaults to 30 minutes) Used when deleting the Alert Management Prometheus Rule Group.

## Import

Alert Management Prometheus Rule Group can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_monitor_alert_prometheus_rule_group.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.AlertsManagement/prometheusRuleGroups/ruleGroup1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-53de4cd8b92607b6a4cbc785ce5e7bce87a54df9e19cf314e278915532630c86 -->