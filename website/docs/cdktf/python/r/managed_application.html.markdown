---
subcategory: "Managed Applications"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_managed_application"
description: |-
  Manages a Managed Application.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_managed_application

Manages a Managed Application.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm.provider.AzurermProvider(self, "azurerm",
            features=AzurermProviderFeatures()
        )
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        data_azurerm_client_config_current =
        azurerm.data_azurerm_client_config.DataAzurermClientConfig(self, "current")
        data_azurerm_role_definition_builtin =
        azurerm.data_azurerm_role_definition.DataAzurermRoleDefinition(self, "builtin",
            name="Contributor"
        )
        azurerm_managed_application_definition_example =
        azurerm.managed_application_definition.ManagedApplicationDefinition(self, "example_4",
            authorization=[ManagedApplicationDefinitionAuthorization(
                role_definition_id=cdktf.Token.as_string(
                    cdktf.property_access(
                        cdktf.Fn.split("/",
                            cdktf.Token.as_string(data_azurerm_role_definition_builtin.id)), [
                            cdktf.Op.sub(
                                cdktf.Fn.length_of(
                                    cdktf.Fn.split("/",
                                        cdktf.Token.as_string(data_azurerm_role_definition_builtin.id))), 1)
                        ])),
                service_principal_id=cdktf.Token.as_string(data_azurerm_client_config_current.object_id)
            )
            ],
            description="Test Managed App Definition",
            display_name="TestManagedAppDefinition",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            lock_level="ReadOnly",
            name="examplemanagedapplicationdefinition",
            package_file_uri="https://github.com/Azure/azure-managedapp-samples/raw/master/Managed Application Sample Packages/201-managed-storage-account/managedstorage.zip",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_managed_application_definition_example.override_logical_id("example")
        azurerm_managed_application_example =
        azurerm.managed_application.ManagedApplication(self, "example_5",
            application_definition_id=cdktf.Token.as_string(azurerm_managed_application_definition_example.id),
            kind="ServiceCatalog",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            managed_resource_group_name="infrastructureGroup",
            name="example-managedapplication",
            parameters={
                "location": cdktf.Token.as_string(azurerm_resource_group_example.location),
                "storage_account_name_prefix": "storeNamePrefix",
                "storage_account_type": "Standard_LRS"
            },
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_managed_application_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Managed Application. Changing this forces a new resource to be created. 

* `resource_group_name` - (Required) The name of the Resource Group where the Managed Application should exist. Changing this forces a new resource to be created.

* `location` - (Required) Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.

* `kind` - (Required) The kind of the managed application to deploy. Possible values are `MarketPlace` and `ServiceCatalog`. Changing this forces a new resource to be created.

* `managed_resource_group_name` - (Required) The name of the target resource group where all the resources deployed by the managed application will reside. Changing this forces a new resource to be created.

* `application_definition_id` - (Optional) The application definition ID to deploy.

* `parameters` - (Optional) A mapping of name and value pairs to pass to the managed application as parameters.

* `parameter_values` - (Optional) The parameter values to pass to the Managed Application. This field is a JSON object that allows you to assign parameters to this Managed Application.

* `plan` - (Optional) One `plan` block as defined below.

* `tags` - (Optional) A mapping of tags to assign to the resource.

---

The `plan` block exports the following:

* `name` - (Required) Specifies the name of the plan from the marketplace.

* `product` - (Required) Specifies the product of the plan from the marketplace.

* `publisher` - (Required) Specifies the publisher of the plan.

* `version` - (Required) Specifies the version of the plan from the marketplace.

* `promotion_code` - (Optional) Specifies the promotion code to use with the plan.

~> **NOTE:** When `plan` is specified, legal terms must be accepted for this item on this subscription before creating the Managed Application. The `azurerm_marketplace_agreement` resource or AZ CLI tool can be used to do this.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Managed Application.

* `outputs` - The name and value pairs that define the managed application outputs.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Managed Application.
* `update` - (Defaults to 30 minutes) Used when updating the Managed Application.
* `read` - (Defaults to 5 minutes) Used when retrieving the Managed Application.
* `delete` - (Defaults to 30 minutes) Used when deleting the Managed Application.

## Import

Managed Application can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_managed_application.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Solutions/applications/app1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-024cd3ede5e4bd561854fa96a76f5490f25c672df85a7f8d223d3c65a36d1470 -->