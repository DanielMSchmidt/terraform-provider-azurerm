---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_virtual_hub_ip"
description: |-
  Manages a Virtual Hub IP. This resource is also known as a Route Server.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_virtual_hub_ip

Manages a Virtual Hub IP. This resource is also known as a Route Server.

~> **NOTE** Virtual Hub IP only supports Standard Virtual Hub without Virtual Wan.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_virtual_hub_example = azurerm.virtual_hub.VirtualHub(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vhub",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku="Standard"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_hub_example.override_logical_id("example")
        azurerm_virtual_network_example =
        azurerm.virtual_network.VirtualNetwork(self, "example_2",
            address_space=["10.5.0.0/16"],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_example.override_logical_id("example")
        azurerm_public_ip_example = azurerm.public_ip.PublicIp(self, "example_3",
            allocation_method="Static",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-pip",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku="Standard"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_public_ip_example.override_logical_id("example")
        azurerm_subnet_example = azurerm.subnet.Subnet(self, "example_4",
            address_prefixes=["10.5.1.0/24"],
            name="RouteServerSubnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_network_name=cdktf.Token.as_string(azurerm_virtual_network_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_subnet_example.override_logical_id("example")
        azurerm_virtual_hub_ip_example = azurerm.virtual_hub_ip.VirtualHubIp(self, "example_5",
            name="example-vhubipconfig",
            private_ip_address="10.5.1.18",
            private_ip_allocation_method="Static",
            public_ip_address_id=cdktf.Token.as_string(azurerm_public_ip_example.id),
            subnet_id=cdktf.Token.as_string(azurerm_subnet_example.id),
            virtual_hub_id=cdktf.Token.as_string(azurerm_virtual_hub_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_hub_ip_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Virtual Hub IP. Changing this forces a new resource to be created.

* `virtual_hub_id` - (Required) The ID of the Virtual Hub within which this IP configuration should be created. Changing this forces a new resource to be created.

* `subnet_id` - (Required) The ID of the Subnet that the IP will reside. Changing this forces a new resource to be created.

* `private_ip_address` - (Optional) The private IP address of the IP configuration.

* `private_ip_allocation_method` - (Optional) The private IP address allocation method. Possible values are `Static` and `Dynamic` is allowed. Defaults to `Dynamic`.

* `public_ip_address_id` - (Required) The ID of the Public IP Address. This option is required since September 1st 2021. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Virtual Hub IP.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 60 minutes) Used when creating the Virtual Hub IP.
* `read` - (Defaults to 5 minutes) Used when retrieving the Virtual Hub IP.
* `update` - (Defaults to 60 minutes) Used when updating the Virtual Hub IP.
* `delete` - (Defaults to 60 minutes) Used when deleting the Virtual Hub IP.

## Import

Virtual Hub IPs can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_virtual_hub_ip.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/virtualHubs/virtualHub1/ipConfigurations/ipConfig1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-03278b7baad52d5c4ba404ceda3bb46f81460d2cc7a835ac39f64a89b81f1612 -->