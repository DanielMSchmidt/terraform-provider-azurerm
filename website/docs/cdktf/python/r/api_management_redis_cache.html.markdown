---
subcategory: "API Management"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_api_management_redis_cache"
description: |-
  Manages a API Management Redis Cache.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_api_management_redis_cache

Manages a API Management Redis Cache.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_api_management_example = azurerm.api_management.ApiManagement(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-apim",
            publisher_email="pub1@email.com",
            publisher_name="pub1",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="Consumption_0"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_api_management_example.override_logical_id("example")
        azurerm_redis_cache_example = azurerm.redis_cache.RedisCache(self, "example_2",
            capacity=1,
            enable_non_ssl_port=False,
            family="C",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            minimum_tls_version="1.2",
            name="example-cache",
            redis_configuration=RedisCacheRedisConfiguration(),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="Basic"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_redis_cache_example.override_logical_id("example")
        azurerm_api_management_redis_cache_example =
        azurerm.api_management_redis_cache.ApiManagementRedisCache(self, "example_3",
            api_management_id=cdktf.Token.as_string(azurerm_api_management_example.id),
            cache_location="East Us",
            connection_string=cdktf.Token.as_string(azurerm_redis_cache_example.primary_connection_string),
            description="Redis cache instances",
            name="example-Redis-Cache",
            redis_cache_id=cdktf.Token.as_string(azurerm_redis_cache_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_api_management_redis_cache_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this API Management Redis Cache. Changing this forces a new API Management Redis Cache to be created.

* `api_management_id` - (Required) The resource ID of the API Management Service from which to create this external cache. Changing this forces a new API Management Redis Cache to be created.

* `connection_string` - (Required) The connection string to the Cache for Redis.

---

* `description` - (Optional) The description of the API Management Redis Cache.

* `redis_cache_id` - (Optional) The resource ID of the Cache for Redis.

* `cache_location` - (Optional) The location where to use cache from. Possible values are `default` and valid Azure regions. Defaults to `default`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the API Management Redis Cache.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the API Management Redis Cache.
* `read` - (Defaults to 5 minutes) Used when retrieving the API Management Redis Cache.
* `update` - (Defaults to 30 minutes) Used when updating the API Management Redis Cache.
* `delete` - (Defaults to 30 minutes) Used when deleting the API Management Redis Cache.

## Import

API Management Redis Caches can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_api_management_redis_cache.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.ApiManagement/service/service1/caches/cache1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-d15ea34e27a05cc968c7de4845d6abbfbf3e79abc68db0b910a57606d11f102b -->