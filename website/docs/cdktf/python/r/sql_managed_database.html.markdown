---
subcategory: "Database"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_sql_managed_database"
description: |-
  Manages a SQL Azure Managed Database.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_sql_managed_database

Manages a SQL Azure Managed Database.

-> **Note:** The `azurerm_sql_managed_database` resource is deprecated in version 3.0 of the AzureRM provider and will be removed in version 4.0. Please use the [`azurerm_mssql_managed_database`](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/mssql_managed_database) resource instead.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="rg-example"
        )
        azurerm_virtual_network_example =
        azurerm.virtual_network.VirtualNetwork(self, "example_1",
            address_space=["10.0.0.0/16"],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="test-network",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_example.override_logical_id("example")
        azurerm_subnet_example = azurerm.subnet.Subnet(self, "example_2",
            address_prefixes=["10.0.2.0/24"],
            name="acctsub",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_network_name=cdktf.Token.as_string(azurerm_virtual_network_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_subnet_example.override_logical_id("example")
        azurerm_sql_managed_instance_example =
        azurerm.sql_managed_instance.SqlManagedInstance(self, "example_3",
            administrator_login="mradministrator",
            administrator_login_password="thisIsDog11",
            license_type="BasePrice",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="GP_Gen5",
            storage_size_in_gb=32,
            subnet_id=cdktf.Token.as_string(azurerm_subnet_example.id),
            vcores=4
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_sql_managed_instance_example.override_logical_id("example")
        azurerm_sql_managed_database_example =
        azurerm.sql_managed_database.SqlManagedDatabase(self, "example_4",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="exampledatabase",
            sql_managed_instance_id=cdktf.Token.as_string(azurerm_sql_managed_instance_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_sql_managed_database_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the SQL Managed Instance. Changing this forces a new resource to be created.

* `sql_managed_instance_id` - (Required) The SQL Managed Instance ID that this Managed Database will be associated with. Changing this forces a new resource to be created.

* `location` - (Required) Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.

---

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The SQL Managed Database ID.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `read` - (Defaults to 5 minutes) Used when retrieving the Sql Managed Database.
* `create` - (Defaults to 24 hours) Used when creating the Sql Managed Database.
* `update` - (Defaults to 24 hours) Used when updating the Sql Managed Database.
* `delete` - (Defaults to 24 hours) Used when deleting the Sql Managed Database.

## Import

SQL Managed Databases can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_sql_managed_database.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Sql/managedInstances/myserver/databases/mydatabase
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-39d6f04d0706759b26c264077c48cb0f6ddd0313ba3645abf8708415febc9124 -->