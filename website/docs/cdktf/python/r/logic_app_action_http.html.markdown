---
subcategory: "Logic App"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_logic_app_action_http"
description: |-
  Manages an HTTP Action within a Logic App Workflow
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_logic_app_action_http

Manages an HTTP Action within a Logic App Workflow

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="workflow-resources"
        )
        azurerm_logic_app_workflow_example =
        azurerm.logic_app_workflow.LogicAppWorkflow(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="workflow1",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_logic_app_workflow_example.override_logical_id("example")
        azurerm_logic_app_action_http_example =
        azurerm.logic_app_action_http.LogicAppActionHttp(self, "example_2",
            logic_app_id=cdktf.Token.as_string(azurerm_logic_app_workflow_example.id),
            method="GET",
            name="webhook",
            uri="http://example.com/some-webhook"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_logic_app_action_http_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the HTTP Action to be created within the Logic App Workflow. Changing this forces a new resource to be created.

-> **NOTE:** This name must be unique across all Actions within the Logic App Workflow.

* `logic_app_id` - (Required) Specifies the ID of the Logic App Workflow. Changing this forces a new resource to be created.

* `method` - (Required) Specifies the HTTP Method which should be used for this HTTP Action. Possible values include `DELETE`, `GET`, `PATCH`, `POST` and `PUT`.

* `uri` - (Required) Specifies the URI which will be called when this HTTP Action is triggered.

* `body` - (Optional) Specifies the HTTP Body that should be sent to the `uri` when this HTTP Action is triggered.

* `headers` - (Optional) Specifies a Map of Key-Value Pairs that should be sent to the `uri` when this HTTP Action is triggered.

* `queries` - (Optional) Specifies a Map of Key-Value Pairs that should be sent to the `uri` when this HTTP Action is triggered.

* `run_after` - (Optional) Specifies the place of the HTTP Action in the Logic App Workflow. If not specified, the HTTP Action is right after the Trigger. A `run_after` block is as defined below.

---

A `run_after` block supports the following:

* `action_name` - (Required) Specifies the name of the precedent HTTP Action.

* `action_result` - (Required) Specifies the expected result of the precedent HTTP Action, only after which the current HTTP Action will be triggered. Possible values include `Succeeded`, `Failed`, `Skipped` and `TimedOut`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the HTTP Action within the Logic App Workflow.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Logic App HTTP Action.
* `update` - (Defaults to 30 minutes) Used when updating the Logic App HTTP Action.
* `read` - (Defaults to 5 minutes) Used when retrieving the Logic App HTTP Action.
* `delete` - (Defaults to 30 minutes) Used when deleting the Logic App HTTP Action.

## Import

Logic App HTTP Actions can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_logic_app_action_http.webhook1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Logic/workflows/workflow1/actions/webhook1
```

-> **NOTE:** This ID is unique to Terraform and doesn't directly match to any other resource. To compose this ID, you can take the ID Logic App Workflow and append `/actions/{name of the action}`.

<!-- cache-key: cdktf-0.17.0-pre.15 input-5357e53d27b6ffc7da27c2bd4ed65e215bbcbf09c052adbb6d7daf1dd6cfe0eb -->