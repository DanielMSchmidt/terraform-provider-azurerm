---
subcategory: "Media"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_media_asset"
description: |-
  Manages a Media Asset.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_media_asset

Manages a Media Asset.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="media-resources"
        )
        azurerm_storage_account_example =
        azurerm.storage_account.StorageAccount(self, "example_1",
            account_replication_type="GRS",
            account_tier="Standard",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplestoracc",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_example.override_logical_id("example")
        azurerm_media_services_account_example =
        azurerm.media_services_account.MediaServicesAccount(self, "example_2",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplemediaacc",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            storage_account=[MediaServicesAccountStorageAccount(
                id=cdktf.Token.as_string(azurerm_storage_account_example.id),
                is_primary=True
            )
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_media_services_account_example.override_logical_id("example")
        azurerm_media_asset_example = azurerm.media_asset.MediaAsset(self, "example_3",
            description="Asset description",
            media_services_account_name=cdktf.Token.as_string(azurerm_media_services_account_example.name),
            name="Asset1",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_media_asset_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `media_services_account_name` - (Required) Specifies the name of the Media Services Account. Changing this forces a new Media Asset to be created.

* `name` - (Required) The name which should be used for this Media Asset. Changing this forces a new Media Asset to be created.

* `resource_group_name` - (Required) The name of the Resource Group where the Media Asset should exist. Changing this forces a new Media Asset to be created.

---

* `alternate_id` - (Optional) The alternate ID of the Asset.

* `container` - (Optional) The name of the asset blob container. Changing this forces a new Media Asset to be created.

* `description` - (Optional) The Asset description.

* `storage_account_name` - (Optional) The name of the storage account where to store the media asset. Changing this forces a new Media Asset to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Media Asset.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Media Asset.
* `read` - (Defaults to 5 minutes) Used when retrieving the Media Asset.
* `update` - (Defaults to 30 minutes) Used when updating the Media Asset.
* `delete` - (Defaults to 30 minutes) Used when deleting the Media Asset.

## Import

Media Assets can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_media_asset.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Media/mediaServices/account1/assets/asset1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-4e602a58d3151e6680e311c3f3f5168b176283f3880bd691299a25162fa497fb -->