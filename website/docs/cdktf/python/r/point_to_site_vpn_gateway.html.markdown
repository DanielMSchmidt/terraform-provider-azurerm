---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_point_to_site_vpn_gateway"
description: |-
  Manages a Point-to-Site VPN Gateway.

---


<!-- Please do not edit this file, it is generated. -->
# azurerm_point_to_site_vpn_gateway

Manages a Point-to-Site VPN Gateway.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_virtual_wan_example = azurerm.virtual_wan.VirtualWan(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-virtualwan",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_wan_example.override_logical_id("example")
        azurerm_vpn_server_configuration_example =
        azurerm.vpn_server_configuration.VpnServerConfiguration(self, "example_2",
            client_root_certificate=[VpnServerConfigurationClientRootCertificate(
                name="DigiCert-Federated-ID-Root-CA",
                public_cert_data="MIIDuzCCAqOgAwIBAgIQCHTZWCM+IlfFIRXIvyKSrjANBgkqhkiG9w0BAQsFADBn\nMQswCQYDVQQGEwJVUzEVMBMGA1UEChMMRGlnaUNlcnQgSW5jMRkwFwYDVQQLExB3\nd3cuZGlnaWNlcnQuY29tMSYwJAYDVQQDEx1EaWdpQ2VydCBGZWRlcmF0ZWQgSUQg\nUm9vdCBDQTAeFw0xMzAxMTUxMjAwMDBaFw0zMzAxMTUxMjAwMDBaMGcxCzAJBgNV\nBAYTAlVTMRUwEwYDVQQKEwxEaWdpQ2VydCBJbmMxGTAXBgNVBAsTEHd3dy5kaWdp\nY2VydC5jb20xJjAkBgNVBAMTHURpZ2lDZXJ0IEZlZGVyYXRlZCBJRCBSb290IENB\nMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvAEB4pcCqnNNOWE6Ur5j\nQPUH+1y1F9KdHTRSza6k5iDlXq1kGS1qAkuKtw9JsiNRrjltmFnzMZRBbX8Tlfl8\nzAhBmb6dDduDGED01kBsTkgywYPxXVTKec0WxYEEF0oMn4wSYNl0lt2eJAKHXjNf\nGTwiibdP8CUR2ghSM2sUTI8Nt1Omfc4SMHhGhYD64uJMbX98THQ/4LMGuYegou+d\nGTiahfHtjn7AboSEknwAMJHCh5RlYZZ6B1O4QbKJ+34Q0eKgnI3X6Vc9u0zf6DH8\nDk+4zQDYRRTqTnVO3VT8jzqDlCRuNtq6YvryOWN74/dq8LQhUnXHvFyrsdMaE1X2\nDwIDAQABo2MwYTAPBgNVHRMBAf8EBTADAQH/MA4GA1UdDwEB/wQEAwIBhjAdBgNV\nHQ4EFgQUGRdkFnbGt1EWjKwbUne+5OaZvRYwHwYDVR0jBBgwFoAUGRdkFnbGt1EW\njKwbUne+5OaZvRYwDQYJKoZIhvcNAQELBQADggEBAHcqsHkrjpESqfuVTRiptJfP\n9JbdtWqRTmOf6uJi2c8YVqI6XlKXsD8C1dUUaaHKLUJzvKiazibVuBwMIT84AyqR\nQELn3e0BtgEymEygMU569b01ZPxoFSnNXc7qDZBDef8WfqAV/sxkTi8L9BkmFYfL\nuGLOhRJOFprPdoDIUBB+tmCl3oDcBy3vnUeOEioz8zAkprcb3GHwHAK+vHmmfgcn\nWsfMLH4JCLa/tRYL+Rw/N3ybCkDp00s0WUZ+AoDywSl0Q/ZEnNY0MsFiw6LyIdbq\nM/s/1JRtO3bDSzD9TazRVzn2oBqzSa8VgIo5C1nOnoAKJTlsClJKvIhnRlaLQqk=\n"
            )
            ],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-config",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            vpn_authentication_types=["Certificate"]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_vpn_server_configuration_example.override_logical_id("example")
        azurerm_virtual_hub_example = azurerm.virtual_hub.VirtualHub(self, "example_3",
            address_prefix="10.0.0.0/23",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-virtualhub",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_wan_id=cdktf.Token.as_string(azurerm_virtual_wan_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_hub_example.override_logical_id("example")
        azurerm_point_to_site_vpn_gateway_example =
        azurerm.point_to_site_vpn_gateway.PointToSiteVpnGateway(self, "example_4",
            connection_configuration=PointToSiteVpnGatewayConnectionConfiguration(
                name="example-gateway-config",
                vpn_client_address_pool=PointToSiteVpnGatewayConnectionConfigurationVpnClientAddressPool(
                    address_prefixes=["10.0.2.0/24"]
                )
            ),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vpn-gateway",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            scale_unit=1,
            virtual_hub_id=cdktf.Token.as_string(azurerm_virtual_hub_example.id),
            vpn_server_configuration_id=cdktf.Token.as_string(azurerm_vpn_server_configuration_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_point_to_site_vpn_gateway_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Point-to-Site VPN Gateway. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) The name of the resource group in which to create the Point-to-Site VPN Gateway. Changing this forces a new resource to be created.

* `location` - (Required) Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.

* `connection_configuration` - (Required) A `connection_configuration` block as defined below.

* `scale_unit` - (Required) The [Scale Unit](https://docs.microsoft.com/azure/virtual-wan/virtual-wan-faq#what-is-a-virtual-wan-gateway-scale-unit) for this Point-to-Site VPN Gateway.

* `virtual_hub_id` - (Required) The ID of the Virtual Hub where this Point-to-Site VPN Gateway should exist. Changing this forces a new resource to be created.

* `vpn_server_configuration_id` - (Required) The ID of the VPN Server Configuration which this Point-to-Site VPN Gateway should use. Changing this forces a new resource to be created.

* `dns_servers` - (Optional) A list of IP Addresses of DNS Servers for the Point-to-Site VPN Gateway.

* `routing_preference_internet_enabled` - (Optional) Is the Routing Preference for the Public IP Interface of the VPN Gateway enabled? Defaults to `false`. Changing this forces a new resource to be created.

* `tags` - (Optional) A mapping of tags to assign to the Point-to-Site VPN Gateway.

---

A `connection_configuration` block supports the following:

* `name` - (Required) The Name which should be used for this Connection Configuration.

* `vpn_client_address_pool` - (Required) A `vpn_client_address_pool` block as defined below.

* `route` - (Optional) A `route` block as defined below.

* `internet_security_enabled` - (Optional) Should Internet Security be enabled to secure internet traffic? Changing this forces a new resource to be created. Defaults to `false`.

---

A `vpn_client_address_pool` block supports the following:

* `address_prefixes` - (Required) A list of CIDR Ranges which should be used as Address Prefixes.

---

A `route` block supports the following:

* `associated_route_table_id` - (Required) The Virtual Hub Route Table resource id associated with this Routing Configuration.

* `inbound_route_map_id` - (Optional) The resource ID of the Route Map associated with this Routing Configuration for inbound learned routes.

* `outbound_route_map_id` - (Optional) The resource ID of the Route Map associated with this Routing Configuration for outbound advertised routes.

* `propagated_route_table` - (Optional) A `propagated_route_table` block as defined below.

---

A `propagated_route_table` block supports the following:

* `ids` - (Required) The list of Virtual Hub Route Table resource id which the routes will be propagated to.

* `labels` - (Optional) The list of labels to logically group Virtual Hub Route Tables which the routes will be propagated to.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Point-to-Site VPN Gateway.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 90 minutes) Used when creating the Point-to-Site VPN Gateway.
* `update` - (Defaults to 90 minutes) Used when updating the Point-to-Site VPN Gateway.
* `read` - (Defaults to 5 minutes) Used when retrieving the Point-to-Site VPN Gateway.
* `delete` - (Defaults to 90 minutes) Used when deleting the Point-to-Site VPN Gateway.

## Import

Point-to-Site VPN Gateway's can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_point_to_site_vpn_gateway.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/p2sVpnGateways/gateway1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-c69b991459649c020d3357c1b1209a67f11f914d51054664f1566b9122cd61e8 -->