---
subcategory: "Application Insights"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_application_insights_api_key"
description: |-
  Manages an Application Insights API key.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_application_insights_api_key

Manages an Application Insights API key.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="tf-test"
        )
        azurerm_application_insights_example =
        azurerm.application_insights.ApplicationInsights(self, "example_1",
            application_type="web",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="tf-test-appinsights",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_application_insights_example.override_logical_id("example")
        azurerm_application_insights_api_key_authenticate_sdk_control_channel =
        azurerm.application_insights_api_key.ApplicationInsightsApiKey(self, "authenticate_sdk_control_channel",
            application_insights_id=cdktf.Token.as_string(azurerm_application_insights_example.id),
            name="tf-test-appinsights-authenticate-sdk-control-channel-api-key",
            read_permissions=["agentconfig"]
        )
        azurerm_application_insights_api_key_full_permissions =
        azurerm.application_insights_api_key.ApplicationInsightsApiKey(self, "full_permissions",
            application_insights_id=cdktf.Token.as_string(azurerm_application_insights_example.id),
            name="tf-test-appinsights-full-permissions-api-key",
            read_permissions=["agentconfig", "aggregate", "api", "draft", "extendqueries", "search"
            ],
            write_permissions=["annotations"]
        )
        azurerm_application_insights_api_key_read_telemetry =
        azurerm.application_insights_api_key.ApplicationInsightsApiKey(self, "read_telemetry",
            application_insights_id=cdktf.Token.as_string(azurerm_application_insights_example.id),
            name="tf-test-appinsights-read-telemetry-api-key",
            read_permissions=["aggregate", "api", "draft", "extendqueries", "search"
            ]
        )
        azurerm_application_insights_api_key_write_annotations =
        azurerm.application_insights_api_key.ApplicationInsightsApiKey(self, "write_annotations",
            application_insights_id=cdktf.Token.as_string(azurerm_application_insights_example.id),
            name="tf-test-appinsights-write-annotations-api-key",
            write_permissions=["annotations"]
        )
        cdktf_terraform_output_authenticate_sdk_control_channel =
        cdktf.TerraformOutput(self, "authenticate_sdk_control_channel_6",
            value=azurerm_application_insights_api_key_authenticate_sdk_control_channel.api_key
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        cdktf_terraform_output_authenticate_sdk_control_channel.override_logical_id("authenticate_sdk_control_channel")
        cdktf.TerraformOutput(self, "full_permissions_api_key",
            value=azurerm_application_insights_api_key_full_permissions.api_key
        )
        cdktf.TerraformOutput(self, "read_telemetry_api_key",
            value=azurerm_application_insights_api_key_read_telemetry.api_key
        )
        cdktf.TerraformOutput(self, "write_annotations_api_key",
            value=azurerm_application_insights_api_key_write_annotations.api_key
        )
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Application Insights API key. Changing this forces a new resource to be created.

* `application_insights_id` - (Required) The ID of the Application Insights component on which the API key operates. Changing this forces a new resource to be created.

* `read_permissions` - (Optional) Specifies the list of read permissions granted to the API key. Valid values are `agentconfig`, `aggregate`, `api`, `draft`, `extendqueries`, `search`. Please note these values are case sensitive. Changing this forces a new resource to be created.

* `write_permissions` - (Optional) Specifies the list of write permissions granted to the API key. Valid values are `annotations`. Please note these values are case sensitive. Changing this forces a new resource to be created.

-> **Note:** At least one read or write permission must be defined.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Application Insights API key.

* `api_key` - The API Key secret (Sensitive).

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Application Insights API Key.
* `update` - (Defaults to 30 minutes) Used when updating the Application Insights API Key.
* `read` - (Defaults to 5 minutes) Used when retrieving the Application Insights API Key.
* `delete` - (Defaults to 30 minutes) Used when deleting the Application Insights API Key.

## Import

Application Insights API keys can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_application_insights_api_key.my_key /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Insights/components/instance1/apiKeys/00000000-0000-0000-0000-000000000000
```

-> **Note:** The secret `api_key` cannot be retrieved during an import. You will need to edit the state by hand to set the secret value if you happen to have it backed up somewhere.

<!-- cache-key: cdktf-0.17.0-pre.15 input-2007e3dd1f2232394a2b0929800927ddb276849e73e9bf10ff8183984bf20b4c -->