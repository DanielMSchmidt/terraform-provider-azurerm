---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_virtual_machine_packet_capture"
description: |-
  Configures Packet Capturing against a Virtual Machine using a Network Watcher.

---


<!-- Please do not edit this file, it is generated. -->
# azurerm_virtual_machine_packet_capture

Configures Network Packet Capturing against a Virtual Machine using a Network Watcher.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_storage_account_example =
        azurerm.storage_account.StorageAccount(self, "example_1",
            account_replication_type="LRS",
            account_tier="Standard",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplesa",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_example.override_logical_id("example")
        azurerm_virtual_network_example =
        azurerm.virtual_network.VirtualNetwork(self, "example_2",
            address_space=["10.0.0.0/16"],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-network",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_example.override_logical_id("example")
        azurerm_network_watcher_example =
        azurerm.network_watcher.NetworkWatcher(self, "example_3",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-nw",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_network_watcher_example.override_logical_id("example")
        azurerm_subnet_example = azurerm.subnet.Subnet(self, "example_4",
            address_prefixes=["10.0.2.0/24"],
            name="internal",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_network_name=cdktf.Token.as_string(azurerm_virtual_network_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_subnet_example.override_logical_id("example")
        azurerm_network_interface_example =
        azurerm.network_interface.NetworkInterface(self, "example_5",
            ip_configuration=[NetworkInterfaceIpConfiguration(
                name="testconfiguration1",
                private_ip_address_allocation="Dynamic",
                subnet_id=cdktf.Token.as_string(azurerm_subnet_example.id)
            )
            ],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-nic",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_network_interface_example.override_logical_id("example")
        azurerm_virtual_machine_example =
        azurerm.virtual_machine.VirtualMachine(self, "example_6",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vm",
            network_interface_ids=[
                cdktf.Token.as_string(azurerm_network_interface_example.id)
            ],
            os_profile=VirtualMachineOsProfile(
                admin_password="Password1234!",
                admin_username="testadmin",
                computer_name="pctest-vm"
            ),
            os_profile_linux_config=VirtualMachineOsProfileLinuxConfig(
                disable_password_authentication=False
            ),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            storage_image_reference=VirtualMachineStorageImageReference(
                offer="UbuntuServer",
                publisher="Canonical",
                sku="20.04-LTS",
                version="latest"
            ),
            storage_os_disk=VirtualMachineStorageOsDisk(
                caching="ReadWrite",
                create_option="FromImage",
                managed_disk_type="Standard_LRS",
                name="osdisk"
            ),
            vm_size="Standard_F2"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_machine_example.override_logical_id("example")
        azurerm_virtual_machine_extension_example =
        azurerm.virtual_machine_extension.VirtualMachineExtension(self, "example_7",
            auto_upgrade_minor_version=True,
            name="network-watcher",
            publisher="Microsoft.Azure.NetworkWatcher",
            type="NetworkWatcherAgentLinux",
            type_handler_version="1.4",
            virtual_machine_id=cdktf.Token.as_string(azurerm_virtual_machine_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_machine_extension_example.override_logical_id("example")
        azurerm_virtual_machine_packet_capture_example =
        azurerm.virtual_machine_packet_capture.VirtualMachinePacketCapture(self, "example_8",
            depends_on=[azurerm_virtual_machine_extension_example],
            name="example-pc",
            network_watcher_id=cdktf.Token.as_string(azurerm_network_watcher_example.id),
            storage_location=VirtualMachinePacketCaptureStorageLocation(
                storage_account_id=cdktf.Token.as_string(azurerm_storage_account_example.id)
            ),
            virtual_machine_id=cdktf.Token.as_string(azurerm_virtual_machine_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_machine_packet_capture_example.override_logical_id("example")
```

~> **NOTE:** This Resource requires that [the Network Watcher Virtual Machine Extension](https://docs.microsoft.com/azure/network-watcher/network-watcher-packet-capture-manage-portal#before-you-begin) is installed on the Virtual Machine before capturing can be enabled which can be installed via [the `azurerm_virtual_machine_extension` resource](virtual_machine_extension.html).

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name to use for this Network Packet Capture. Changing this forces a new resource to be created.

* `network_watcher_id` - (Required) The resource ID of the Network Watcher. Changing this forces a new resource to be created.

* `virtual_machine_id` - (Required) The resource ID of the target Virtual Machine to capture packets from. Changing this forces a new resource to be created.

* `maximum_bytes_per_packet` - (Optional) The number of bytes captured per packet. The remaining bytes are truncated. Defaults to `0` (Entire Packet Captured). Changing this forces a new resource to be created.

* `maximum_bytes_per_session` - (Optional) Maximum size of the capture in Bytes. Defaults to `1073741824` (1GB). Changing this forces a new resource to be created.

* `maximum_capture_duration_in_seconds` - (Optional) The maximum duration of the capture session in seconds. Defaults to `18000` (5 hours). Changing this forces a new resource to be created.

* `storage_location` - (Required) A `storage_location` block as defined below. Changing this forces a new resource to be created.

* `filter` - (Optional) One or more `filter` blocks as defined below. Changing this forces a new resource to be created.

---

A `storage_location` block contains:

* `file_path` - (Optional) A valid local path on the target Virtual Machine. Must include the name of the capture file (*.cap). For Linux Virtual Machines it must start with `/var/captures`.

* `storage_account_id` - (Optional) The ID of the storage account where the packet capture sessions should be saved to.

~> **NOTE:** At least one of `file_path` or `storage_account_id` must be specified.

---

A `filter` block contains:

* `local_ip_address` - (Optional) The local IP Address to be filtered on. Specify `127.0.0.1` for a single address entry, `127.0.0.1-127.0.0.255` for a range and `127.0.0.1;127.0.0.5` for multiple entries. Multiple ranges and mixing ranges with multiple entries are currently not supported. Changing this forces a new resource to be created.

* `local_port` - (Optional) The local port to be filtered on. Specify `80` for single port entry, `80-85` for a range and `80;443;` for multiple entries. Multiple ranges and mixing ranges with multiple entries are currently not supported. Changing this forces a new resource to be created.

* `protocol` - (Required) The Protocol to be filtered on. Possible values include `Any`, `TCP` and `UDP`. Changing this forces a new resource to be created.

* `remote_ip_address` - (Optional) The remote IP Address to be filtered on. Specify `127.0.0.1` for a single address entry, `127.0.0.1-127.0.0.255` for a range and `127.0.0.1;127.0.0.5` for multiple entries. Multiple ranges and mixing ranges with multiple entries are currently not supported. Changing this forces a new resource to be created.

* `remote_port` - (Optional) The remote port to be filtered on. Specify `80` for single port entry, `80-85` for a range and `80;443;` for multiple entries. Multiple ranges and mixing ranges with multiple entries are currently not supported. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The Virtual Machine Packet Capture ID.

* `storage_location` - (Required) A `storage_location` block as defined below.

---

A `storage_location` block contains:

* `storage_path` - The URI of the storage path where the packet capture sessions are saved to.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Virtual Machine Packet Capture.
* `read` - (Defaults to 5 minutes) Used when retrieving the Virtual Machine Packet Capture.
* `delete` - (Defaults to 30 minutes) Used when deleting the Virtual Machine Packet Capture.

## Import

Virtual Machine Packet Captures can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_virtual_machine_packet_capture.capture1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/networkWatchers/watcher1/packetCaptures/capture1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-7bc2f088eb8e4794a745a1b21dc4f526701f9268a4722bd77ade719522c7ff01 -->