---
subcategory: "Data Factory"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_data_factory_trigger_tumbling_window"
description: |-
  Manages a Tumbling Window Trigger inside an Azure Data Factory.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_data_factory_trigger_tumbling_window

Manages a Tumbling Window Trigger inside an Azure Data Factory.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_data_factory_example = azurerm.data_factory.DataFactory(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_data_factory_example.override_logical_id("example")
        azurerm_data_factory_pipeline_example =
        azurerm.data_factory_pipeline.DataFactoryPipeline(self, "example_2",
            data_factory_id=cdktf.Token.as_string(azurerm_data_factory_example.id),
            name="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_data_factory_pipeline_example.override_logical_id("example")
        azurerm_data_factory_trigger_tumbling_window_example =
        azurerm.data_factory_trigger_tumbling_window.DataFactoryTriggerTumblingWindow(self, "example_3",
            additional_properties={
                "bar": "value2",
                "foo": "value1"
            },
            annotations=["example1", "example2", "example3"],
            data_factory_id=cdktf.Token.as_string(azurerm_data_factory_example.id),
            delay="16:00:00",
            description="example description",
            end_time="2022-09-21T08:00:00Z",
            frequency="Minute",
            interval=15,
            name="example",
            pipeline=DataFactoryTriggerTumblingWindowPipeline(
                name=cdktf.Token.as_string(azurerm_data_factory_pipeline_example.name),
                parameters={
                    "Env": "Prod"
                }
            ),
            retry=DataFactoryTriggerTumblingWindowRetry(
                count=1,
                interval=30
            ),
            start_time="2022-09-21T00:00:00Z",
            trigger_dependency=[DataFactoryTriggerTumblingWindowTriggerDependency(
                offset="-24:00:00",
                size="24:00:00"
            )
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_data_factory_trigger_tumbling_window_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Data Factory Tumbling Window Trigger. Changing this forces a new resource to be created.

* `data_factory_id` - (Required) The ID of Data Factory in which to associate the Trigger with. Changing this forces a new resource.

* `frequency` - (Required) Specifies the frequency of Tumbling Window. Possible values are `Hour`, `Minute` and `Month`. Changing this forces a new resource.

* `interval` - (Required) Specifies the interval of Tumbling Window. Changing this forces a new resource.

* `pipeline` - (Required) A `pipeline` block as defined below.

* `start_time` - (Required) Specifies the start time of Tumbling Window, formatted as an RFC3339 string. Changing this forces a new resource.

* `activated` - (Optional) Specifies if the Data Factory Tumbling Window Trigger is activated. Defaults to `true`.

* `additional_properties` - (Optional) A map of additional properties to associate with the Data Factory Tumbling Window Trigger.

* `annotations` - (Optional) List of tags that can be used for describing the Data Factory Tumbling Window Trigger.

* `delay` - (Optional) Specifies how long the trigger waits before triggering new run. formatted as an `D.HH:MM:SS`.

* `description` - (Optional) The description for the Data Factory Tumbling Window Trigger.

* `end_time` - (Optional) Specifies the end time of Tumbling Window, formatted as an RFC3339 string.

* `max_concurrency` - (Optional) The max number for simultaneous trigger run fired by Tumbling Window. Possible values are between `1` and `50`. Defaults to `50`.

* `retry` - (Optional) A `retry` block as defined below.

* `trigger_dependency` - (Optional) One or more `trigger_dependency` block as defined below.

---

A `pipeline` block supports the following:

* `name` - (Required) The Data Factory Pipeline name that the trigger will act on.

* `parameters` - (Optional) The Data Factory Pipeline parameters that the trigger will act on.

---

A `retry` block supports the following:

* `count` - (Required) The maximum retry attempts if the pipeline run failed.

* `interval` - (Optional) The Interval in seconds between each retry if the pipeline run failed. Defaults to `30`.

---

A `trigger_dependency` block supports the following:

* `offset` - (Optional) The offset of the dependency trigger. Must be in Timespan format (Â±hh:mm:ss) and must be a negative offset for a self dependency.
  
* `size` - (Optional) The size of the dependency tumbling window. Must be in Timespan format (hh:mm:ss).

* `trigger_name` - (Optional) The dependency trigger name. If not specified, it will use self dependency.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Data Factory Tumbling Window Trigger.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Data Factory Tumbling Window Trigger.
* `update` - (Defaults to 30 minutes) Used when updating the Data Factory Tumbling Window Trigger.
* `read` - (Defaults to 5 minutes) Used when retrieving the Data Factory Tumbling Window Trigger.
* `delete` - (Defaults to 30 minutes) Used when deleting the Data Factory Tumbling Window Trigger.

## Import

Data Factory Tumbling Window Trigger can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_data_factory_trigger_tumbling_window.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/example/providers/Microsoft.DataFactory/factories/example/triggers/example
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-7e74dd9c31edc9bd5c82d294b3f5e85dcd9312ca6c3063b9695ef984d362cf65 -->