---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_private_endpoint_application_security_group_association"
description: |-
  Manages an association between Private Endpoint and Application Security Group.

---


<!-- Please do not edit this file, it is generated. -->
# azurerm_private_endpoint_application_security_group_association

Manages an association between Private Endpoint and Application Security Group.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm.provider.AzurermProvider(self, "azurerm",
            features=AzurermProviderFeatures()
        )
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-PEASGAsso"
        )
        azurerm_virtual_network_example =
        azurerm.virtual_network.VirtualNetwork(self, "example_2",
            address_space=["10.5.0.0/16"],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplevnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_example.override_logical_id("example")
        data_azurerm_subscription_current =
        azurerm.data_azurerm_subscription.DataAzurermSubscription(self, "current")
        azurerm_application_security_group_example =
        azurerm.application_security_group.ApplicationSecurityGroup(self, "example_4",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_application_security_group_example.override_logical_id("example")
        azurerm_public_ip_example = azurerm.public_ip.PublicIp(self, "example_5",
            allocation_method="Static",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplepip",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku="Standard"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_public_ip_example.override_logical_id("example")
        azurerm_subnet_endpoint = azurerm.subnet.Subnet(self, "endpoint",
            address_prefixes=["10.5.2.0/24"],
            enforce_private_link_endpoint_network_policies=True,
            name="examplenetendpoint",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_network_name=cdktf.Token.as_string(azurerm_virtual_network_example.name)
        )
        azurerm_subnet_service = azurerm.subnet.Subnet(self, "service",
            address_prefixes=["10.5.1.0/24"],
            enforce_private_link_service_network_policies=True,
            name="examplenetservice",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_network_name=cdktf.Token.as_string(azurerm_virtual_network_example.name)
        )
        azurerm_lb_example = azurerm.lb.Lb(self, "example_8",
            frontend_ip_configuration=[LbFrontendIpConfiguration(
                name=cdktf.Token.as_string(azurerm_public_ip_example.name),
                public_ip_address_id=cdktf.Token.as_string(azurerm_public_ip_example.id)
            )
            ],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplelb",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku="Standard"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_lb_example.override_logical_id("example")
        azurerm_private_link_service_example =
        azurerm.private_link_service.PrivateLinkService(self, "example_9",
            auto_approval_subscription_ids=[
                cdktf.Token.as_string(data_azurerm_subscription_current.subscription_id)
            ],
            load_balancer_frontend_ip_configuration_ids=[
                cdktf.Token.as_string(
                    cdktf.property_access(azurerm_lb_example.frontend_ip_configuration, ["0", "id"
                    ]))
            ],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplePLS",
            nat_ip_configuration=[PrivateLinkServiceNatIpConfiguration(
                name="primaryIpConfiguration",
                primary=True,
                subnet_id=cdktf.Token.as_string(azurerm_subnet_service.id)
            )
            ],
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            visibility_subscription_ids=[
                cdktf.Token.as_string(data_azurerm_subscription_current.subscription_id)
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_private_link_service_example.override_logical_id("example")
        azurerm_private_endpoint_example =
        azurerm.private_endpoint.PrivateEndpoint(self, "example_10",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-privatelink",
            private_service_connection=PrivateEndpointPrivateServiceConnection(
                is_manual_connection=False,
                name=cdktf.Token.as_string(azurerm_private_link_service_example.name),
                private_connection_resource_id=cdktf.Token.as_string(azurerm_private_link_service_example.id)
            ),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            subnet_id=cdktf.Token.as_string(azurerm_subnet_endpoint.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_private_endpoint_example.override_logical_id("example")
        azurerm_private_endpoint_application_security_group_association_example =
        azurerm.private_endpoint_application_security_group_association.PrivateEndpointApplicationSecurityGroupAssociation(self, "example_11",
            application_security_group_id=cdktf.Token.as_string(azurerm_application_security_group_example.id),
            private_endpoint_id=cdktf.Token.as_string(azurerm_private_endpoint_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_private_endpoint_application_security_group_association_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `application_security_group_id` - (Required) The id of application security group to associate. Changing this forces a new resource to be created.

* `private_endpoint_id` - (Required) The id of private endpoint to associate. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The (Terraform specific) ID of the association between Private Endpoint and Application Security Group.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the association between Private Endpoint and Application Security Group.
* `read` - (Defaults to 5 minutes) Used when retrieving the association between Private Endpoint and Application Security Group.
* `delete` - (Defaults to 30 minutes) Used when deleting the association between Private Endpoint and Application Security Group.

## Import

Associations between Private Endpoint and Application Security Group can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_private_endpoint_application_security_group_association.association1 "/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/privateEndpoints/endpoints1|/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/applicationSecurityGroups/securityGroup1",
```

-> **NOTE:** This ID is specific to Terraform - and is of the format `{privateEndpointId}|{applicationSecurityGroupId}`.

<!-- cache-key: cdktf-0.17.0-pre.15 input-d9389af3e3597a9eec6f199bcb80f89ff1f458f9862ef163edd91cb9353907d8 -->