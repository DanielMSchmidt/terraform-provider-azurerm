---
subcategory: "Stream Analytics"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_stream_analytics_output_synapse"
description: |-
  Manages a Stream Analytics Output to an Azure Synapse Analytics Workspace.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_stream_analytics_output_synapse

Manages a Stream Analytics Output to an Azure Synapse Analytics Workspace.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="rg-example"
        )
        azurerm_storage_account_example =
        azurerm.storage_account.StorageAccount(self, "example_1",
            account_kind="StorageV2",
            account_replication_type="LRS",
            account_tier="Standard",
            is_hns_enabled=cdktf.Token.as_boolean("true"),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplestorageacc",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_example.override_logical_id("example")
        azurerm_storage_data_lake_gen2_filesystem_example =
        azurerm.storage_data_lake_gen2_filesystem.StorageDataLakeGen2Filesystem(self, "example_2",
            name="example",
            storage_account_id=cdktf.Token.as_string(azurerm_storage_account_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_data_lake_gen2_filesystem_example.override_logical_id("example")
        azurerm_synapse_workspace_example =
        azurerm.synapse_workspace.SynapseWorkspace(self, "example_3",
            identity=SynapseWorkspaceIdentity(
                type="SystemAssigned"
            ),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sql_administrator_login="sqladminuser",
            sql_administrator_login_password="H@Sh1CoR3!",
            storage_data_lake_gen2_filesystem_id=cdktf.Token.as_string(azurerm_storage_data_lake_gen2_filesystem_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_synapse_workspace_example.override_logical_id("example")
        data_azurerm_stream_analytics_job_example =
        azurerm.data_azurerm_stream_analytics_job.DataAzurermStreamAnalyticsJob(self, "example_4",
            name="example-job",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_azurerm_stream_analytics_job_example.override_logical_id("example")
        azurerm_stream_analytics_output_synapse_example =
        azurerm.stream_analytics_output_synapse.StreamAnalyticsOutputSynapse(self, "example_5",
            database="master",
            name="example-output-synapse",
            password=cdktf.Token.as_string(azurerm_synapse_workspace_example.sql_administrator_login_password),
            resource_group_name=cdktf.Token.as_string(data_azurerm_stream_analytics_job_example.resource_group_name),
            server=cdktf.Token.as_string(
                cdktf.property_access(azurerm_synapse_workspace_example.connectivity_endpoints, ["\"sqlOnDemand\""])),
            stream_analytics_job_name=cdktf.Token.as_string(data_azurerm_stream_analytics_job_example.name),
            table="ExampleTable",
            user=cdktf.Token.as_string(azurerm_synapse_workspace_example.sql_administrator_login)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_stream_analytics_output_synapse_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Stream Output. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) The name of the Resource Group where the Stream Analytics Job exists. Changing this forces a new resource to be created.

* `stream_analytics_job_name` - (Required) The name of the Stream Analytics Job. Changing this forces a new resource to be created.

* `server` - (Required) The name of the SQL server containing the Azure SQL database. Changing this forces a new resource to be created.

* `database` - (Required) The name of the Azure SQL database. Changing this forces a new resource to be created.

* `user` - (Required) The user name that will be used to connect to the Azure SQL database. Changing this forces a new resource to be created.

* `password` - (Required) The password that will be used to connect to the Azure SQL database. 

* `table` - (Required) The name of the table in the Azure SQL database. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Stream Analytics Output to an Azure Synapse Analytics Workspace.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Stream Analytics Output to an Azure Synapse Analytics Workspace.
* `update` - (Defaults to 30 minutes) Used when updating the Stream Analytics Output to an Azure Synapse Analytics Workspace.
* `read` - (Defaults to 5 minutes) Used when retrieving the Stream Analytics Output to an Azure Synapse Analytics Workspace.
* `delete` - (Defaults to 30 minutes) Used when deleting the Stream Analytics Output to an Azure Synapse Analytics Workspace.

## Import

A Stream Analytics Output to an Azure Synapse Analytics Workspace can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_stream_analytics_output_synapse.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.StreamAnalytics/streamingJobs/job1/outputs/output1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-f6c9489b7d02515a501a897792555398b2873f37fa91a63c39d40b0c4b7dc817 -->