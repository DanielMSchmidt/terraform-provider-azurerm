---
subcategory: "Dashboard"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_dashboard_grafana"
description: |-
  Manages a Dashboard Grafana.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_dashboard_grafana

Manages a Dashboard Grafana.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_dashboard_grafana_example =
        azurerm.dashboard_grafana.DashboardGrafana(self, "example_1",
            api_key_enabled=True,
            deterministic_outbound_ip_enabled=True,
            identity=DashboardGrafanaIdentity(
                type="SystemAssigned"
            ),
            location="West Europe",
            name="example-dg",
            public_network_access_enabled=False,
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            tags={
                "key": "value"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_dashboard_grafana_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) Specifies the name which should be used for this Dashboard Grafana. Changing this forces a new Dashboard Grafana to be created.

* `resource_group_name` - (Required) Specifies the name of the Resource Group where the Dashboard Grafana should exist. Changing this forces a new Dashboard Grafana to be created.

* `location` - (Required) Specifies the Azure Region where the Dashboard Grafana should exist. Changing this forces a new Dashboard Grafana to be created.

* `api_key_enabled` - (Optional) Whether to enable the api key setting of the Grafana instance. Defaults to `false`.

* `auto_generated_domain_name_label_scope` - (Optional) Scope for dns deterministic name hash calculation. The only possible value is `TenantReuse`. Defaults to `TenantReuse`.

* `deterministic_outbound_ip_enabled` - (Optional) Whether to enable the Grafana instance to use deterministic outbound IPs. Defaults to `false`.

* `azure_monitor_workspace_integrations` - (Optional) A `azure_monitor_workspace_integrations` block as defined below.

* `identity` - (Optional) An `identity` block as defined below. Changing this forces a new Dashboard Grafana to be created.

* `public_network_access_enabled` - (Optional) Whether to enable traffic over the public interface. Defaults to `true`.

* `sku` - (Optional) The name of the SKU used for the Grafana instance. The only possible value is `Standard`. Defaults to `Standard`. Changing this forces a new Dashboard Grafana to be created.

* `tags` - (Optional) A mapping of tags which should be assigned to the Dashboard Grafana.

* `zone_redundancy_enabled` - (Optional) Whether to enable the zone redundancy setting of the Grafana instance. Defaults to `false`. Changing this forces a new Dashboard Grafana to be created.

---

An `azure_monitor_workspace_integrations` block supports the following:

* `resource_id` - (Required) Specifies the resource ID of the connected Azure Monitor Workspace.

---

An `identity` block supports the following:

* `type` - (Required) Specifies the type of Managed Service Identity. Possible values are `SystemAssigned`, `UserAssigned`. Changing this forces a new resource to be created.

* `identity_ids` - (Optional) Specifies the list of User Assigned Managed Service Identity IDs which should be assigned to this Dashboard Grafana.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Dashboard Grafana.

* `endpoint` - The endpoint of the Grafana instance.

* `grafana_version` - The Grafana software version.

* `identity` - An `identity` block as defined below.

* `outbound_ip` - List of outbound IPs if deterministicOutboundIP is enabled.

---

An `identity` block exports the following:

* `principal_id` - The Principal ID associated with this Managed Service Identity.

* `tenant_id` - The Tenant ID associated with this Managed Service Identity.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Dashboard Grafana.
* `read` - (Defaults to 5 minutes) Used when retrieving the Dashboard Grafana.
* `update` - (Defaults to 30 minutes) Used when updating the Dashboard Grafana.
* `delete` - (Defaults to 30 minutes) Used when deleting the Dashboard Grafana.

## Import

Dashboard Grafana can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_dashboard_grafana.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resourceGroup1/providers/Microsoft.Dashboard/grafana/workspace1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-dac3c82e80d7f05b1731862a0740fbf09c3c62334cbaafd0164600da76d99ad7 -->