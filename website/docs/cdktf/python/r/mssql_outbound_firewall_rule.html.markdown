---
subcategory: "Database"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_mssql_outbound_firewall_rule"
description: |-
  Manages an Azure SQL Outbound Firewall Rule.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_mssql_outbound_firewall_rule

Allows you to manage an Azure SQL Outbound Firewall Rule.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_mssql_server_example = azurerm.mssql_server.MssqlServer(self, "example_1",
            administrator_login="4dm1n157r470r",
            administrator_login_password="4-v3ry-53cr37-p455w0rd",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="mysqlserver",
            outbound_network_restriction_enabled=True,
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            version="12.0"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_mssql_server_example.override_logical_id("example")
        azurerm_mssql_outbound_firewall_rule_example =
        azurerm.mssql_outbound_firewall_rule.MssqlOutboundFirewallRule(self, "example_2",
            name="sqlexamplefdqn.database.windows.net",
            server_id=cdktf.Token.as_string(azurerm_mssql_server_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_mssql_outbound_firewall_rule_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the outbound firewall rule. This should be a FQDN. Changing this forces a new resource to be created.

* `server_id` - (Required) The resource ID of the SQL Server on which to create the Outbound Firewall Rule. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The SQL Outbound Firewall Rule ID.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the SQL Outbound Firewall Rule.
* `update` - (Defaults to 30 minutes) Used when updating the SQL Outbound Firewall Rule.
* `read` - (Defaults to 5 minutes) Used when retrieving the SQL Outbound Firewall Rule.
* `delete` - (Defaults to 30 minutes) Used when deleting the SQL Outbound Firewall Rule.

## Import

SQL Outbound Firewall Rules can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_mssql_outbound_firewall_rule.rule1 /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/myresourcegroup/providers/Microsoft.Sql/servers/myserver/outboundFirewallRules/fqdn1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-acc8dacd716800dbb67edaa54e3fd15a58400fd0fff81ca7171cc6cabc85160b -->