---
subcategory: "Monitor"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_monitor_action_rule_action_group"
description: |-
  Manages an Monitor Action Rule which type is action group.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_monitor_action_rule_action_group

Manages a Monitor Action Rule which type is action group.

!> **NOTE:** This resource has been deprecated in version 3.0 of the AzureRM provider and will be removed in version 4.0. Please use [`azurerm_monitor_alert_processing_rule_action_group`](https://registry.terraform.io/providers/hashicorp/azurerm/latest/docs/resources/monitor_alert_processing_rule_action_group) resource instead.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_monitor_action_group_example =
        azurerm.monitor_action_group.MonitorActionGroup(self, "example_1",
            name="example-action-group",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            short_name="example"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_monitor_action_group_example.override_logical_id("example")
        azurerm_monitor_action_rule_action_group_example =
        azurerm.monitor_action_rule_action_group.MonitorActionRuleActionGroup(self, "example_2",
            action_group_id=cdktf.Token.as_string(azurerm_monitor_action_group_example.id),
            name="example-amar",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            scope=MonitorActionRuleActionGroupScope(
                resource_ids=[cdktf.Token.as_string(azurerm_resource_group_example.id)],
                type="ResourceGroup"
            ),
            tags={
                "foo": "bar"
            }
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_monitor_action_rule_action_group_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Monitor Action Rule. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) Specifies the name of the resource group in which the Monitor Action Rule should exist. Changing this forces a new resource to be created.

* `action_group_id` - (Required) Specifies the resource id of monitor action group.

* `description` - (Optional) Specifies a description for the Action Rule.

* `enabled` - (Optional) Is the Action Rule enabled? Defaults to `true`.

* `scope` - (Optional) A `scope` block as defined below.

* `condition` - (Optional) A `condition` block as defined below.

* `tags` - (Optional) A mapping of tags to assign to the resource.

---

The `scope` block supports the following:

* `type` - (Required) Specifies the type of target scope. Possible values are `ResourceGroup` and `Resource`.

* `resource_ids` - (Required) A list of resource IDs of the given scope type which will be the target of action rule.

---

The `condition` block supports the following:

* `alert_context` - (Optional) A `alert_context` block as defined below.

* `alert_rule_id` - (Optional) A `alert_rule_id` block as defined below.

* `description` - (Optional) A `description` block as defined below.

* `monitor` - (Optional) A `monitor` block as defined below.

* `monitor_service` - (Optional) A `monitor_service` as block defined below.

* `severity` - (Optional) A `severity` block as defined below.

* `target_resource_type` - (Optional) A `target_resource_type` block as defined below.

---

The `alert_context` block supports the following:

* `operator` - (Required) The operator for a given condition. Possible values are `Equals`, `NotEquals`, `Contains`, and `DoesNotContain`.

* `values` - (Required) A list of values to match for a given condition.

---

The `alert_rule_id` block supports the following:

* `operator` - (Required) The operator for a given condition. Possible values are `Equals`, `NotEquals`, `Contains`, and `DoesNotContain`.

* `values` - (Required) A list of values to match for a given condition.

---

The `description` block supports the following:

* `operator` - (Required) The operator for a given condition. Possible values are `Equals`, `NotEquals`, `Contains`, and `DoesNotContain`.

* `values` - (Required) A list of values to match for a given condition.

---

The `monitor` block supports the following:

* `operator` - (Required) The operator for a given condition. Possible values are `Equals` and `NotEquals`.

* `values` - (Required) A list of values to match for a given condition. Possible values are `Fired` and `Resolved`.

---

The `monitor_service` block supports the following:

* `operator` - (Required) The operator for a given condition. Possible values are `Equals` and `NotEquals`.

* `values` - (Required) A list of values to match for a given condition. Possible values are `ActivityLog Administrative`, `ActivityLog Autoscale`, `ActivityLog Policy`, `ActivityLog Recommendation`, `ActivityLog Security`, `Application Insights`, `Azure Backup`, `Azure Stack Edge`, `Azure Stack Hub`, `Custom`, `Data Box Gateway`, `Health Platform`, `Log Alerts V2`, `Log Analytics`, `Platform`, `Resource Health`, `Smart Detector` and `VM Insights - Health`.

---

The `severity` block supports the following:

* `operator` - (Required) The operator for a given condition. Possible values are `Equals`and `NotEquals`.

* `values` - (Required) A list of values to match for a given condition. Possible values are `Sev0`, `Sev1`, `Sev2`, `Sev3`, and `Sev4`.

---

The `target_resource_type` block supports the following:

* `operator` - (Required) The operator for a given condition. Possible values are `Equals` and `NotEquals`.

* `values` - (Required) A list of values to match for a given condition. The values should be valid resource types.

---

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Monitor Action Rule.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Monitor Action Rule.
* `read` - (Defaults to 5 minutes) Used when retrieving the Monitor Action Rule.
* `update` - (Defaults to 30 minutes) Used when updating the Monitor Action Rule.
* `delete` - (Defaults to 30 minutes) Used when deleting the Monitor Action Rule.

## Import

Monitor Action Rule can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_monitor_action_rule_action_group.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.AlertsManagement/actionRules/actionRule1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-9a7368c6b782bafa2c53f618f9339879af837136a59f6b469e71adb4d4c8c657 -->