---
subcategory: "Storage"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_storage_object_replication"
description: |-
  Copy Block Blobs between a source storage account and a destination account
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_storage_object_replication

Manages a Storage Object Replication.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_dst = azurerm.resource_group.ResourceGroup(self, "dst",
            location="East US",
            name="dstResourceGroupName"
        )
        azurerm_resource_group_src = azurerm.resource_group.ResourceGroup(self, "src",
            location="West Europe",
            name="srcResourceGroupName"
        )
        azurerm_storage_account_dst = azurerm.storage_account.StorageAccount(self, "dst_2",
            account_replication_type="LRS",
            account_tier="Standard",
            blob_properties=StorageAccountBlobProperties(
                change_feed_enabled=True,
                versioning_enabled=True
            ),
            location=cdktf.Token.as_string(azurerm_resource_group_dst.location),
            name="dststorageaccount",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_dst.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_dst.override_logical_id("dst")
        azurerm_storage_account_src = azurerm.storage_account.StorageAccount(self, "src_3",
            account_replication_type="LRS",
            account_tier="Standard",
            blob_properties=StorageAccountBlobProperties(
                change_feed_enabled=True,
                versioning_enabled=True
            ),
            location=cdktf.Token.as_string(azurerm_resource_group_src.location),
            name="srcstorageaccount",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_src.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_src.override_logical_id("src")
        azurerm_storage_container_dst =
        azurerm.storage_container.StorageContainer(self, "dst_4",
            container_access_type="private",
            name="dststrcontainer",
            storage_account_name=cdktf.Token.as_string(azurerm_storage_account_dst.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_container_dst.override_logical_id("dst")
        azurerm_storage_container_src =
        azurerm.storage_container.StorageContainer(self, "src_5",
            container_access_type="private",
            name="srcstrcontainer",
            storage_account_name=cdktf.Token.as_string(azurerm_storage_account_src.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_container_src.override_logical_id("src")
        azurerm.storage_object_replication.StorageObjectReplication(self, "example",
            destination_storage_account_id=cdktf.Token.as_string(azurerm_storage_account_dst.id),
            rules=[StorageObjectReplicationRules(
                destination_container_name=cdktf.Token.as_string(azurerm_storage_container_dst.name),
                source_container_name=cdktf.Token.as_string(azurerm_storage_container_src.name)
            )
            ],
            source_storage_account_id=cdktf.Token.as_string(azurerm_storage_account_src.id)
        )
```

## Arguments Reference

The following arguments are supported:

* `source_storage_account_id` - (Required) The ID of the source storage account. Changing this forces a new Storage Object Replication to be created.

* `destination_storage_account_id` - (Required) The ID of the destination storage account. Changing this forces a new Storage Object Replication to be created.

* `rules` - (Required) One or more `rules` blocks as defined below.

---

A `rules` block supports the following:

* `source_container_name` - (Required) The source storage container name. Changing this forces a new Storage Object Replication to be created.

* `destination_container_name` - (Required) The destination storage container name. Changing this forces a new Storage Object Replication to be created.

* `copy_blobs_created_after` - (Optional) The time after which the Block Blobs created will be copies to the destination. Possible values are `OnlyNewObjects`, `Everything` and time in RFC3339 format: `2006-01-02T15:04:00Z`.

* `filter_out_blobs_with_prefix` - (Optional) Specifies a list of filters prefixes, the blobs whose names begin with which will be replicated.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Storage Object Replication in the destination storage account. It's composed as format `source_object_replication_id;destination_object_replication_id`.

* `source_object_replication_id` - The ID of the Object Replication in the source storage account.

* `destination_object_replication_id` - The ID of the Object Replication in the destination storage account.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Storage Object Replication.
* `read` - (Defaults to 5 minutes) Used when retrieving the Storage Object Replication.
* `update` - (Defaults to 30 minutes) Used when updating the Storage Object Replication.
* `delete` - (Defaults to 30 minutes) Used when deleting the Storage Object Replication.

## Import

Storage Object Replication Policies can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_storage_object_replication.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Storage/storageAccounts/storageAccount1/objectReplicationPolicies/objectReplicationPolicy1;/subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group2/providers/Microsoft.Storage/storageAccounts/storageAccount2/objectReplicationPolicies/objectReplicationPolicy2
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-e57941579a51c12a553ef3ab00c6ff3c1e2edb06f24cfcb8978620e4d5e3fed9 -->