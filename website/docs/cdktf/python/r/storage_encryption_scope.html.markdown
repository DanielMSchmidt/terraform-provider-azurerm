---
subcategory: "Storage"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_storage_encryption_scope"
description: |-
  Manages a Storage Encryption Scope.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_storage_encryption_scope

Manages a Storage Encryption Scope.

~> **Note:** Storage Encryption Scopes are in Preview [more information can be found here](https://docs.microsoft.com/azure/storage/blobs/encryption-scope-manage).

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_storage_account_example =
        azurerm.storage_account.StorageAccount(self, "example_1",
            account_replication_type="LRS",
            account_tier="Standard",
            identity=StorageAccountIdentity(
                type="SystemAssigned"
            ),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplesa",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_example.override_logical_id("example")
        azurerm_storage_encryption_scope_example =
        azurerm.storage_encryption_scope.StorageEncryptionScope(self, "example_2",
            name="microsoftmanaged",
            source="Microsoft.Storage",
            storage_account_id=cdktf.Token.as_string(azurerm_storage_account_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_encryption_scope_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name which should be used for this Storage Encryption Scope. Changing this forces a new Storage Encryption Scope to be created.

* `source` - (Required) The source of the Storage Encryption Scope. Possible values are `Microsoft.KeyVault` and `Microsoft.Storage`.

* `storage_account_id` - (Required) The ID of the Storage Account where this Storage Encryption Scope is created. Changing this forces a new Storage Encryption Scope to be created.

* `infrastructure_encryption_required` - (Optional) Is a secondary layer of encryption with Platform Managed Keys for data applied? Changing this forces a new resource to be created.

---

* `key_vault_key_id` - (Optional) The ID of the Key Vault Key. Required when `source` is `Microsoft.KeyVault`.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Storage Encryption Scope.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Storage Encryption Scope.
* `read` - (Defaults to 5 minutes) Used when retrieving the Storage Encryption Scope.
* `update` - (Defaults to 30 minutes) Used when updating the Storage Encryption Scope.
* `delete` - (Defaults to 30 minutes) Used when deleting the Storage Encryption Scope.

## Import

Storage Encryption Scopes can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_storage_encryption_scope.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Storage/storageAccounts/account1/encryptionScopes/scope1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-572889a4f7d02776c7108da99c01989601e58d39384f743238978002bf2ceba5 -->