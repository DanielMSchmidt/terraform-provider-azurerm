---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_vpn_server_configuration_policy_group"
description: |-
  Manages a VPN Server Configuration Policy Group.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_vpn_server_configuration_policy_group

Manages a VPN Server Configuration Policy Group.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_vpn_server_configuration_example =
        azurerm.vpn_server_configuration.VpnServerConfiguration(self, "example_1",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-VPNSC",
            radius=VpnServerConfigurationRadius(
                server=[VpnServerConfigurationRadiusServer(
                    address="10.105.1.1",
                    score=15,
                    secret="vindicators-the-return-of-worldender"
                )
                ]
            ),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            vpn_authentication_types=["Radius"]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_vpn_server_configuration_example.override_logical_id("example")
        azurerm_vpn_server_configuration_policy_group_example =
        azurerm.vpn_server_configuration_policy_group.VpnServerConfigurationPolicyGroup(self, "example_2",
            name="example-VPNSCPG",
            policy=[VpnServerConfigurationPolicyGroupPolicy(
                name="policy1",
                type="RadiusAzureGroupId",
                value="6ad1bd08"
            )
            ],
            vpn_server_configuration_id=cdktf.Token.as_string(azurerm_vpn_server_configuration_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_vpn_server_configuration_policy_group_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The Name which should be used for this VPN Server Configuration Policy Group. Changing this forces a new resource to be created.

* `vpn_server_configuration_id` - (Required) The ID of the VPN Server Configuration that the VPN Server Configuration Policy Group belongs to. Changing this forces a new resource to be created.

* `policy` - (Required) One or more `policy` blocks as documented below.

* `is_default` - (Optional) Is this a default VPN Server Configuration Policy Group? Defaults to `false`. Changing this forces a new resource to be created.

* `priority` - (Optional) The priority of this VPN Server Configuration Policy Group. Defaults to `0`.

---

A `policy` block supports the following:

* `name` - (Required) The name of the VPN Server Configuration Policy member.

* `type` - (Required) The attribute type of the VPN Server Configuration Policy member. Possible values are `AADGroupId`, `CertificateGroupId` and `RadiusAzureGroupId`.

* `value` - (Required) The value of the attribute that is used for the VPN Server Configuration Policy member.

## Attributes Reference

In addition to the arguments above, the following attributes are exported:

* `id` - The ID of the VPN Server Configuration Policy Group.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the VPN Server Configuration Policy Group.
* `update` - (Defaults to 30 minutes) Used when updating the VPN Server Configuration Policy Group.
* `read` - (Defaults to 5 minutes) Used when retrieving the VPN Server Configuration Policy Group.
* `delete` - (Defaults to 30 minutes) Used when deleting the VPN Server Configuration Policy Group.

## Import

VPN Server Configuration Policy Groups can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_vpn_server_configuration_policy_group.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/resGroup1/providers/Microsoft.Network/vpnServerConfigurations/serverConfiguration1/configurationPolicyGroups/configurationPolicyGroup1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-faf3e9ac8fe3e65bc98e99c55721e37826a01193832c1928a3cbf64fd31ecb90 -->