---
subcategory: "Recovery Services"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_site_recovery_replication_recovery_plan"
description: |-
    Manages a Site Recovery Replication Recovery Plan within a Recovery Services vault.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_site_recovery_replication_recovery_plan

Manages a Site Recovery Replication Recovery Plan within a Recovery Services vault. A recovery plan gathers machines into recovery groups for the purpose of failover.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_primary = azurerm.resource_group.ResourceGroup(self, "primary",
            location="West US",
            name="tfex-replicated-vm-primary"
        )
        azurerm_resource_group_secondary =
        azurerm.resource_group.ResourceGroup(self, "secondary",
            location="East US",
            name="tfex-replicated-vm-secondary"
        )
        azurerm_storage_account_primary =
        azurerm.storage_account.StorageAccount(self, "primary_2",
            account_replication_type="LRS",
            account_tier="Standard",
            location=cdktf.Token.as_string(azurerm_resource_group_primary.location),
            name="primaryrecoverycache",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_primary.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_storage_account_primary.override_logical_id("primary")
        azurerm_virtual_network_primary =
        azurerm.virtual_network.VirtualNetwork(self, "primary_3",
            address_space=["192.168.1.0/24"],
            location=cdktf.Token.as_string(azurerm_resource_group_primary.location),
            name="network1",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_primary.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_primary.override_logical_id("primary")
        azurerm_virtual_network_secondary =
        azurerm.virtual_network.VirtualNetwork(self, "secondary_4",
            address_space=["192.168.2.0/24"],
            location=cdktf.Token.as_string(azurerm_resource_group_secondary.location),
            name="network2",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_secondary.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_secondary.override_logical_id("secondary")
        azurerm_public_ip_primary = azurerm.public_ip.PublicIp(self, "primary_5",
            allocation_method="Static",
            location=cdktf.Token.as_string(azurerm_resource_group_primary.location),
            name="vm-public-ip-primary",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_primary.name),
            sku="Basic"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_public_ip_primary.override_logical_id("primary")
        azurerm_public_ip_secondary = azurerm.public_ip.PublicIp(self, "secondary_6",
            allocation_method="Static",
            location=cdktf.Token.as_string(azurerm_resource_group_secondary.location),
            name="vm-public-ip-secondary",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_secondary.name),
            sku="Basic"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_public_ip_secondary.override_logical_id("secondary")
        azurerm_recovery_services_vault_vault =
        azurerm.recovery_services_vault.RecoveryServicesVault(self, "vault",
            location=cdktf.Token.as_string(azurerm_resource_group_secondary.location),
            name="example-recovery-vault",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_secondary.name),
            sku="Standard"
        )
        azurerm_site_recovery_fabric_primary =
        azurerm.site_recovery_fabric.SiteRecoveryFabric(self, "primary_8",
            location=cdktf.Token.as_string(azurerm_resource_group_primary.location),
            name="primary-fabric",
            recovery_vault_name=cdktf.Token.as_string(azurerm_recovery_services_vault_vault.name),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_secondary.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_site_recovery_fabric_primary.override_logical_id("primary")
        azurerm_site_recovery_fabric_secondary =
        azurerm.site_recovery_fabric.SiteRecoveryFabric(self, "secondary_9",
            location=cdktf.Token.as_string(azurerm_resource_group_secondary.location),
            name="secondary-fabric",
            recovery_vault_name=cdktf.Token.as_string(azurerm_recovery_services_vault_vault.name),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_secondary.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_site_recovery_fabric_secondary.override_logical_id("secondary")
        azurerm_site_recovery_network_mapping_network_mapping =
        azurerm.site_recovery_network_mapping.SiteRecoveryNetworkMapping(self, "network-mapping",
            name="network-mapping",
            recovery_vault_name=cdktf.Token.as_string(azurerm_recovery_services_vault_vault.name),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_secondary.name),
            source_network_id=cdktf.Token.as_string(azurerm_virtual_network_primary.id),
            source_recovery_fabric_name=cdktf.Token.as_string(azurerm_site_recovery_fabric_primary.name),
            target_network_id=cdktf.Token.as_string(azurerm_virtual_network_secondary.id),
            target_recovery_fabric_name=cdktf.Token.as_string(azurerm_site_recovery_fabric_secondary.name)
        )
        azurerm_site_recovery_protection_container_primary =
        azurerm.site_recovery_protection_container.SiteRecoveryProtectionContainer(self, "primary_11",
            name="primary-protection-container",
            recovery_fabric_name=cdktf.Token.as_string(azurerm_site_recovery_fabric_primary.name),
            recovery_vault_name=cdktf.Token.as_string(azurerm_recovery_services_vault_vault.name),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_secondary.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_site_recovery_protection_container_primary.override_logical_id("primary")
        azurerm_site_recovery_protection_container_secondary =
        azurerm.site_recovery_protection_container.SiteRecoveryProtectionContainer(self, "secondary_12",
            name="secondary-protection-container",
            recovery_fabric_name=cdktf.Token.as_string(azurerm_site_recovery_fabric_secondary.name),
            recovery_vault_name=cdktf.Token.as_string(azurerm_recovery_services_vault_vault.name),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_secondary.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_site_recovery_protection_container_secondary.override_logical_id("secondary")
        azurerm_site_recovery_replication_policy_policy =
        azurerm.site_recovery_replication_policy.SiteRecoveryReplicationPolicy(self, "policy",
            application_consistent_snapshot_frequency_in_minutes=cdktf.Token.as_number(
                cdktf.Op.mul(4, 60)),
            name="policy",
            recovery_point_retention_in_minutes=cdktf.Token.as_number(
                cdktf.Op.mul(24, 60)),
            recovery_vault_name=cdktf.Token.as_string(azurerm_recovery_services_vault_vault.name),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_secondary.name)
        )
        azurerm_subnet_primary = azurerm.subnet.Subnet(self, "primary_14",
            address_prefixes=["192.168.1.0/24"],
            name="network1-subnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_primary.name),
            virtual_network_name=cdktf.Token.as_string(azurerm_virtual_network_primary.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_subnet_primary.override_logical_id("primary")
        azurerm_subnet_secondary = azurerm.subnet.Subnet(self, "secondary_15",
            address_prefixes=["192.168.2.0/24"],
            name="network2-subnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_secondary.name),
            virtual_network_name=cdktf.Token.as_string(azurerm_virtual_network_secondary.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_subnet_secondary.override_logical_id("secondary")
        azurerm_network_interface_vm =
        azurerm.network_interface.NetworkInterface(self, "vm",
            ip_configuration=[NetworkInterfaceIpConfiguration(
                name="vm",
                private_ip_address_allocation="Dynamic",
                public_ip_address_id=cdktf.Token.as_string(azurerm_public_ip_primary.id),
                subnet_id=cdktf.Token.as_string(azurerm_subnet_primary.id)
            )
            ],
            location=cdktf.Token.as_string(azurerm_resource_group_primary.location),
            name="vm-nic",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_primary.name)
        )
        azurerm_site_recovery_protection_container_mapping_container_mapping =
        azurerm.site_recovery_protection_container_mapping.SiteRecoveryProtectionContainerMapping(self, "container-mapping",
            name="container-mapping",
            recovery_fabric_name=cdktf.Token.as_string(azurerm_site_recovery_fabric_primary.name),
            recovery_replication_policy_id=cdktf.Token.as_string(azurerm_site_recovery_replication_policy_policy.id),
            recovery_source_protection_container_name=cdktf.Token.as_string(azurerm_site_recovery_protection_container_primary.name),
            recovery_target_protection_container_id=cdktf.Token.as_string(azurerm_site_recovery_protection_container_secondary.id),
            recovery_vault_name=cdktf.Token.as_string(azurerm_recovery_services_vault_vault.name),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_secondary.name)
        )
        azurerm_virtual_machine_vm = azurerm.virtual_machine.VirtualMachine(self, "vm_18",
            location=cdktf.Token.as_string(azurerm_resource_group_primary.location),
            name="vm",
            network_interface_ids=[
                cdktf.Token.as_string(azurerm_network_interface_vm.id)
            ],
            os_profile=VirtualMachineOsProfile(
                admin_password="test-pwd-123",
                admin_username="test-admin-123",
                computer_name="vm"
            ),
            os_profile_linux_config=VirtualMachineOsProfileLinuxConfig(
                disable_password_authentication=False
            ),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_primary.name),
            storage_image_reference=VirtualMachineStorageImageReference(
                offer="CentOS",
                publisher="OpenLogic",
                sku="7.5",
                version="latest"
            ),
            storage_os_disk=VirtualMachineStorageOsDisk(
                caching="ReadWrite",
                create_option="FromImage",
                managed_disk_type="Premium_LRS",
                name="vm-os-disk",
                os_type="Linux"
            ),
            vm_size="Standard_B1s"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_machine_vm.override_logical_id("vm")
        azurerm_site_recovery_replicated_vm_vm_replication =
        azurerm.site_recovery_replicated_vm.SiteRecoveryReplicatedVm(self, "vm-replication",
            depends_on=[azurerm_site_recovery_protection_container_mapping_container_mapping, azurerm_site_recovery_network_mapping_network_mapping
            ],
            managed_disk=[SiteRecoveryReplicatedVmManagedDisk(
                disk_id=cdktf.Token.as_string(
                    cdktf.property_access(azurerm_virtual_machine_vm.storage_os_disk, ["0", "managed_disk_id"
                    ])),
                staging_storage_account_id=cdktf.Token.as_string(azurerm_storage_account_primary.id),
                target_disk_type="Premium_LRS",
                target_replica_disk_type="Premium_LRS",
                target_resource_group_id=cdktf.Token.as_string(azurerm_resource_group_secondary.id)
            )
            ],
            name="vm-replication",
            network_interface=[SiteRecoveryReplicatedVmNetworkInterface(
                recovery_public_ip_address_id=cdktf.Token.as_string(azurerm_public_ip_secondary.id),
                source_network_interface_id=cdktf.Token.as_string(azurerm_network_interface_vm.id),
                target_subnet_name=cdktf.Token.as_string(azurerm_subnet_secondary.name)
            )
            ],
            recovery_replication_policy_id=cdktf.Token.as_string(azurerm_site_recovery_replication_policy_policy.id),
            recovery_vault_name=cdktf.Token.as_string(azurerm_recovery_services_vault_vault.name),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_secondary.name),
            source_recovery_fabric_name=cdktf.Token.as_string(azurerm_site_recovery_fabric_primary.name),
            source_recovery_protection_container_name=cdktf.Token.as_string(azurerm_site_recovery_protection_container_primary.name),
            source_vm_id=cdktf.Token.as_string(azurerm_virtual_machine_vm.id),
            target_recovery_fabric_id=cdktf.Token.as_string(azurerm_site_recovery_fabric_secondary.id),
            target_recovery_protection_container_id=cdktf.Token.as_string(azurerm_site_recovery_protection_container_secondary.id),
            target_resource_group_id=cdktf.Token.as_string(azurerm_resource_group_secondary.id)
        )
        azurerm.site_recovery_replication_recovery_plan.SiteRecoveryReplicationRecoveryPlan(self, "example",
            name="example-recover-plan",
            recovery_group=[SiteRecoveryReplicationRecoveryPlanRecoveryGroup(
                replicated_protected_items=[
                    cdktf.Token.as_string(azurerm_site_recovery_replicated_vm_vm_replication.id)
                ],
                type="Boot"
            ), SiteRecoveryReplicationRecoveryPlanRecoveryGroup(
                type="Failover"
            ), SiteRecoveryReplicationRecoveryPlanRecoveryGroup(
                type="Shutdown"
            )
            ],
            recovery_vault_id=cdktf.Token.as_string(azurerm_recovery_services_vault_vault.id),
            source_recovery_fabric_id=cdktf.Token.as_string(azurerm_site_recovery_fabric_primary.id),
            target_recovery_fabric_id=cdktf.Token.as_string(azurerm_site_recovery_fabric_secondary.id)
        )
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) The name of the Replication Plan. The name can contain only letters, numbers, and hyphens. It should start with a letter and end with a letter or a number. Can be a maximum of 63 characters. Changing this forces a new resource to be created.

* `recovery_vault_id` - (Required) The ID of the vault that should be updated. Changing this forces a new resource to be created.

* `source_recovery_fabric_id` - (Required) ID of source fabric to be recovered from. Changing this forces a new Replication Plan to be created.

* `target_recovery_fabric_id` - (Required) ID of target fabric to recover. Changing this forces a new Replication Plan to be created.

* `recovery_group` - (Optional) Three or more `recovery_group` block defined as below.

* `azure_to_azure_settings` - (Optional) An `azure_to_azure_settings` block defined as block.

---

A `recovery_group` block supports the following:

* `type` - (Required) The Recovery Plan Group Type. Possible values are `Boot`, `Failover` and `Shutdown`.

* `replicated_protected_items` - (Optional) (required) one or more id of protected VM.

* `pre_action` - (Optional) one or more `action` block as defined below. which will be executed before the group recovery.

* `post_action` - (Optional) one or more `action` block as defined below. which will be executed after the group recovery.

---

An `action` block supports the following:

* `name` - (Required) Name of the Action.

* `type` - (Required) Type of the action detail. Possible values are `AutomationRunbookActionDetails`, `ManualActionDetails` and `ScriptActionDetails`.

* `fail_over_directions` - (Required) Directions of fail over. Possible values are `PrimaryToRecovery` and `RecoveryToPrimary`

* `fail_over_types` - (Required) Types of fail over. Possible values are `TestFailover`, `PlannedFailover` and `UnplannedFailover`

* `fabric_location` - (Optional) The fabric location of runbook or script. Possible values are `Primary` and `Recovery`.

-> **NOTE:** This is required when `type` is set to `AutomationRunbookActionDetails` or `ScriptActionDetails`.

* `runbook_id` - (Optional) Id of runbook.

-> **NOTE:** This property is required when `type` is set to `AutomationRunbookActionDetails`.

* `manual_action_instruction` - (Optional) Instructions of manual action.

-> **NOTE:** This property is required when `type` is set to `ManualActionDetails`.

* `script_path` - (Optional) Path of action script.

-> **NOTE:** This property is required when `type` is set to `ScriptActionDetails`.

---

An `azure_to_azure_settings` block supports the following:

* `primary_zone` - (Optional) The Availability Zone in which the VM is located. Changing this forces a new Site Recovery Replication Recovery Plan to be created.

* `recovery_zone` - (Optional) The Availability Zone in which the VM is recovered. Changing this forces a new Site Recovery Replication Recovery Plan to be created.

-> **Note:** `primary_zone` and `recovery_zone` must be specified together.

* `primary_edge_zone` - (Optional) The Edge Zone within the Azure Region where the VM exists. Changing this forces a new Site Recovery Replication Recovery Plan to be created.

* `recovery_edge_zone` - (Optional) The Edge Zone within the Azure Region where the VM is recovered. Changing this forces a new Site Recovery Replication Recovery Plan to be created.

-> **Note:** `primary_edge_zone` and `recovery_edge_zone` must be specified together.

## Attributes Reference

In addition to the arguments above, the following attributes are exported:

* `id` - The ID of the Site Recovery Fabric.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Site Recovery Replication Plan.
* `update` - (Defaults to 30 minutes) Used when updating the Site Recovery Replication Plan.
* `read` - (Defaults to 5 minutes) Used when retrieving the Site Recovery Replication Plan.
* `delete` - (Defaults to 30 minutes) Used when deleting the Site Recovery Replication Plan.

## Import

Site Recovery Fabric can be imported using the `resource id`, e.g.

```shell
terraform import  azurerm_site_recovery_replication_recovery_plan.example /subscriptions/00000000-0000-0000-0000-00000000000/resourceGroups/groupName/providers/Microsoft.RecoveryServices/vaults/vaultName/replicationRecoveryPlans/planName
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-1f02f817e6d53687beeca57144d0afdd73918c8a4a29f11eabbd742464b7f13e -->