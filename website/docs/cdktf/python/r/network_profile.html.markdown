---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_network_profile"
description: |-
  Manages a Network Profile.

---


<!-- Please do not edit this file, it is generated. -->
# azurerm_network_profile

Manages a Network Profile.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="examplegroup"
        )
        azurerm_virtual_network_example =
        azurerm.virtual_network.VirtualNetwork(self, "example_1",
            address_space=["10.1.0.0/16"],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplevnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_example.override_logical_id("example")
        azurerm_subnet_example = azurerm.subnet.Subnet(self, "example_2",
            address_prefixes=["10.1.0.0/24"],
            delegation=[SubnetDelegation(
                name="delegation",
                service_delegation=SubnetDelegationServiceDelegation(
                    actions=["Microsoft.Network/virtualNetworks/subnets/action"],
                    name="Microsoft.ContainerInstance/containerGroups"
                )
            )
            ],
            name="examplesubnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_network_name=cdktf.Token.as_string(azurerm_virtual_network_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_subnet_example.override_logical_id("example")
        azurerm_network_profile_example =
        azurerm.network_profile.NetworkProfile(self, "example_3",
            container_network_interface=NetworkProfileContainerNetworkInterface(
                ip_configuration=[NetworkProfileContainerNetworkInterfaceIpConfiguration(
                    name="exampleipconfig",
                    subnet_id=cdktf.Token.as_string(azurerm_subnet_example.id)
                )
                ],
                name="examplecnic"
            ),
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="examplenetprofile",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_network_profile_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Network Profile. Changing this forces a new resource to be created.

* `location` - (Required) Specifies the supported Azure location where the resource exists. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) The name of the resource group in which to create the resource. Changing this forces a new resource to be created.

* `container_network_interface` - (Required) A `container_network_interface` block as documented below.

* `tags` - (Optional) A mapping of tags to assign to the resource.

---

A `container_network_interface` block supports the following:

* `name` - (Required) Specifies the name of the IP Configuration.

* `ip_configuration` - (Required) One or more `ip_configuration` blocks as documented below.

---

A `ip_configuration` block supports the following:

* `name` - (Required) Specifies the name of the IP Configuration.

* `subnet_id` - (Required) Reference to the subnet associated with the IP Configuration.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Network Profile.

* `container_network_interface_ids` - A list of Container Network Interface IDs.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Network Profile.
* `update` - (Defaults to 30 minutes) Used when updating the Network Profile.
* `read` - (Defaults to 5 minutes) Used when retrieving the Network Profile.
* `delete` - (Defaults to 30 minutes) Used when deleting the Network Profile.

## Import

Network Profile can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_network_profile.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Network/networkProfiles/examplenetprofile
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-66e71689f5c45f42adb3b3bd9263a6048c7ae81de8174177b1c20e4842d21354 -->