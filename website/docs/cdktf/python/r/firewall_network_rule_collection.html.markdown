---
subcategory: "Network"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_firewall_network_rule_collection"
description: |-
  Manages a Network Rule Collection within an Azure Firewall.

---


<!-- Please do not edit this file, it is generated. -->
# azurerm_firewall_network_rule_collection

Manages a Network Rule Collection within an Azure Firewall.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_virtual_network_example =
        azurerm.virtual_network.VirtualNetwork(self, "example_1",
            address_space=["10.0.0.0/16"],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="testvnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_example.override_logical_id("example")
        azurerm_public_ip_example = azurerm.public_ip.PublicIp(self, "example_2",
            allocation_method="Static",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="testpip",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku="Standard"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_public_ip_example.override_logical_id("example")
        azurerm_subnet_example = azurerm.subnet.Subnet(self, "example_3",
            address_prefixes=["10.0.1.0/24"],
            name="AzureFirewallSubnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_network_name=cdktf.Token.as_string(azurerm_virtual_network_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_subnet_example.override_logical_id("example")
        azurerm_firewall_example = azurerm.firewall.Firewall(self, "example_4",
            ip_configuration=[FirewallIpConfiguration(
                name="configuration",
                public_ip_address_id=cdktf.Token.as_string(azurerm_public_ip_example.id),
                subnet_id=cdktf.Token.as_string(azurerm_subnet_example.id)
            )
            ],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="testfirewall",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            sku_name="AZFW_VNet",
            sku_tier="Standard"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_firewall_example.override_logical_id("example")
        azurerm_firewall_network_rule_collection_example =
        azurerm.firewall_network_rule_collection.FirewallNetworkRuleCollection(self, "example_5",
            action="Allow",
            azure_firewall_name=cdktf.Token.as_string(azurerm_firewall_example.name),
            name="testcollection",
            priority=100,
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            rule=[FirewallNetworkRuleCollectionRule(
                destination_addresses=["8.8.8.8", "8.8.4.4"],
                destination_ports=["53"],
                name="testrule",
                protocols=["TCP", "UDP"],
                source_addresses=["10.0.0.0/16"]
            )
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_firewall_network_rule_collection_example.override_logical_id("example")
```

## Argument Reference

The following arguments are supported:

* `name` - (Required) Specifies the name of the Network Rule Collection which must be unique within the Firewall. Changing this forces a new resource to be created.

* `azure_firewall_name` - (Required) Specifies the name of the Firewall in which the Network Rule Collection should be created. Changing this forces a new resource to be created.

* `resource_group_name` - (Required) Specifies the name of the Resource Group in which the Firewall exists. Changing this forces a new resource to be created.

* `priority` - (Required) Specifies the priority of the rule collection. Possible values are between `100` - `65000`.

* `action` - (Required) Specifies the action the rule will apply to matching traffic. Possible values are `Allow` and `Deny`.

* `rule` - (Required) One or more `rule` blocks as defined below.

---

A `rule` block supports the following:

* `name` - (Required) Specifies the name of the rule.

* `description` - (Optional) Specifies a description for the rule.

* `source_addresses` - (Optional) A list of source IP addresses and/or IP ranges.

* `source_ip_groups` - (Optional) A list of IP Group IDs for the rule.

-> **NOTE** At least one of `source_addresses` and `source_ip_groups` must be specified for a rule.

* `destination_addresses` - (Optional) Either a list of destination IP addresses and/or IP ranges, or a list of destination [Service Tags](https://docs.microsoft.com/azure/virtual-network/service-tags-overview#available-service-tags).

* `destination_ip_groups` - (Optional) A list of destination IP Group IDs for the rule.

* `destination_fqdns` - (Optional) A list of destination FQDNS for the rule.

-> **NOTE** [You must enable DNS Proxy to use FQDNs in your network rules](https://docs.microsoft.com/azure/firewall/fqdn-filtering-network-rules).

-> **NOTE** At least one of `destination_addresses`, `destination_ip_groups` and `destination_fqdns` must be specified for a rule.

* `destination_ports` - (Required) A list of destination ports.

* `protocols` - (Required) A list of protocols. Possible values are `Any`, `ICMP`, `TCP` and `UDP`.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/language/resources/syntax#operation-timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Firewall Network Rule Collection.
* `update` - (Defaults to 30 minutes) Used when updating the Firewall Network Rule Collection.
* `read` - (Defaults to 5 minutes) Used when retrieving the Firewall Network Rule Collection.
* `delete` - (Defaults to 30 minutes) Used when deleting the Firewall Network Rule Collection.

## Import

Azure Firewall Network Rule Collections can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_firewall_network_rule_collection.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/mygroup1/providers/Microsoft.Network/azureFirewalls/myfirewall/networkRuleCollections/mycollection
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-b6408a31b3ede5c30d585d1f2599c610d39a89f6ef0e415fc843e2fa906ea19a -->