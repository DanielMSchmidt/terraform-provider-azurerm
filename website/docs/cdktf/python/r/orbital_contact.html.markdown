---
subcategory: "Orbital"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_orbital_contact_profile"
description: |-
  Manages an orbital contact resource.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_orbital_contact

Manages an orbital contact.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="rg-example"
        )
        azurerm_virtual_network_example =
        azurerm.virtual_network.VirtualNetwork(self, "example_1",
            address_space=["10.0.0.0/16"],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-vnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_virtual_network_example.override_logical_id("example")
        azurerm_orbital_spacecraft_example =
        azurerm.orbital_spacecraft.OrbitalSpacecraft(self, "example_2",
            links=[OrbitalSpacecraftLinks(
                bandwidth_mhz=100,
                center_frequency_mhz=101,
                direction="Uplink",
                name="examplename",
                polarization="LHCP"
            )
            ],
            location="westeurope",
            name="example-spacecraft",
            norad_id="12345",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            tags={
                "aks-managed-cluster-name": "9a57225d-a405-4d40-aa46-f13d2342abef"
            },
            title_line="AQUA",
            two_line_elements=["1 23455U 94089A   97320.90946019  .00000140  00000-0  10191-3 0  2621", "2 23455  99.0090 272.6745 0008546 223.1686 136.8816 14.11711747148495"
            ]
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_orbital_spacecraft_example.override_logical_id("example")
        azurerm_subnet_example = azurerm.subnet.Subnet(self, "example_3",
            address_prefixes=["10.0.1.0/24"],
            delegation=[SubnetDelegation(
                name="orbitalgateway",
                service_delegation=SubnetDelegationServiceDelegation(
                    actions=["Microsoft.Network/publicIPAddresses/join/action", "Microsoft.Network/virtualNetworks/subnets/join/action", "Microsoft.Network/virtualNetworks/read", "Microsoft.Network/publicIPAddresses/read"
                    ],
                    name="Microsoft.Orbital/orbitalGateways"
                )
            )
            ],
            name="example-subnet",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name),
            virtual_network_name=cdktf.Token.as_string(azurerm_virtual_network_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_subnet_example.override_logical_id("example")
        azurerm_orbital_contact_profile_example =
        azurerm.orbital_contact_profile.OrbitalContactProfile(self, "example_4",
            auto_tracking="disabled",
            links=[OrbitalContactProfileLinks(
                channels=[OrbitalContactProfileLinksChannels(
                    bandwidth_mhz=100,
                    center_frequency_mhz=101,
                    end_point=[OrbitalContactProfileLinksChannelsEndPoint(
                        end_point_name="AQUA_command",
                        ip_address="10.0.1.0",
                        port="49153",
                        protocol="TCP"
                    )
                    ],
                    name="channelname"
                )
                ],
                direction="Uplink",
                name="RHCP_UL",
                polarization="RHCP"
            )
            ],
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            minimum_variable_contact_duration="PT1M",
            name="example-contactprofile",
            network_configuration_subnet_id=cdktf.Token.as_string(azurerm_subnet_example.id),
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_orbital_contact_profile_example.override_logical_id("example")
        azurerm_orbital_contact_example =
        azurerm.orbital_contact.OrbitalContact(self, "example_5",
            contact_profile_id=cdktf.Token.as_string(azurerm_orbital_contact_profile_example.id),
            ground_station_name="WESTUS2_0",
            name="example-contact",
            reservation_end_time="2020-07-16T20:55:00.00Z",
            reservation_start_time="2020-07-16T20:35:00.00Z",
            spacecraft_id=cdktf.Token.as_string(azurerm_orbital_spacecraft_example.id)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_orbital_contact_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `name` - (Required) The name of the Contact. Changing this forces a new resource to be created. Changing this forces a new resource to be created.

* `spacecraft_id` - (Required) The ID of the spacecraft which the contact will be made to. Changing this forces a new resource to be created.

* `reservation_start_time` - (Required) Reservation start time of the Contact. Changing this forces a new resource to be created.

* `reservation_end_time` - (Required) Reservation end time of the Contact. Changing this forces a new resource to be created.

* `ground_station_name` - (Required) Name of the Azure ground station. Changing this forces a new resource to be created.

* `contact_profile_id` - (Required) ID of the orbital contact profile. Changing this forces a new resource to be created.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Contact.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Contact.
* `read` - (Defaults to 5 minutes) Used when retrieving the Contact.
* `update` - (Defaults to 30 minutes) Used when updating the Contact.
* `delete` - (Defaults to 30 minutes) Used when deleting the Contact.

## Import

Spacecraft can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_orbital_contact.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.Orbital/spacecrafts/spacecraft1/contacts/contact1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-68381e6d65cc85dd5bfbe1368412c77c777e1236fcb300b42f7e8ccbcadfb59d -->