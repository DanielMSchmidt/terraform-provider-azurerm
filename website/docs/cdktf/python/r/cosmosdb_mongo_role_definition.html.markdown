---
subcategory: "CosmosDB (DocumentDB)"
layout: "azurerm"
page_title: "Azure Resource Manager: azurerm_cosmosdb_mongo_role_definition"
description: |-
  Manages a Cosmos DB Mongo Role Definition.
---


<!-- Please do not edit this file, it is generated. -->
# azurerm_cosmosdb_mongo_role_definition

Manages a Cosmos DB Mongo Role Definition.

## Example Usage

```python
import constructs as constructs
import cdktf as cdktf
# Provider bindings are generated by running cdktf get.
# See https://cdk.tf/provider-generation for more details.
import ...gen.providers.azurerm as azurerm
class MyConvertedCode(cdktf.TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        azurerm_resource_group_example = azurerm.resource_group.ResourceGroup(self, "example",
            location="West Europe",
            name="example-resources"
        )
        azurerm_cosmosdb_account_example =
        azurerm.cosmosdb_account.CosmosdbAccount(self, "example_1",
            capabilities=[CosmosdbAccountCapabilities(
                name="EnableMongo"
            ), CosmosdbAccountCapabilities(
                name="EnableMongoRoleBasedAccessControl"
            )
            ],
            consistency_policy=CosmosdbAccountConsistencyPolicy(
                consistency_level="Strong"
            ),
            geo_location=[CosmosdbAccountGeoLocation(
                failover_priority=0,
                location=cdktf.Token.as_string(azurerm_resource_group_example.location)
            )
            ],
            kind="MongoDB",
            location=cdktf.Token.as_string(azurerm_resource_group_example.location),
            name="example-ca",
            offer_type="Standard",
            resource_group_name=cdktf.Token.as_string(azurerm_resource_group_example.name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_cosmosdb_account_example.override_logical_id("example")
        azurerm_cosmosdb_mongo_database_example =
        azurerm.cosmosdb_mongo_database.CosmosdbMongoDatabase(self, "example_2",
            account_name=cdktf.Token.as_string(azurerm_cosmosdb_account_example.name),
            name="example-mongodb",
            resource_group_name=cdktf.Token.as_string(azurerm_cosmosdb_account_example.resource_group_name)
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_cosmosdb_mongo_database_example.override_logical_id("example")
        azurerm_cosmosdb_mongo_role_definition_example =
        azurerm.cosmosdb_mongo_role_definition.CosmosdbMongoRoleDefinition(self, "example_3",
            cosmos_mongo_database_id=cdktf.Token.as_string(azurerm_cosmosdb_mongo_database_example.id),
            role_name="example-roledefinition"
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        azurerm_cosmosdb_mongo_role_definition_example.override_logical_id("example")
```

## Arguments Reference

The following arguments are supported:

* `cosmos_mongo_database_id` - (Required) The resource ID of the Mongo DB. Changing this forces a new resource to be created.

* `role_name` - (Required) The user-friendly name for the Mongo Role Definition. It must be unique for the database account. Changing this forces a new resource to be created.

* `inherited_role_names` - (Optional) A list of Mongo Roles which are inherited to the Mongo Role Definition.

~> **Note:** The role that needs to be inherited should exist in the Mongo DB of `cosmos_mongo_database_id`.

* `privilege` - (Optional) A `privilege` block as defined below.

---

A `privilege` block supports the following:

* `actions` - (Required) A list of actions that are allowed.

* `resource` - (Required) A `resource` block as defined below.

---

A `resource` block supports the following:

* `collection_name` - (Optional) The name of the Mongo DB Collection that the Role Definition is applied.

* `db_name` - (Optional) The name of the Mongo DB that the Role Definition is applied.

## Attributes Reference

In addition to the Arguments listed above - the following Attributes are exported:

* `id` - The ID of the Cosmos DB Mongo Role Definition.

## Timeouts

The `timeouts` block allows you to specify [timeouts](https://www.terraform.io/docs/configuration/resources.html#timeouts) for certain actions:

* `create` - (Defaults to 30 minutes) Used when creating the Cosmos DB Mongo Role Definition.
* `read` - (Defaults to 5 minutes) Used when retrieving the Cosmos DB Mongo Role Definition.
* `update` - (Defaults to 30 minutes) Used when updating the Cosmos DB Mongo Role Definition.
* `delete` - (Defaults to 30 minutes) Used when deleting the Cosmos DB Mongo Role Definition.

## Import

Cosmos DB Mongo Role Definitions can be imported using the `resource id`, e.g.

```shell
terraform import azurerm_cosmosdb_mongo_role_definition.example /subscriptions/00000000-0000-0000-0000-000000000000/resourceGroups/group1/providers/Microsoft.DocumentDB/databaseAccounts/account1/mongodbRoleDefinitions/dbname1.rolename1
```

<!-- cache-key: cdktf-0.17.0-pre.15 input-aa8a0cd96eac7b2173dab414a1c8710df58fd86cea383ce68db97e1bec74599c -->